{"title":"Data Science","markdown":{"yaml":{"title":"Data Science","date":"2022-11-12"},"headingText":"探索性数据分析","containsRefs":false,"markdown":"\n\n\n可视化和数据转换的方法实现探索数据，统计学家称为是一个探索性数据分析(exploratory data analysis,EDA)\n同时这是一个循环可迭代的问题：\n- 对数据提出问题\n- 对数据进行可视化\n- 使用上一个步骤的结果来精炼问题，并提出新问题。\n\n### 准备工作\n\nEDA本质是一个创造的过程，问题的质量在于问题的数量。定义几个变量：\n- 变量\n- 值\n- 观测\n- 表格数据\n\n\n通过`dplyr::count()`手动计算结果。\n\n使用`binwidth`参数设定直方图中的间隔的宽度，参数是用x轴变量的单位来衡量的。使用直方图时候，试验不同的宽度对于其的影响。\n\n`arrange()`的工作方式与`filter()`函数相似，前者不是选择行，而是改变行的顺序。\n\n它接受的一个数据框和一组作为排序依据的列名作为参数。\n\n\n\n`desc()`降序排\n\n#### 使用管道的多重组合\n\n另一个将数据传入`ggplot`的方法是使用管道。\n\n 所有的聚合函数遵循的一个一般原则是：**若输入中存在缺失值，那么输出也会是缺失值。**聚合函数中还有一大好处是有`na.rm()`函数能够帮助去除缺失值。\n\n#### 计数\n\n`n()`或非缺失值的计数`sum(!is_na())`，可以检查一下是否有少量的数据作为结论\n\n将所有窜缺失值的航班数据找出\n\n进一步还可以筛取少量的分组，能够得到更好的展示效果\n\n#### 常见的摘要函数\n\n位置度量：使用`mean()`但`median()`也较为常用。均值是总数除以个数；中位数则是：50%的x大于它，同时50%的x小于它。\n\n`summarize()`实际上是生成了变量能够作为数据框来使用\n\n#### 典型值\n\n最终可以从图像中看出，喷发时间分为两组，一组以2分钟为主，另一组以4-5分钟为组\n\n#### 异常值\n\n这个分箱导致异常值的分箱高度太低。使用`coord_cartesian()`将y轴靠近0部分放大\n\n#### 缺失值\n\n- 丢弃所有可疑的行\n\n- 使用缺失值代替异常值，使用`mutate()`来创建一个新的变量来代替原有的变量\n\n\n### 相关变动\n\n相关变动就是描述多个变量之间的行为。以可视化的方式进行查看\n\n#### 两个分类变量\n\n### 模式和模型\n\n## 数据处理\n\n数据处理是一门艺术，将合适的形式倒入R，从而进行可视化和建模。\n\n自行生成一个tibble\n\n对两个分类变量的相关变动进行可视化表示，需要计算出每个变量组合的观测数量。（同时上述的`geom_point(color=n)`也能实现类似的功能）\n\n#### 提取子集\n如`$`和`[[`，`[[`能够按照名称或位置提取变量，`$`只能按照名称提取变量。\n\n#### 与旧代码交互\n\n### 使用readr数据导入\n\nreadr中的多数函数用于平面文件转换为数据框。\n- `read_csv()`\n- `read_fwf()`读取固定宽度的文件。\n\nreadr中`skip`能够将前几行的数据直接跳过\n\nreadr中使用了“地区”这一个概念，能够按照不同的地区解析选项的一个对象。\n\n`parse_number`能够忽略其他非数值型字符。可用于处理百分比或货币\n\n### 使用lubridate处理时间\n\n#### 创建时间或日期\n\n#### 通过字符串创建\n\n加入一个时区参数\n\n#### 日期时间成分\n\n- `mday()`一个月中的第几天;\n- `yday()`一年中的第几天;\n- `wday()`一周中的第几天\n\n#### 重要的原子向量\n\n逻辑型\n\n数值型\n\n字符型\n\n缺失值\n\n##### 强制转换\n\n- `as.logical()`、`as.integer()`、`as.double()`等函数转换方式，就是一种强制转换\n\n#### 检验函数\n\n### 使用`purrr`实现迭代\n\n#### `for` 循环\n\n每个循环都包含三个部分。\n\n输出：`output<-vector(\"double\",length(x))`\n\n开始循环时候，必须为输出结果分配足够的时间，对循环效率来说比较重要，若在每次迭代时候，都是用`c()`来保存循环结果，`for`循环就非常慢\n\n序列：`i in seq_along(df)`\n\n循环体： `output[[i]]<-median(df[[i]])`\n\n\n**note**:循环列表或数据框，使用`[[`\n\n循环的方式：\n- 元素循环\n- 名称循环\n\n\n使用索引值进行循环是最常用的方式\n\n\n\n#### 未知长度的输出\n\n#### for 与函数编程\n\n将函数作为参数传入。\n\n#### 映射函数\n\n先对于向量进行映射，再对于每个元素进行处理，最后保存结果。\n- `map()`用于输出列表;\n- `map_lgl()`用于输出逻辑型向量；\n- `map_int()`用于输出整型向量；\n\n\n### 使用`dplyr`处理关系数据\n\n键：用于处理连接每对数据表的变量称为键。键是唯一能够标识观测的变量。单一变量能够标识一个规则。\n- **主键**：唯一标识所在数据表中的观测；\n- **外键**：唯一标识另一个数据表的观测\n\n#### 合并连接\n\n可以将两个表格中的变量进行组合，先通过两个表格的键进行匹配观测，然后在将一个表格中的变量复制到表格中。\n\n和`mutate()`函数一样，链接函数也会将变量添加到表格右侧。\n\n\n通过`mutate()`来实现变量的生成，在使用`match()`来进行变量的匹配\n\n`match()`返回的是`airlines$carrier`的位置\n\n#### 理解连接\n\n匹配就是实现在两行之间的交集。\n\n\n#### 内连接\n\n内连接最简单的一种连接，只要两个观测的键是相等的。内连接就可以进行匹配。\n\n#### 字符串组合\n\n组合两个或更多的字符串可以使用`str_c()`函数\n\n基础匹配\n\n#### 匹配检测\n\n有多少个以t开头的常用单词\n\n### 用forecast处理因子\n\n#### 修改因子水平\n\n修改水平可以将图形标签更清晰美观，以满足要求。\n最常用的工具是`fct_recode()`函数，对每个水平进行修改或重新编码\n\n\n\n## 模型\n\n一个简单的模型\n\n使用`geom_abline()`作为接受斜率和截距的参数。\n\n计算RMSE\n\n#### 残差\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":false,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"jupyter"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../styles.css"],"output-file":"DR2.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.124","theme":"cosmo","title-block-banner":true,"title":"Data Science","date":"2022-11-12"},"extensions":{"book":{"multiFile":true}}}}}