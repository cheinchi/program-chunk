[
  {
    "objectID": "posts/2022-09-11-api.html",
    "href": "posts/2022-09-11-api.html",
    "title": "API in python",
    "section": "",
    "text": "API，全称为 Application Programming Interface，即应用程序编程接口，是一个可用于检索代码并将数据发送到使用代码的服务器。\n  当我们想从API接收数据时，我们需要发出请求。请求遍及整个网络。例如，当您访问此博客文章时，您的Web浏览器向服务器发出了请求，该服务器以该Web页的内容作为响应。\n\n#python\nimport requests\n#打印出的结果：{u'alevel': 4, u'lon': 114.05786, u'level': 2, u'cityName': u'', u'address': u'', u'lat': 22.54309}\n# 与在浏览器输入地址的结果一致\n\n\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\n\n\ndf=pd.read_csv(\"/Users/a182501/class.csv\")\ndf\n\n\n\n\n\nname\nsex\nage\nheight\nweight\n\n\n\n\n0\nAlice\nF\n13\n56.5\n84.0\n\n\n1\nBecka\nF\n13\n65.3\n98.0\n\n\n2\nGail\nF\n14\n64.3\n90.0\n\n\n3\nKaren\nF\n12\n56.3\n77.0\n\n\n4\nKathy\nF\n12\n59.8\n84.5\n\n\n...\n...\n...\n...\n...\n...\n\n\n69\nSharon\nM\n15\n59.8\n102.5\n\n\n70\nTammy\nM\n14\n66.5\n84.0\n\n\n71\nAlfred\nM\n15\n51.3\n102.5\n\n\n72\nDuke\nM\n17\n62.5\n133.0\n\n\n73\nGuido\nM\n15\n62.8\n83.0\n\n\n\n\n\n\nfor i in range(len(df)):\n    if(df.sex[i]== 'F' ):\n        df.sex[i]=0\n    else:\n        df.sex[i]=1\n\n/var/folders/sn/g01cvq2j72j6tbq2pmmm074h0000gq/T/ipykernel_47547/3328237516.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  df.sex[i]=1\n\n\n\ndf\n\n\n\n\n\nname\nsex\nage\nheight\nweight\n\n\n\n\n0\nAlice\n1\n13\n56.5\n84.0\n\n\n1\nBecka\n1\n13\n65.3\n98.0\n\n\n2\nGail\n1\n14\n64.3\n90.0\n\n\n3\nKaren\n1\n12\n56.3\n77.0\n\n\n4\nKathy\n1\n12\n59.8\n84.5\n\n\n...\n...\n...\n...\n...\n...\n\n\n69\nSharon\n1\n15\n59.8\n102.5\n\n\n70\nTammy\n1\n14\n66.5\n84.0\n\n\n71\nAlfred\n1\n15\n51.3\n102.5\n\n\n72\nDuke\n1\n17\n62.5\n133.0\n\n\n73\nGuido\n1\n15\n62.8\n83.0"
  },
  {
    "objectID": "posts/SNA.html",
    "href": "posts/SNA.html",
    "title": "Social network analysis in python",
    "section": "",
    "text": "模拟和研究一组以网络形式存在的社会实体之间关系的方法。实体可以是人、计算机或网页，关系可以相类似的人或事物、联系实体的连接(link)或友情。\n\n%matplotlib inline\nimport networkx as nx\nimport matplotlib.pyplot as plt\nG = nx.Graph()\nG.add_edge(1,2)\nG.add_edge(1,3)\nG.add_edge(3,2)\nnx.draw_networkx(G)\nplt.show()\n\n\n\n\n\nG.add_nodes_from([3,4])\nnx.draw_networkx(G)\nplt.show()\n\n\n\n\n\nG.add_edge(3,4)\nG.add_edges_from([(2,3),(4,1)])\nnx.draw_networkx(G)\nplt.show()\n\n\n\n\n使用nodes.()能够获得节点集合，同样使用.edges()能够给出图中边的列表，由相连接的节点组成：\n\nG.nodes()\n\nNodeView((1, 2, 3, 4))\n\n\n\nG.edges()\n\nEdgeView([(1, 2), (1, 3), (1, 4), (2, 3), (3, 4)])\n\n\n描述图的方法有多种，邻接表(adjacency list)列出每个节点的邻居节点，与G.nodes()用法相同，list[0]包含第一个节点的所有邻居节点。\n\nG.adjacency()\n\n<dict_itemiterator at 0x7ff323e32360>\n\n\n\nnx.to_dict_of_dicts(G)\n\n{1: {2: {}, 3: {}, 4: {}},\n 2: {1: {}, 3: {}},\n 3: {1: {}, 2: {}, 4: {}},\n 4: {3: {}, 1: {}}}\n\n\n可将图描述为一个边的集合，输出结果中每个元组的第三个元素是边的属性，每一个边可以有一个或多个属性。创建的图很简单，下面的图不包含任何属性。\n\nnx.to_edgelist(G)\n\nEdgeDataView([(1, 2, {}), (1, 3, {}), (1, 4, {}), (2, 3, {}), (3, 4, {})])\n\n\n\nnx.to_numpy_matrix(G)\n\nmatrix([[0., 1., 1., 1.],\n        [1., 0., 1., 0.],\n        [1., 1., 0., 1.],\n        [1., 0., 1., 0.]])\n\n\n\nimport scipy\n\n\n#nx.to_scipy_sparse_matrix(G) bug\n\n\nG.add_edge(1,3)\nnx.draw_networkx(G)\nplt.show()\n\n\n\n\n\nG.degree()\n\nDegreeView({1: 3, 2: 2, 3: 3, 4: 2})\n\n\n对于规模较大的图，这样的度量方式较为简陋，输出字典都有记录。这种情况下往往使用节点度的直方图来近似其分布。 下图中建立一个具有10000个节点、连接概率为1%的随机网络。提取该图的节点度直方图。\n\n#plt.hist(nx.fast_gnp_random_graph(1000,0.01).degree())\n\n\nimport networkx as ne #导入建网络模型包，命名ne\nimport matplotlib.pyplot as mp #导入科学绘图包，命名mp\n#erdos renyi graphy\nrg=ne.erdos_renyi_graph(20,0.8)\nps=ne.shell_layout(rg)#布置框架\nne.draw(rg,ps,with_labels=False,node_size=30)\nmp.show()\n\n\n\n\n\n\n为从图中得到见解，开发了很多算法。\n\nG = nx.krackhardt_kite_graph()\nnx.draw_networkx(G)\nplt.show()\n\n\n\n\n连通性：一个图中的两个节点至少有一条路径，那么就是连通的。 利用NetworkX的库检查两个节点之间是否存在路径、计算最短路径及路径长度。\n\nprint(nx.has_path(G,source=1,target=9))\nprint(nx.shortest_path(G,source=1,target=9))\nprint(nx.shortest_path_length(G,source=1,target=9))\n\nTrue\n[1, 6, 7, 8, 9]\n4\n\n\n\n\n中介中心性(betweenness Centrality)这种类型的中心性以节点的最短路径数表示节点的重要性。中介中心性高的节点是网络的核心部分。 有很大最短路径通过中介中心性高的节点。\n\nnx.betweenness_centrality(G)\n\n{0: 0.023148148148148143,\n 1: 0.023148148148148143,\n 2: 0.0,\n 3: 0.10185185185185183,\n 4: 0.0,\n 5: 0.23148148148148148,\n 6: 0.23148148148148148,\n 7: 0.38888888888888884,\n 8: 0.2222222222222222,\n 9: 0.0}\n\n\n\n度中心性，一个节点的度中心性可以简单理解为与本节点有直接联系的节点占其余节点总数的百分比。\n\n\nnx.degree_centrality(G)\n\n{0: 0.4444444444444444,\n 1: 0.4444444444444444,\n 2: 0.3333333333333333,\n 3: 0.6666666666666666,\n 4: 0.3333333333333333,\n 5: 0.5555555555555556,\n 6: 0.5555555555555556,\n 7: 0.3333333333333333,\n 8: 0.2222222222222222,\n 9: 0.1111111111111111}\n\n\n接近中心性：\n\nnx.closeness_centrality(G)\n\n{0: 0.5294117647058824,\n 1: 0.5294117647058824,\n 2: 0.5,\n 3: 0.6,\n 4: 0.5,\n 5: 0.6428571428571429,\n 6: 0.6428571428571429,\n 7: 0.6,\n 8: 0.42857142857142855,\n 9: 0.3103448275862069}\n\n\n特征向量中心性：有向图，用节点表示网页，边表示连接。\n\nnx.eigenvector_centrality(G)\n\n{0: 0.3522089813920359,\n 1: 0.3522089813920358,\n 2: 0.28583473531632403,\n 3: 0.48102048812210046,\n 4: 0.28583473531632403,\n 5: 0.3976910106255469,\n 6: 0.39769101062554685,\n 7: 0.19586185175360382,\n 8: 0.048074775014202924,\n 9: 0.011164058575824235}\n\n\n\nnx.clustering(G)\n\n{0: 0.6666666666666666,\n 1: 0.6666666666666666,\n 2: 1.0,\n 3: 0.5333333333333333,\n 4: 1.0,\n 5: 0.5,\n 6: 0.5,\n 7: 0.3333333333333333,\n 8: 0,\n 9: 0}"
  },
  {
    "objectID": "posts/advanced/ggplot2-advanced.html",
    "href": "posts/advanced/ggplot2-advanced.html",
    "title": "advanced ggplot",
    "section": "",
    "text": "df <- data.frame(\n  x = c(3, 1, 5), \n  y = c(2, 4, 6), \n  label = c(\"a\",\"b\",\"c\")\n)\n\n\ndf\n\n\nA data.frame: 3 × 3\n\n\nx\ny\nlabel\n\n\n<dbl>\n<dbl>\n<chr>\n\n\n\n\n3\n2\na\n\n\n1\n4\nb\n\n\n5\n6\nc\n\n\n\n\n\n\np <- ggplot(df, aes(x, y, label = label)) + \n  labs(x = NULL, y = NULL) + # Hide axis label\n  theme(plot.title = element_text(size = 12)) # Shrink plot title\n\n\np + geom_point() + ggtitle(\"point\")\n\n\n\n\n\np + geom_text() + ggtitle(\"text\")\n\n\n\n\n\np + geom_bar(stat = \"identity\") + ggtitle(\"bar\")\n\n\n\n\n\np + geom_tile() + ggtitle(\"raster\")\n\n\n\n\n\np + geom_line() + ggtitle(\"line\")\n\n\n\n\n\np + geom_area()+ggtitle(\"area\")\n\n\n\n\n\np + geom_path() + ggtitle(\"path\")\n\n\n\n\n\ncollective geoms\nGeoms can be roughly divided into individual and collective geoms.\n\ndifferent groups on different layers\nwe want to plot summaries that use different levels of aggregation.\n\ndata(Oxboys, package = \"nlme\")\nhead(Oxboys)\n\n\nA nfnGroupedData: 6 × 4\n\n\n\nSubject\nage\nheight\nOccasion\n\n\n\n<ord>\n<dbl>\n<dbl>\n<ord>\n\n\n\n\n1\n1\n-1.0000\n140.5\n1\n\n\n2\n1\n-0.7479\n143.4\n2\n\n\n3\n1\n-0.4630\n144.8\n3\n\n\n4\n1\n-0.1643\n147.1\n4\n\n\n5\n1\n-0.0027\n147.7\n5\n\n\n6\n1\n0.2466\n150.2\n6\n\n\n\n\n\n\nggplot(Oxboys, aes(age, height, group = Subject)) + \n  geom_line() + \n  geom_smooth(method = \"lm\", se = FALSE)\n#> `geom_smooth()` using formula 'y ~ x'\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nggplot(Oxboys, aes(age, height)) + \n  geom_line(aes(group = Subject)) + \n  geom_smooth(method = \"lm\", size = 2, se = FALSE)\n\nWarning message:\n“Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.”\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\nhead(Oxboys)\n\n\nA nfnGroupedData: 6 × 4\n\n\n\nSubject\nage\nheight\nOccasion\n\n\n\n<ord>\n<dbl>\n<dbl>\n<ord>\n\n\n\n\n1\n1\n-1.0000\n140.5\n1\n\n\n2\n1\n-0.7479\n143.4\n2\n\n\n3\n1\n-0.4630\n144.8\n3\n\n\n4\n1\n-0.1643\n147.1\n4\n\n\n5\n1\n-0.0027\n147.7\n5\n\n\n6\n1\n0.2466\n150.2\n6\n\n\n\n\n\n\nggplot(Oxboys,aes(Occasion,height))+\n    geom_boxplot()\n\n\n\n\n\nggplot(Oxboys, aes(Occasion, height)) + \n  geom_boxplot() +\n  geom_line(aes(group = Subject), colour = \"#3366FF\", alpha = 0.5)\n\n\n\n\n\n\nmatching aesthetics to graphic objects\n\nlines and paths operate on the first value principle: each segment is defined by two observations\nggplot2 applies the aesthetic value associated with the first observation when drawing the segment.\n\n\ndf <- data.frame(x = 1:3, y = 1:3, colour = c(1,3,5))\n\nggplot(df, aes(x, y, colour = factor(colour))) + \n  geom_line( aes(group = 1),size = 2) +\n  geom_point(size = 5)\n\nggplot(df, aes(x, y, colour = colour)) + \n  geom_line(aes(group = 1),size = 2) +\n  geom_point(size = 5)\n\n\n\n\n\n\n\n在左手边的颜色是离散的，右手边是连续的，即使颜色变量是连续的，ggplot不会平滑\n\nlibrary(ggplot2)\nggplot(data = diamonds) +\n    geom_bar(mapping = aes(x = cut, y = ..prop.., group = 1))\n\nWarning message:\n“The dot-dot notation (`..prop..`) was deprecated in ggplot2 3.4.0.\nℹ Please use `after_stat(prop)` instead.”\n\n\n\n\n\ngroup=\"whatever\" 是一个”虚拟”分组来覆盖默认行为，(这里)是按 cut 分组，通常是按x 变量.geom_bar的默认值是按 x 变量分组，以便分别计算 x 变量的每个级别中的行数.例如，在这里，geom_bar默认返回cut 等于\"Fair\"、\"Good\"等的行数.\n但是，如果我们想要比例，那么我们需要将所有级别的cut一起考虑.在第二个图中，数据首先按cut分组，因此分别考虑 cut的每个级别.Fair in Fair 的比例是 100%，Good in Good 等的比例也是如此.group=1(或 group=\"x\" 等)阻止了这一点，因此每个级别的削减比例将相对于所有削减水平.\n\nxgrid <- with(df, seq(min(x), max(x), length = 50))\ninterp <- data.frame(\n  x = xgrid,\n  y = approx(df$x, df$y, xout = xgrid)$y,\n  colour = approx(df$x, df$colour, xout = xgrid)$y  \n)\nggplot(interp, aes(x, y, colour = colour)) + \n  geom_line(size = 2) +\n  geom_point(data = df, size = 5)\n\n\n\n\n若我们要进行混合渐变形式，\n\nggplot(mpg, aes(class)) + \n  geom_bar()\nggplot(mpg, aes(class, fill = drv)) + \n  geom_bar()\n\n\n\n\n\n\n\n显示多种颜色，需要多种的bars对于每一个class\n\n\n\nstatistical summaries\nA layer combines data, aesthetic mapping, a geom (geometric object), a stat (statistical transformation), and a position adjustment. Typically, you will create layers using a geom_ function, overriding the default position and stat if needed.\n\nrevealing uncertainty\nhaving the infomation about the uncertainty present in your idea\n\ndiscrete x,range:geom_errorbar(),geom)linerange()\ndiscrete x,range&center:geom_crossbar(),geom_pointrange()\ncontinuous x,range:geom_ribbon()\ncontinuous x,range&center:geom_smooth(stat=\"identity\")\n\n\ny <- c(18,11,16)\ndf <- data.frame(x=1:3,y=y,se=c(1.2,0.5,1.0))\n\nbase <- ggplot(df,aes(x,y,ymin=y-se,ymax=y+se))\n\n\n箱线图\n\nbase+geom_crossbar()\n\n\n\n\n\nbase+geom_pointrange()\n\n\n\n\n\nbase+geom_smooth(stat=\"identity\")\n\n\n\n\n\nbase+geom_errorbar()\nbase+geom_linerange()\nbase+geom_ribbon()\n\n\n\n\n\n\n\n\n\n\n\n\n\nweighted data\n\n\ndealing with overplotting\nconstructing a bi-gauss distribution\n\ndf <- data.frame(x = rnorm(2000), y = rnorm(2000))\nnorm <- ggplot(df, aes(x, y)) + xlab(NULL) + ylab(NULL)\nnorm + geom_point()\nnorm + geom_point(shape = 1) # Hollow circles \"1\"is circle,\"2\"is rectangle\nnorm + geom_point(shape = \".\") # Pixel sized\n\n\n\n\n\n\n\n\n\n\n\nadjust the opacity\n\nnorm + geom_point(alpha = 1 / 3)\nnorm + geom_point(alpha = 1 / 5)\nnorm + geom_point(alpha = 1 / 10)\n\n\n\n\n\n\n\n\n\n\n\nnorm\n\n\nnorm +geom_bin2d()\nnorm + geom_bin2d(bins=10)\n\n\n\n\n\n\n\n\nEstimate the 2d density with stat_density2d()\n\n\n\n\nStatistical summaries\n\nbar\n\n\nggplot(diamonds, aes(color)) + \n  geom_bar()\n\nggplot(diamonds, aes(color, price)) + \n  geom_bar(stat = \"summary_bin\", fun = mean)\n\n\n\n\n\n\n\n\n\nsurfaces\nwe are considered two classes of geoms: - simple geoms where there’s a one-on-one correspondence between rows in the data - statistical geoms where introduce a layer of statistical summaries in between the raw data and the fault - we will consider cases where a visualization of a three dimensional surface\n\ndata(faithfuld)\n\n\nggplot(faithfuld,aes(eruptions,waiting))+\n    geom_contour(aes(z=density,color=..level..))\n\n\n\n\n..level.. 变量\n..意味着一个内部计算的变量\n演示相同的分布做一个热力图\n\nggplot(faithfuld, aes(eruptions, waiting)) + \n  geom_raster(aes(fill = density))\n\n\n\n\n\n\ngenerated variables\na stat takes a data frame as input and returns a data frame as output, and so a stat can add new variables to the original dataset\n\n\n\nGeoms\ngeometric objects or geoms for short,perform the actual rendering of the layer, controlling the type of plot that you create.\n\ngraphical primitives:\n\ngeom_blank()：啥也没有\ngeom_point()points\ngeom_path()\ngeom_rect() rectangles.\ngeom_ploygon() filled polygons.\ngeom_text()\n\nOne variable:\n\ndiscrete\ncontinuous\n\ntwo variables:\n\nboth continuous:\n\ngeom_point()\ngeom_smooth()\n\n\nthree variables:\n\ngeom_contour()\ngeom_tile()\ngeom_raster(): fast version of geom_tile() for equal sized tiles\n\n\n\n\nStats\n统计变换，或统计转换数据，通常是用某种方式来总结它\n\nstat_bin()\nstat_bin2d()\nstat_bindot()\nstat_binplot()\n\nother stats can’t be created with a geom_ function\n\nggplot(mpg,aes(trans,cty))+\n    geom_point()+\n    stat_summary(geom=\"point\",fun=\"mean\",color=\"red\",size=4)\n\n\n\n\n\nggplot(mpg,aes(trans,cty))+\n    geom_point()+\n    geom_point(stat=\"summary\",fun=\"mean\",color=\"red\",size=4)\n\n\n\n\nthe way to use these functions. you can either add a stat_() function and override the default geom or add a geom_() function and override the default stat:\n\ngenerated variables\na stat takes a data frame as input and returns a data frame as output, and so a stat can add new variables to the original dataset. it is possible to map aesthetics to these new variables. example: stat_bin 用于构建histogram 产生一系列的变量： - count,the number of observation in each bin - density the density of observation in each bin - x the centre of the bin\n\nggplot(diamonds,aes(price))+\n    geom_histogram(binwidth = 500)\n\n\n\n\nthe after_stat() must wrap the name, preventing the confusion in case the original dataset includes a variables with the same name as a generated variable\n\nggplot(diamonds,aes(price))+\n    geom_histogram(aes(y = after_stat(density)),binwidth=500)\n\n\n\n\n\n\n\nscale and guides\n\nggplot(mpg, aes(displ, hwy)) + \n  geom_point(aes(colour = class))"
  },
  {
    "objectID": "posts/random_matplot.html",
    "href": "posts/random_matplot.html",
    "title": "simulation and matplot",
    "section": "",
    "text": "import matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\n\n\nnp.random.seed(10)\nsize = 100\ny_data = np.cumsum(np.random.randn(size) * 100.0)\ny_data_2 = np.cumsum(np.random.randn(size))\ny_data_3 = np.cumsum(np.random.randn(size) * 100.0)\nx = np.linspace(0.0, 10.0, size)\n\n\nplt.scatter(x,y_data)\n\n<matplotlib.collections.PathCollection at 0x127781370>\n\n\n\n\n\n\nprice_data = pd.DataFrame(\n    np.cumsum(np.random.randn(150, 2).dot([[0.5, 0.8], [0.8, 1.0]]), axis=0) + 100,\n    columns=[\"Security 1\", \"Security 2\"],\n    index=pd.date_range(start=\"01-01-2007\", periods=150),\n)\nsymbol = \"Security 1\"\ndates_all = price_data.index.values\nfinal_prices = price_data[symbol].values.flatten()\n\n\nprice_data.index.names=['date']\nprice_data\n\n\n\n\n\nSecurity 1\nSecurity 2\n\n\ndate\n\n\n\n\n\n\n2007-01-01\n101.081239\n101.483726\n\n\n2007-01-02\n100.405215\n100.596704\n\n\n2007-01-03\n100.449096\n100.569060\n\n\n2007-01-04\n101.446296\n102.097565\n\n\n2007-01-05\n100.361914\n100.826963\n\n\n...\n...\n...\n\n\n2007-05-26\n94.435223\n94.219550\n\n\n2007-05-27\n93.879329\n93.549650\n\n\n2007-05-28\n95.058473\n95.068661\n\n\n2007-05-29\n94.784069\n94.489578\n\n\n2007-05-30\n95.480560\n95.187888\n\n\n\n\n\n\nplt.figure()\nplt.plot(x, y_data)\nplt.xlabel(\"Time\")\nplt.show()"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code.\n\nknitr::kable(\n  mtcars[1:6, 1:10]\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n\n\n\n\n\n\nlibrary(\"ggplot2\")\nggplot(data=mtcars)+\n    geom_point(aes(x=mpg,y=cyl,color=gear))\n\n\n\n\n\nwww.jianqihuang.com is my personal website.\n\n\nloading the python code\n\nprint(\"x=1\")\n\nx=1\n\nimport numpy as np\nx = np.array([11,1,2])\nprint(x)\n\n[11  1  2]"
  },
  {
    "objectID": "posts/asscoiation_analysis.html",
    "href": "posts/asscoiation_analysis.html",
    "title": "Association analysis",
    "section": "",
    "text": "from efficient_apriori import apriori\n\n\ntransactions = [('eggs','bacon','soup'),('eggs','bacon','apple'),('soup','bacon','banana')]\n\n\nitemsets ,rules = apriori(transactions,min_support=0.5,min_confidence=0.8)\n\n\nprint(rules)\n\n[{eggs} -> {bacon}, {soup} -> {bacon}]\n\n\n\n\n\nTypeError: filter expected 2 arguments, got 1"
  },
  {
    "objectID": "posts/auc-curve.html",
    "href": "posts/auc-curve.html",
    "title": "AUC curve plot",
    "section": "",
    "text": "from sklearn.metrics import roc_curve, auc\n\n\nimport numpy as np\nfrom sklearn import metrics\ny = np.array([1, 1, 2, 2])\nscores = np.array([0.1, 0.4, 0.35, 0.8])\n\n\nfpr, tpr, thresholds = metrics.roc_curve(y, scores, pos_label=2)\n\n\nfpr\n\narray([0. , 0. , 0.5, 0.5, 1. ])\n\n\n\nthresholds\n\narray([1.8 , 0.8 , 0.4 , 0.35, 0.1 ])\n\n\n\nauc = metrics.auc(fpr, tpr)\n\n\nauc\n\n0.75\n\n\n\nimport matplotlib.pyplot as plt\nplt.figure()\nlw = 2\nplt.plot(fpr, tpr, color='darkorange',\n         lw=lw, label='ROC curve (area = %0.2f)' % auc)\nplt.plot([0, 1], [0, 1], color='navy', lw=lw, linestyle='--')\nplt.xlim([0.0, 1.0])\nplt.ylim([0.0, 1.05])\nplt.xlabel('False Positive Rate')\nplt.ylabel('True Positive Rate')\nplt.title('Receiver operating characteristic example')\nplt.legend(loc=\"lower right\")\nplt.show()\n\n\n\n\nRUC（Receiver Operating Characteristic Curve）受试者工作特征曲线\n该曲线的横坐标为假阳性率（False Positive Rate, FPR），N是真实负样本的个数， FP是N个负样本中被分类器预测为正样本的个数。 纵坐标为真阳率(True Positive Rate,TPR) \\[TPR = \\frac{TP}{R}   \\]\n阈值：就是一个极限，或许是超过这个极限会发生某些情况，又或是在这个极限之下又会发生某些事件。"
  },
  {
    "objectID": "posts/map-R.html",
    "href": "posts/map-R.html",
    "title": "在R中绘制中国地图",
    "section": "",
    "text": "Table of Contents\n\n\n\n\n1  高德地图\n\n\n2  谷歌的瓦片地图\n\n\n\nhttps://xiangyun.rbind.io/2022/02/draw-china-maps/\n\nlibrary(maps)\nmap(\n  database = \"world\", regions = \"china\",\n  col = \"red4\", xlim = c(72, 137), panel.first = grid()\n)\n\n\n\n\n\nlibrary(\"mapdata\")\nmap(\n  database = \"china\",\n  col = \"red4\", xlim = c(72, 137), panel.first = grid()\n)#mapdata 中的map 函数，有内置的中国地图\n\n\n\n\n\n#install.packages(\"mapdata\"\n\n\n#devtools::install_github('IRkernel/IRkernel')\n\n\nlibrary(ggplot2)\n\n\nchina_map<- map(database=\"china\",plot=F)\n\n\nchina_map$lat\n\nNULL\n\n\n\nggplot() +\n  geom_path(\n    data = china_map, aes(long, lat, group = group),\n    color = \"#FD9FA4\", show.legend = F\n  ) +\n  coord_map(projection = \"mercator\")\n\n\n\n\n\n高德地图\n\nlibrary(leaflet)\nlibrary(leafletCN) # 提供 geojsonMap 函数\ndat <- data.frame(name = regionNames(\"china\"), value = runif(34))\n# 还有很多其他参数设置，类似 leaflet::leaflet\ngeojsonMap(dat, mapName = \"china\", palette = \"RdBu\", colorMethod = \"bin\")\n\n\n\n    \n        \n        \n\n\n\n\n\n\n\n\n    \n    \n        \n\n    \n\n\n\n#install.packages(“leafletCN”)\n\n\n谷歌的瓦片地图\n\n# 谷歌瓦片地图服务\nlibrary(leaflet)\nleaflet() |>\n  addTiles(urlTemplate = \"https://mt1.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\") |>\n  setView(116.347817690225, 39.997202126977, zoom = 16) |>\n  addMarkers(116.347817690225, 39.997202126977)\n\n\n\n    \n        \n        \n\n\n\n\n\n\n\n\n    \n    \n        \n\n    \n\n\n\n\n\nResource:\n\nhttps://xiangyun.rbind.io/2022/02/draw-china-maps/"
  },
  {
    "objectID": "posts/python_map_folium0907.html",
    "href": "posts/python_map_folium0907.html",
    "title": "\nTable of Contents\n",
    "section": "",
    "text": "Table of Contents\n\n\n\n\n1  Stamen Toner graph\n\n\n2  stamen Terrain图\n\n\n3  地图的实际运用\n\n\n3.1  可视化\n\n\n3.2  删除位置标记\n\n\n\n\n\n\nimport folium\n\n\nworld_map = folium.Map(location=[20.5937, 78.9629], zoom_start=4)\nworld_map\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n解决jupyter包中的一些问题\nimport pip\n \ndef install(packages):\n    pip.main(['install', packages]) \n \ninstall('package_name')\n\nStamen Toner graph\nstamen toner图可快速的实现可视化，生产高对比度的图\n\nworld_map2=folium.Map(location=[28,77],zoom_start=4,tiles=\"Stamen Toner\")\nworld_map2\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n\nstamen Terrain图\n\nworld_map = folium.Map(location=[25,116.42], zoom_start=4, tiles = \"Stamen Terrain\")\nworld_map\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\nlatitude=25.04\nlongitude=116.04\nsh=folium.Map(location=[latitude,longitude],zoom_start=10)\nsh\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n\n地图的实际运用\n\n#data import\nimport pandas as pd\ndf = pd.read_csv('data/Police_Department_Incidents_-_Previous_Year__2016_.csv')\ndf.head()\n\n\n\n\n\nIncidntNum\nCategory\nDescript\nDayOfWeek\nDate\nTime\nPdDistrict\nResolution\nAddress\nX\nY\nLocation\nPdId\n\n\n\n\n0\n120058272\nWEAPON LAWS\nPOSS OF PROHIBITED WEAPON\nFriday\n01/29/2016 12:00:00 AM\n11:00\nSOUTHERN\nARREST, BOOKED\n800 Block of BRYANT ST\n-122.403405\n37.775421\n(37.775420706711, -122.403404791479)\n12005827212120\n\n\n1\n120058272\nWEAPON LAWS\nFIREARM, LOADED, IN VEHICLE, POSSESSION OR USE\nFriday\n01/29/2016 12:00:00 AM\n11:00\nSOUTHERN\nARREST, BOOKED\n800 Block of BRYANT ST\n-122.403405\n37.775421\n(37.775420706711, -122.403404791479)\n12005827212168\n\n\n2\n141059263\nWARRANTS\nWARRANT ARREST\nMonday\n04/25/2016 12:00:00 AM\n14:59\nBAYVIEW\nARREST, BOOKED\nKEITH ST / SHAFTER AV\n-122.388856\n37.729981\n(37.7299809672996, -122.388856204292)\n14105926363010\n\n\n3\n160013662\nNON-CRIMINAL\nLOST PROPERTY\nTuesday\n01/05/2016 12:00:00 AM\n23:50\nTENDERLOIN\nNONE\nJONES ST / OFARRELL ST\n-122.412971\n37.785788\n(37.7857883766888, -122.412970537591)\n16001366271000\n\n\n4\n160002740\nNON-CRIMINAL\nLOST PROPERTY\nFriday\n01/01/2016 12:00:00 AM\n00:30\nMISSION\nNONE\n16TH ST / MISSION ST\n-122.419672\n37.765050\n(37.7650501214668, -122.419671780296)\n16000274071000\n\n\n\n\n\n\ndf.shape\nlimit=100\ndf=df.iloc[0:limit,:]\ndf\n\n\n\n\n\nIncidntNum\nCategory\nDescript\nDayOfWeek\nDate\nTime\nPdDistrict\nResolution\nAddress\nX\nY\nLocation\nPdId\n\n\n\n\n0\n120058272\nWEAPON LAWS\nPOSS OF PROHIBITED WEAPON\nFriday\n01/29/2016 12:00:00 AM\n11:00\nSOUTHERN\nARREST, BOOKED\n800 Block of BRYANT ST\n-122.403405\n37.775421\n(37.775420706711, -122.403404791479)\n12005827212120\n\n\n1\n120058272\nWEAPON LAWS\nFIREARM, LOADED, IN VEHICLE, POSSESSION OR USE\nFriday\n01/29/2016 12:00:00 AM\n11:00\nSOUTHERN\nARREST, BOOKED\n800 Block of BRYANT ST\n-122.403405\n37.775421\n(37.775420706711, -122.403404791479)\n12005827212168\n\n\n2\n141059263\nWARRANTS\nWARRANT ARREST\nMonday\n04/25/2016 12:00:00 AM\n14:59\nBAYVIEW\nARREST, BOOKED\nKEITH ST / SHAFTER AV\n-122.388856\n37.729981\n(37.7299809672996, -122.388856204292)\n14105926363010\n\n\n3\n160013662\nNON-CRIMINAL\nLOST PROPERTY\nTuesday\n01/05/2016 12:00:00 AM\n23:50\nTENDERLOIN\nNONE\nJONES ST / OFARRELL ST\n-122.412971\n37.785788\n(37.7857883766888, -122.412970537591)\n16001366271000\n\n\n4\n160002740\nNON-CRIMINAL\nLOST PROPERTY\nFriday\n01/01/2016 12:00:00 AM\n00:30\nMISSION\nNONE\n16TH ST / MISSION ST\n-122.419672\n37.765050\n(37.7650501214668, -122.419671780296)\n16000274071000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n95\n160014858\nOTHER OFFENSES\nFRAUDULENT GAME OR TRICK, OBTAINING MONEY OR P...\nWednesday\n01/06/2016 12:00:00 AM\n06:00\nTARAVAL\nNONE\n2000 Block of 29TH AV\n-122.486926\n37.749084\n(37.7490841729028, -122.486925960114)\n16001485809024\n\n\n96\n160015163\nNON-CRIMINAL\nAIDED CASE\nWednesday\n01/06/2016 12:00:00 AM\n16:09\nMISSION\nNONE\n14TH ST / FOLSOM ST\n-122.415616\n37.768536\n(37.7685360123583, -122.41561633832)\n16001516351040\n\n\n97\n160015276\nBURGLARY\nBURGLARY, UNLAWFUL ENTRY\nTuesday\n01/05/2016 12:00:00 AM\n20:00\nPARK\nNONE\n1000 Block of COLE ST\n-122.449752\n37.764430\n(37.7644297714074, -122.449751652563)\n16001527605073\n\n\n98\n160015276\nLARCENY/THEFT\nGRAND THEFT FROM UNLOCKED AUTO\nTuesday\n01/05/2016 12:00:00 AM\n20:00\nPARK\nNONE\n1000 Block of COLE ST\n-122.449752\n37.764430\n(37.7644297714074, -122.449751652563)\n16001527606224\n\n\n99\n160015282\nLARCENY/THEFT\nGRAND THEFT FROM LOCKED AUTO\nTuesday\n01/05/2016 12:00:00 AM\n17:00\nTARAVAL\nNONE\n0 Block of ARDENWOOD WY\n-122.472716\n37.735268\n(37.7352681469084, -122.472715759631)\n16001528206244\n\n\n\n\n\n\n可视化\n可视化发生在2016年的事件，绘制地图从默认开始，选择旧金山的经纬度，然后将缩放级别初始化在12。\n\nla=37.77\nlo=-122.42\nsanmap = folium.Map(location=[la,lo],zoom_start=12)\nsanmap\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n将数据整合到地图上。可通过folium中的featuregroup()来完成。 可创建一个具有自己特征和样式的特征组并将其添加到地图上。\n\nincidents=folium.map.FeatureGroup()\n\n\nfor lat,lng, in zip(df.Y,df.X): #zip 接受一系列可迭代的对象作为参数，将对象中对应的元素打包一个tuple（元组）\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat,lng],\n            radius=5,\n            color=\"yellow\",\n            fill=True,\n            fill_color=\"blue\",\n            fill_opacity=0.6\n    ))\nsanmap.add_child(incidents) #add_child 是将子元素添加到原来的部分\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\nfor lat, lng in zip(df.Y, df.X):\n    incidents.add_child(\n        folium.CircleMarker(\n            [lat, lng],\n            radius=5,\n            color='yellow',\n            fill=True,\n            fill_color='blue',\n            fill_opacity=0.6\n))\nlatitudes = list(df.Y)\nlongitudes = list(df.X)\nlabels = list(df.Category)\nfor lat, lng, label in zip(latitudes, longitudes, labels):\n    folium.Marker([lat,lng], popup=label).add_to(sanmap)    \nsanmap.add_child(incidents)\n\nMake this Notebook Trusted to load map: File -> Trust Notebook\n\n\n\n\n删除位置标记\n\nsanmap=folium.Map(location=[la,lo],zoom_start=12)\nfor lat,lng, label in zip(df.Y,df.X,df.Category):#遍历所有的标记\n    folium.CircleMarker(\n        [lat, lng],\n        radius=5,\n        color=\"yellow\",\n        fill=True,\n        popup= label,#栈中弹出所有的label\n        fill_color=\"blue\",\n        fill_opacity=0.6\n    ).add_to(sanmap)\nsanmap\n\nMake this Notebook Trusted to load map: File -> Trust Notebook"
  },
  {
    "objectID": "posts/quarto-ipydemo/quarto-ipydemo.html",
    "href": "posts/quarto-ipydemo/quarto-ipydemo.html",
    "title": "如何在quarto中输入不同的代码",
    "section": "",
    "text": "使用quarto输入代码\nx = 1\nprint(x)\nlibrary(ggplot2)\ndata(mpg, package=\"ggplot2\")\n# Scatterplot\ntheme_set(theme_bw())  # pre-set the bw theme.\nmpg_select <- mpg[mpg$hwy >= 35 & mpg$cty > 27, ]\ng <- ggplot(mpg, aes(cty, hwy)) + \n  geom_count() + \n  geom_smooth(method=\"lm\", se=F)\ng\n\n\n\\[\nx^2+y^2=1\n\\]\n行内公式：\\(x=1\\)\n\n\n\n\n\nCode\nimport numpy as np\nimport matplotlib.pyplot as plt\nfig, ax = plt.subplots()  # Create a figure containing a single axes.\nax.plot([1, 2, 3, 4], [1, 4, 2, 3]);  # Plot some data on the axes.\n\n\n\n\n\n\n\n\n在quarto的blog建立中，我们可以使用.ipynb文件导入，可直接显示。\n\n\nCode\n#导入库文件\nimport numpy as np\nimport matplotlib.pyplot as plt\n\n\n\n\nCode\nr = np.arange(0,2,0.01)\ntheta = 2*np.pi*r\nfig, ax = plt.subplots(subplot_kw={'projection':'polar'})\nax.plot(theta,r)\nax.set_rticks([0.5,1,1.5,2])\nax.grid(True)\nplt.show()\n\n\n\n\n\nFigure 1: A line plot on a polar axis\n\n\n\n\n在ipynb中我们还可以借助于quarto编译系统，我们可以进行相应的一些变化。在其中添加#|来设置输出图片的形式。包括fig-cap图片的标题设置，和标签设置，标签就可以帮助我们引用该输出图片。\n交叉引用格式为@fig-polar ：Figure 1\n不得不承认的是，在一些方面，quarto的使用体验会好于Rmarkdown和pandoc。"
  },
  {
    "objectID": "posts/quarto.html",
    "href": "posts/quarto.html",
    "title": "Using quarto",
    "section": "",
    "text": "Embeding videos in documents .qmd using the  We could embed the Youtube video like this:\n\n\n\n\nThe parameter like title,start, width and height could be adjusted.\n\nstart set the start time of the video\n\nThe local file like .mp4 format file be embeded"
  },
  {
    "objectID": "posts/quarto.html#adding-slides",
    "href": "posts/quarto.html#adding-slides",
    "title": "Using quarto",
    "section": "Adding slides",
    "text": "Adding slides"
  },
  {
    "objectID": "posts/out-bag-es.html",
    "href": "posts/out-bag-es.html",
    "title": "out of bag estimation",
    "section": "",
    "text": "from sklearn.datasets import load_iris\nfrom sklearn.ensemble import RandomForestClassifier\nfrom sklearn.datasets import make_classification\n# step-01: get data\ndata = load_iris()\nx_data=data.data\ny_data=data.target\n# step-02: train rf\nclf = RandomForestClassifier(random_state=0, oob_score=True)\nclf.fit(x_data,y_data)\n# step-03: oob error estimate\nprint(clf.oob_score_)\n\n0.9533333333333334\n\n\n\nimport random\nimport pandas as pd\nimport numpy as np\nfrom sklearn.utils import resample  \n\ndef scalegirl(samples):\n    '''\n    统计抽样结果中：女性/男性比例\n    '''\n    count =0.0\n    total = samples.size\n    for sex in samples:\n        if(sex==0):\n            count+=1.0\n#     print(count)\n    return count/(total-count)\n \nboy = (np.ones(1000))\ngirl = (np.zeros(800))\n#girl/boy=0.8\n \n# print(girl.shape)\nall = np.hstack((boy, girl))\nscale = 0.0\niter = 10000\nfor i in range(iter):\n    bootstrapSamples = resample(all,n_samples=100,replace=1)\n#     print(bootstrapSamples)\n    tempscale = scalegirl(bootstrapSamples) # 比例—女性：男性\n#     print(tempscale)\n    scale+=tempscale\nprint(scale/iter) # 计算10000次的平均 女/男\n\n0.8126863474374917\n\n\n\nnp.random.seed(123)\npop = np.random.randint(0,500 , size=1000)\nsample = np.random.choice(pop, size=300) #so n=300\n\n\nsample_mean = []\nfor _ in range(10000):  #so B=10000\n    sample_n = np.random.choice(sample, size=300)\n    sample_mean.append(sample_n.mean())\n\n\nimport matplotlib.pyplot as plt\nimg=plt.hist(sample_mean)\nplt.savefig(\"img.png\")\n\n\n\n\n\nnp.mean(sample_mean)\n\n255.73952966666664\n\n\n\nclass Bagging:\n     def __init__(self, base_learner, n_learners):\n        self.learners = [clone(base_learner) for _ in range(n_learners)]\n\n     def fit(self, X, y):\n         for learner in self.learners:\n             examples = np.random.choice(\n                 np.arange(len(X)), int(len(X)), replace=True)\n             learner.fit(X.iloc[examples, :], y.iloc[examples])\n             \n     def predict(self, X):\n         preds = [learner.predict(X) for learner in self.learners]\n         return np.array(preds).mean(axis=0) \n\n\nfrom statistics import LinearRegression\nimport pylab\nimport sklearn \nfrom sklearn import datasets\nfrom sklearn import model_selection\nfrom sklearn.ensemble import BaggingRegressor\nfrom sklearn import metrics \nif __name__==\"__main__\": data=datasets.load_breast_cancer() \n\nx_train,x_test,y_train,y_test = model_selection.train_test_split(data.data, data.target) \nclf = BaggingRegressor() \nclf.fit(x_train,y_train) \ny_predict=clf.predict(x_test) \nAccuracy=metrics.mean_squared_error(y_predict,y_test) \nprint(\"数据集的均方误差为:\\n{}\".format(Accuracy)) \n\n\n数据集的均方误差为:\n0.04321678321678322\n\n\n\npylab.mpl.rcParams['font.sans-serif'] = ['FangSong'] \npylab.mpl.rcParams['axes.unicode_minus'] = False\npylab.title('origin price') \npylab.plot([i for i in range(len(y_test))],y_test) #画出模型预测房价图 \n\n\n\n\n\npylab.subplot(2, 1, 2)\npylab.title('Bagging predict price')\npylab.plot([i for i in range(len(y_predict))], y_predict)\npylab.show()\n\n\n\n\n\npylab.mpl.rcParams['font.sans-serif'] = ['FangSong']\npylab.mpl.rcParams['axes.unicode_minus'] = False\npylab.plot([i for i in range(len(y_test))], y_test)  #画出模型预测房价图\npylab.subplot(2, 1, 2)\npylab.title('Bagging算法预测房价')\n\n<AxesSubplot:>\n\n\n\n\n\n\nfrom sklearn import datasets\nimport numpy as np\nimport matplotlib.pyplot as plt\nX, y = datasets.make_moons(n_samples=500, noise=0.3, random_state=42)\n\n\nplt.scatter(X[y == 0, 0], X[y == 0, 1])\nplt.scatter(X[y == 1, 0], X[y == 1, 1])\nplt.show()\n\n\n\n\n\nfrom sklearn.tree import DecisionTreeClassifier\nfrom sklearn.ensemble import BaggingClassifier\n\nbagging_clf = BaggingClassifier(DecisionTreeClassifier(),\n                                n_estimators=500,\n                                max_samples=100,\n                                bootstrap=True,\n                                oob_score=True)\n\n\nbagging_clf.fit(X, y)\n\nBaggingClassifier(base_estimator=DecisionTreeClassifier(), max_samples=100,\n                  n_estimators=500, oob_score=True)\n\n\n\nbagging_clf.oob_score_\n\n0.916\n\n\n\nclf = RandomForestClassifier(random_state=0, oob_score=True)\nclf.fit(X, y)\n# step-03: oob error estimate\nprint(clf.oob_score_)\n\n0.9\n\n\n\nfrom sklearn import tree\nfrom sklearn.model_selection import StratifiedShuffleSplit, GridSearchCV, cross_val_score\nimport matplotlib.pyplot as plt\nimport numpy as np\ncv = StratifiedShuffleSplit(n_splits=10, test_size=0.1, random_state=42)\nclf = tree.DecisionTreeClassifier(criterion='entropy', random_state=42)\nscore = cross_val_score(clf, X, y, cv=cv).mean()\nprint(score)\nclf = tree.DecisionTreeClassifier(criterion='gini', random_state=42)\nscore = cross_val_score(clf,X, y, cv=cv).mean()\nprint(score)\n\n0.8539999999999999\n0.858"
  },
  {
    "objectID": "posts/python学习笔记0922.html",
    "href": "posts/python学习笔记0922.html",
    "title": "\nTable of Contents\n",
    "section": "",
    "text": "Table of Contents"
  },
  {
    "objectID": "posts/python学习笔记0922.html#再入门基础",
    "href": "posts/python学习笔记0922.html#再入门基础",
    "title": "\nTable of Contents\n",
    "section": "再入门基础",
    "text": "再入门基础\n由于之前的python课没能将一些基础的操作学得透彻，只能再回炉重造一下。\n\n包的引用\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas as pd\nimport seaborn as sns\nimport statsmodels as sm\n\n\n整数\nconda install nb_conda ### 字符串\n\n\n行话\n由于你可能不太熟悉书中使用的一些有关编程和数据科学方面的常用术语，所以我在这里先给出其简单定义：\n数据规整（Munge/Munging/Wrangling） 指的是将非结构化和（或）散乱数据处理为结构化或整洁形式的整个过程。这几个词已经悄悄成为当今数据黑客们的行话了。Munge这个词跟Lunge押韵。\n伪码（Pseudocode） 算法或过程的“代码式”描述，而这些代码本身并不是实际有效的源代码。\n语法糖（Syntactic sugar） 这是一种编程语法，它并不会带来新的特性，但却能使代码更易读、更易写。\n\nimport numpy as np\ndata = {i : np.random.randn() for i in range(7)}\ndata\n\n{0: -0.7763105348145894,\n 1: -1.1424814378794312,\n 2: -2.2016967242006165,\n 3: -0.07880407264786263,\n 4: -0.013002507622730114,\n 5: -0.7229686670281192,\n 6: 0.38113581672081925}\n\n\n通过输入代码并按下 return 运行任意Python语句。当只是输入一个变量，会显示代表的对象：\nhttp://localhost:8888/ 手动打开notebook\n\n\n自省\n在变量前后使用问号，可以显示对象的信息： 这可以作为对象的自省： 若对象是一个函数或实例方法，定义过的文档都可显示出信息；\n\nb=[1,2,3]\nb?\n\n\n\n%run命令\n可以使用%run命令运行所有python程序。假设有一个文件：\n\ndef f(x, y, z):\n    return (x + y) / z\na = 5\nb = 6\nc = 7.5\nresult = f(a, b, c)\n\n#%run ipython_script_test.py\n\n\njupyter notebook 中的神奇命令\n\n编辑模式（按esc进入）\nEnter : 转入编辑模式\nShift-Enter : 运行本单元，选中下个单元\nCtrl-Enter : 运行本单元\nAlt-Enter : 运行本单元，在其下插入新单元\nY : 单元转入代码状态\nM :单元转入markdown状态\nR : 单元转入raw状态\n\n\n命令模式（按enter进入）\nTab : 代码补全或缩进\nShift-Tab : 提示\nCtrl-] : 缩进\nCtrl-[ : 解除缩进\nCtrl-A : 全选\nCtrl-Z : 复原\nCtrl-Shift-Z : 再做\nCtrl-Y : 再做\nCtrl-Home : 跳到单元开头\nCtrl-Up : 跳到单元开头\nCtrl-End : 跳到单元末尾\nCtrl-Down : 跳到单元末尾\nCtrl-Left : 跳到左边一个字首\nCtrl-Right : 跳到右边一个字首\nCtrl-Backspace : 删除前面一个字\nCtrl-Delete : 删除后面一个字\n\n\n\nimage.png\n\n\n\na=[1,2,3]\nb=a\nb\n\n[1, 2, 3]\n\n\n笔记：赋值也被称作绑定，我们是把一个名字绑定给一个对象。变量名有时可能被称为绑定变量。"
  },
  {
    "objectID": "posts/python学习笔记0922.html#python数据结构",
    "href": "posts/python学习笔记0922.html#python数据结构",
    "title": "\nTable of Contents\n",
    "section": "python数据结构",
    "text": "python数据结构\n\n元组\n最为简单的创建方式——通过逗号隔开即可\n\na=1,2,3\na\n\n(1, 2, 3)\n\n\n用turble可以将任意序列转换为元组\n\ntuple([4, 0, 2])\ntup = tuple(['foo', [1, 2], True])\ntup\n\n('foo', [1, 2], True)\n\n\n元组内创建的东西一旦创建就不可以改变了；因为元组的大小和内容不能修改，它的实例方法都很轻量。其中一个很有用的就是count（也适用于列表），它可以统计某个值得出现频率：\n\ntup.count([1,2])\n\n1\n\n\n\n\n列表\n与元组对比，列表的长度可变、内容可以被修改。你可以用方括号定义，或用list函数：\n\na_list = [2, 3, 7, None]\n\n\na_list\n\n[2, 3, 7, None]\n\n\nappend可以用于添加元素,insert可以用于在特定位置插入元素（在指定位置的末尾）\n\na_list.append(4)\na_list\n\n[2, 3, 7, None, 4]\n\n\n\na_list.insert(1,10)\na_list\n\n[2, 10, 3, 7, None, 4]\n\n\n\n\n集合\n集合和字典差不多\n\nset([2, 2, 2, 1, 3, 3])\n\n{1, 2, 3}\n\n\n与字典类似，集合元素通常都是不可变的。要获得类似列表的元素，必须转换成元组：\n\nmy_data = [1, 2, 3, 4]\nmy_set = {tuple(my_data)}\nmy_set\n\n{(1, 2, 3, 4)}\n\n\n\n\nNumPy\nNumPy最重要的一个特点就是其支持N维数组对象（即ndarray），该对象是一个快速而灵活的大数据集容器。你可以利用这种数组对整块数据执行一些数学运算，其语法跟标量元素之间的运算一样。numpy的数组与列表有点相似，但仍然不同的是要纯洁一点，只能是一个数组类型。\n\nimport numpy as np\n\n\ndata = np.random.randn(2, 3)\ndata\n\narray([[ 0.46515646,  1.89109622, -1.13701716],\n       [-0.78530201,  1.12068646, -1.47508807]])\n\n\n\ndata[1]\n\narray([-0.78530201,  1.12068646, -1.47508807])\n\n\n\ndata[[1]]\n\narray([[-0.78530201,  1.12068646, -1.47508807]])\n\n\n因为data2是列表的列表，NumPy数组arr2的两个维度的shape是从data2引入的。可以用属性ndim和shape验证：\n\ndata2 = [[1, 2, 3, 4], [5, 6, 7, 8]]\narr2 = np.array(data2)\n\n\narr2.ndim\n\narr2.shape\n\n(2, 4)\n\n\n\nnp.zeros(10)\nnp.zeros((3,6))\n\narray([[0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0.],\n       [0., 0., 0., 0., 0., 0.]])\n\n\n每一个数组都有一个dtype属性，用于描述数组的数据类型。 np.array会自动推断数据类型。数据类型被存储在一个特殊的元数据dtype中。\n\nimport numpy as np\ndata1 = [6,8.5,9,0]\narr1 = np.array(data1)\narr1\n\narray([6. , 8.5, 9. , 0. ])\n\n\n\narr1.dtype\n\ndtype('float64')\n\n\narrage方法根据start与stop指定的范围及step设定的步长来生成一个ndarray对象，start为起时值。\narange(start,stop,step,dtype)\narange()根据start与stop指定的范围设定的步长范围，生成一个ndarray对象。\n\narr3 = np.arange(10)# generating 0-9 ndarray array\nprint(arr3)\n\n[0 1 2 3 4 5 6 7 8 9]\n\n\nprint的时候的样子是不同于直接输出的\n\narr3\n\narray([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])\n\n\n\n与range()函数较为相像，但range()生成的只能用于迭代。（属于一个迭代器）\nnp.range()的数据是左开右闭的，最后一个数取不到。当然可以在设置option中指定endpoint=False\n\n\nnp.ones_like(arr3)\n\narray([1, 1, 1, 1, 1, 1, 1, 1, 1, 1])\n\n\n\nnp.empty_like(arr3)\n\narray([0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n\n\n\nimport random\nimport matplotlib.pyplot as plt\nposition = 0\nwalk = [position]\nsteps = 1000\nfor i in range(steps):\n    step = 1 if random.randint(0, 1) else -1\n    position += step\n    walk.append(position)\n\n\nplt.plot(walk[:100])\n\n\n\n\n\nimport pandas as pd\nimport numpy as np\n\n\nnp.abs(-2)\n\n2\n\n\n\n\n基本控制流\n\ngrade = 95\nif grade > 90:\n    print('A')\nelse:\n    if grade > 80:\n        print('B')\n    else:\n        if grade > 70:\n            print('C')\n        else:\n            if grade >60:\n                print('D')\n            else:\n                print('F')\n\nA\n\n\n\ngrade = 95\nif grade > 90:\n    print('A')\nif grade > 80:\n    print('B')\nif grade > 70:\n    print('C')\n\nA\nB\nC\n\n\n\n\n复杂数据结构\n\n#### 1.5.1 list列表\n\n\nl_1=[]\nl_2=[1,2,0,'a','b',True]\nprint(l_1)\nprint(l_2)\n\n[]\n[1, 2, 0, 'a', 'b', True]\n\n\n\nar1=np.array([0,1,2,3])\nar2=np.array([0,1,'2',3])\nar3=np.array([1.,2.,3.,4.])\n\n\nar1\n\narray([0, 1, 2, 3])\n\n\n\nar2\n\narray(['0', '1', '2', '3'], dtype='<U21')\n\n\n\nprint(ar3.dtype)\n\nfloat64\n\n\n精度的不同，n.rate会进行转换，复杂性增大\n\n全是浮点数，全让他为整型；仍然是向下取整\nnumpy的储存方式，是object对象，元素都是一个list\n\n\nts1 tensorflow 深度学习框架，推出一个以tensorprosing\nn层的数组，tensor一维是一个list，二维就是一个矩阵；\n这个方法就可生成\n\n\nar0=np.zeros(10,dtype=int)\nar1=np.empty(10)\nar2=np.ones((2,3),dtype=float)\nar3=np.full((2,3,3,),2.33)\nar4=np.indentity(5)#只要一个维度参数，生成单位矩\n\n\ni1=np.eye(5)\ni2=np.eye(5,7)\ni3=np.eye(5,7,k=2)#k的值，表示值的移动方向\n\n\n\ni1\n\narray([[1., 0., 0., 0., 0.],\n       [0., 1., 0., 0., 0.],\n       [0., 0., 1., 0., 0.],\n       [0., 0., 0., 1., 0.],\n       [0., 0., 0., 0., 1.]])\n\n\n\ni2\n\narray([[1., 0., 0., 0., 0., 0., 0.],\n       [0., 1., 0., 0., 0., 0., 0.],\n       [0., 0., 1., 0., 0., 0., 0.],\n       [0., 0., 0., 1., 0., 0., 0.],\n       [0., 0., 0., 0., 1., 0., 0.]])\n\n\n\ni3\n\narray([[0., 0., 1., 0., 0., 0., 0.],\n       [0., 0., 0., 1., 0., 0., 0.],\n       [0., 0., 0., 0., 1., 0., 0.],\n       [0., 0., 0., 0., 0., 1., 0.],\n       [0., 0., 0., 0., 0., 0., 1.]])\n\n\n\n#### 区间生成\n\n\nar5=np.arange(0,20,3)\nar6=np.linspace(10,30,7)#划分为7个区间\n\n\nar5\n\narray([ 0,  3,  6,  9, 12, 15, 18])\n\n\n\nar6 \n\narray([10.        , 13.33333333, 16.66666667, 20.        , 23.33333333,\n       26.66666667, 30.        ])\n\n\n\n#### randomization\n\n\nar7=np.random.random((4,3))\nar8=np.random.normal(0,1,(4,4))\nar9=np.random.randint(0,9,(3,3))\n\n\nar7,ar8,ar9\n\n(array([[0.32451575, 0.86099969, 0.00883096],\n        [0.29874319, 0.38364274, 0.37974496],\n        [0.74177402, 0.00796406, 0.53902434],\n        [0.47040058, 0.84744851, 0.64012516]]),\n array([[ 0.44292104, -0.41489517,  1.53924554, -0.66693073],\n        [ 0.10580937, -0.5669722 ,  1.54713063, -1.03933949],\n        [-0.09471968,  0.53762742,  0.38224316, -0.90496893],\n        [ 0.56564553,  1.65940541, -0.38884517,  0.67499766]]),\n array([[7, 8, 6],\n        [3, 4, 5],\n        [2, 6, 6]]))\n\n\n\nnp.random.seed(0)\nra1=np.random.random((3,4))\n# real random and fake random(模拟出来的)seed is what we from\n# seed(x),x is the number that random number is repitable \n# 在另外一行，连续的两个矩阵，是不同的；保证了代码的可复制性\n\n\n\n数组属性\n维度(dimension)都是由ndim属性来描述的。\n\nar1=np.ones((3,4,5))\nprint(\"the ar1's dim is\",ar1.ndim,'\\n',ar1.shape,'\\n',ar1.size)\nprint(len(ar1))\n\nthe ar1's dim is 3 \n (3, 4, 5) \n 60\n3\n\n\n\nprint(ar2.dtype == ar3.dtype)\n\nFalse\n\n\n64bit 8byte\\ 100M byte 10M bit\n\nprint(ar1.size)# 可以知道哪找bug\n\n60\n\n\n\n#function:astype\n#ar1=ar1.astype(np.float)\n\n对于N维数组而言，还有一个重要的属性是shape（数组形状），形状主要用于表征数组每个维度的数量，一维数组的形状就是它的长度一维也称为1D张量(1D tensor)\n\nNumPy数组索引\n\nar1 = np.array([1,2,3,3])\n\n\nar1[1]\n\n2\n\n\n\nar = np.array([[1,2,3,4],[5,6,7,8],[9,10,11,12]])\n\n\nar  #python的索引都是从(0,0)开始。\n\narray([[ 1,  2,  3,  4],\n       [ 5,  6,  7,  8],\n       [ 9, 10, 11, 12]])\n\n\n\nar[0,2]\n\n3\n\n\n\nar[0,:]#choose whole raw\n# ‘：’将所有数选下来\n\nNameError: name 'ar' is not defined\n\n\n\nar[0]\n\narray([1, 2, 3, 4])\n\n\n\n#改数据类型必须符合原来的数据类型\nar[0,2]=5.14\nar\n\narray([[ 1,  2,  5,  4],\n       [ 5,  6,  7,  8],\n       [ 9, 10, 11, 12]])\n\n\n\n#切片/花式索引\nar[3::3] #第一个为开始，第二个为步长\n\narray([], shape=(0, 4), dtype=int64)\n\n\n\nar[5:-1]\n\narray([], shape=(0, 4), dtype=int64)\n\n\n\nar[:10:-2]\n\narray([], shape=(0, 4), dtype=int64)\n\n\n\nar[:2,1:2]\n#表示行全取\n\narray([[2],\n       [6]])\n\n\n\nar[::-1,::2]\n\narray([[ 9, 11],\n       [ 5,  7],\n       [ 1,  5]])\n\n\n\nar[[0,1,2],[1,2,3]]\n#按照对应索引来取之后仍然放在一个array之中\n\narray([ 2,  7, 12])\n\n\n\n#[start=0:end=length:slice step]\n\n\nar,ar[1::],ar[1::2],ar[::2],ar[:1:]\n\n(array([[ 1,  2,  5,  4],\n        [ 5,  6,  7,  8],\n        [ 9, 10, 11, 12]]),\n array([[ 5,  6,  7,  8],\n        [ 9, 10, 11, 12]]),\n array([[5, 6, 7, 8]]),\n array([[ 1,  2,  5,  4],\n        [ 9, 10, 11, 12]]),\n array([[1, 2, 5, 4]]))\n\n\n取出一列，当最终出来的结果和一行类似； 其实这本身就是函数的概念；\n\nsub_ar=ar[1:,:2]\nsub_ar\n\narray([[ 5,  6],\n       [ 9, 10]])\n\n\n\nsub_ar_c=ar[1:,:2].copy() #father doesnot be effected\n\n\nsub_ar\n\narray([[ 5,  6],\n       [ 9, 10]])\n\n\n\nar > 0 #return bool matrix\n\narray([[ True,  True,  True,  True],\n       [ True,  True,  True,  True],\n       [ True,  True,  True,  True]])\n\n\n\nar %2==0 #可将布尔值用于索引上\n\narray([[False,  True, False,  True],\n       [False,  True, False,  True],\n       [False,  True, False,  True]])\n\n\n\nar2=ar.reshape((1,12))\nar3=ar.reshape((12,1))\n\n\nar2,ar3\n\n(array([[ 1,  2,  5,  4,  5,  6,  7,  8,  9, 10, 11, 12]]),\n array([[ 1],\n        [ 2],\n        [ 5],\n        [ 4],\n        [ 5],\n        [ 6],\n        [ 7],\n        [ 8],\n        [ 9],\n        [10],\n        [11],\n        [12]]))\n\n\n\nprint(len(ar2))\nprint(len(ar1))\n\n1\n3\n\n\n\n\ncombination\n\nar_c1=np.concatenate([ar2,ar3.reshape(1,12)])\n\n\nar_c1\n\narray([[ 1,  2,  5,  4,  5,  6,  7,  8,  9, 10, 11, 12],\n       [ 1,  2,  5,  4,  5,  6,  7,  8,  9, 10, 11, 12]])\n\n\n\nll=list(range(10000))\n%time ll=list(map(lambda x:x*2,ll))\n\nCPU times: user 1.08 ms, sys: 899 µs, total: 1.98 ms\nWall time: 3.92 ms\n\n\n\nmap(lambda x:x*2,ll)\n\n<map at 0x7fa151002c70>\n\n\n\nrange(1000)\n\nrange(0, 1000)\n\n\n\nlist(range(1,100))\n #range 到只有99\n\n[1,\n 2,\n 3,\n 4,\n 5,\n 6,\n 7,\n 8,\n 9,\n 10,\n 11,\n 12,\n 13,\n 14,\n 15,\n 16,\n 17,\n 18,\n 19,\n 20,\n 21,\n 22,\n 23,\n 24,\n 25,\n 26,\n 27,\n 28,\n 29,\n 30,\n 31,\n 32,\n 33,\n 34,\n 35,\n 36,\n 37,\n 38,\n 39,\n 40,\n 41,\n 42,\n 43,\n 44,\n 45,\n 46,\n 47,\n 48,\n 49,\n 50,\n 51,\n 52,\n 53,\n 54,\n 55,\n 56,\n 57,\n 58,\n 59,\n 60,\n 61,\n 62,\n 63,\n 64,\n 65,\n 66,\n 67,\n 68,\n 69,\n 70,\n 71,\n 72,\n 73,\n 74,\n 75,\n 76,\n 77,\n 78,\n 79,\n 80,\n 81,\n 82,\n 83,\n 84,\n 85,\n 86,\n 87,\n 88,\n 89,\n 90,\n 91,\n 92,\n 93,\n 94,\n 95,\n 96,\n 97,\n 98,\n 99]\n\n\n\nimport numpy as np\nar = np.array(range(1,13)).reshape((3,4))\n\n\nar\n\narray([[ 1,  2,  3,  4],\n       [ 5,  6,  7,  8],\n       [ 9, 10, 11, 12]])\n\n\n\n(3,4)\n\n(3, 4)\n\n\n\nar*2\n\narray([[ 2,  4,  6,  8],\n       [10, 12, 14, 16],\n       [18, 20, 22, 24]])\n\n\n\nobj1=range(10)\n\n\nobj1\n\nrange(0, 10)\n\n\n\nobj1[9]\n\n9\n\n\n\nobj1?\n\n\ntimeit(obj1)\n\n28.4 ns ± 0.0223 ns per loop (mean ± std. dev. of 7 runs, 10,000,000 loops each)\n\n\n\nimport random \na=random.randint(0,100)\na\n\n71\n\n\n\na*2\n\n\nimport matplotlib.pyplot as plt\nfrom sklearn import datasets\nfrom sklearn.feature_selection import SelectKBest,f_regression\nfrom sklearn.linear_model import LinearRegression\nfrom sklearn.svm import SVR\nfrom sklearn.ensemble import RandomForestRegressor\n\n\nboston_dataset=datasets.load_boston()\nx_full=boston_dataset.data\ny=boston_dataset.target\nprint(x_full.shape)\nprint(y.shape)\n\n(506, 13)\n(506,)\n\n\n/Users/a182501/opt/anaconda3/lib/python3.8/site-packages/sklearn/utils/deprecation.py:87: FutureWarning: Function load_boston is deprecated; `load_boston` is deprecated in 1.0 and will be removed in 1.2.\n\n    The Boston housing prices dataset has an ethical problem. You can refer to\n    the documentation of this function for further details.\n\n    The scikit-learn maintainers therefore strongly discourage the use of this\n    dataset unless the purpose of the code is to study and educate about\n    ethical issues in data science and machine learning.\n\n    In this special case, you can fetch the dataset from the original\n    source::\n\n        import pandas as pd\n        import numpy as np\n\n\n        data_url = \"http://lib.stat.cmu.edu/datasets/boston\"\n        raw_df = pd.read_csv(data_url, sep=\"\\s+\", skiprows=22, header=None)\n        data = np.hstack([raw_df.values[::2, :], raw_df.values[1::2, :2]])\n        target = raw_df.values[1::2, 2]\n\n    Alternative datasets include the California housing dataset (i.e.\n    :func:`~sklearn.datasets.fetch_california_housing`) and the Ames housing\n    dataset. You can load the datasets as follows::\n\n        from sklearn.datasets import fetch_california_housing\n        housing = fetch_california_housing()\n\n    for the California housing dataset and::\n\n        from sklearn.datasets import fetch_openml\n        housing = fetch_openml(name=\"house_prices\", as_frame=True)\n\n    for the Ames housing dataset.\n    \n  warnings.warn(msg, category=FutureWarning)\n\n\n\nselector = SelectKBest(f_regression, k=1)\nselector.fit(x_full,y)\nX=x_full[:,selector.get_support()]\nprint(X.shape)\n\n(506, 1)\n\n\n\nplt.scatter(X,y,color='black')\nplt.show()\n\n\n\n\n\niris=datasets.load_iris()\n\n\nprint(iris.data)\n\n[[5.1 3.5 1.4 0.2]\n [4.9 3.  1.4 0.2]\n [4.7 3.2 1.3 0.2]\n [4.6 3.1 1.5 0.2]\n [5.  3.6 1.4 0.2]\n [5.4 3.9 1.7 0.4]\n [4.6 3.4 1.4 0.3]\n [5.  3.4 1.5 0.2]\n [4.4 2.9 1.4 0.2]\n [4.9 3.1 1.5 0.1]\n [5.4 3.7 1.5 0.2]\n [4.8 3.4 1.6 0.2]\n [4.8 3.  1.4 0.1]\n [4.3 3.  1.1 0.1]\n [5.8 4.  1.2 0.2]\n [5.7 4.4 1.5 0.4]\n [5.4 3.9 1.3 0.4]\n [5.1 3.5 1.4 0.3]\n [5.7 3.8 1.7 0.3]\n [5.1 3.8 1.5 0.3]\n [5.4 3.4 1.7 0.2]\n [5.1 3.7 1.5 0.4]\n [4.6 3.6 1.  0.2]\n [5.1 3.3 1.7 0.5]\n [4.8 3.4 1.9 0.2]\n [5.  3.  1.6 0.2]\n [5.  3.4 1.6 0.4]\n [5.2 3.5 1.5 0.2]\n [5.2 3.4 1.4 0.2]\n [4.7 3.2 1.6 0.2]\n [4.8 3.1 1.6 0.2]\n [5.4 3.4 1.5 0.4]\n [5.2 4.1 1.5 0.1]\n [5.5 4.2 1.4 0.2]\n [4.9 3.1 1.5 0.2]\n [5.  3.2 1.2 0.2]\n [5.5 3.5 1.3 0.2]\n [4.9 3.6 1.4 0.1]\n [4.4 3.  1.3 0.2]\n [5.1 3.4 1.5 0.2]\n [5.  3.5 1.3 0.3]\n [4.5 2.3 1.3 0.3]\n [4.4 3.2 1.3 0.2]\n [5.  3.5 1.6 0.6]\n [5.1 3.8 1.9 0.4]\n [4.8 3.  1.4 0.3]\n [5.1 3.8 1.6 0.2]\n [4.6 3.2 1.4 0.2]\n [5.3 3.7 1.5 0.2]\n [5.  3.3 1.4 0.2]\n [7.  3.2 4.7 1.4]\n [6.4 3.2 4.5 1.5]\n [6.9 3.1 4.9 1.5]\n [5.5 2.3 4.  1.3]\n [6.5 2.8 4.6 1.5]\n [5.7 2.8 4.5 1.3]\n [6.3 3.3 4.7 1.6]\n [4.9 2.4 3.3 1. ]\n [6.6 2.9 4.6 1.3]\n [5.2 2.7 3.9 1.4]\n [5.  2.  3.5 1. ]\n [5.9 3.  4.2 1.5]\n [6.  2.2 4.  1. ]\n [6.1 2.9 4.7 1.4]\n [5.6 2.9 3.6 1.3]\n [6.7 3.1 4.4 1.4]\n [5.6 3.  4.5 1.5]\n [5.8 2.7 4.1 1. ]\n [6.2 2.2 4.5 1.5]\n [5.6 2.5 3.9 1.1]\n [5.9 3.2 4.8 1.8]\n [6.1 2.8 4.  1.3]\n [6.3 2.5 4.9 1.5]\n [6.1 2.8 4.7 1.2]\n [6.4 2.9 4.3 1.3]\n [6.6 3.  4.4 1.4]\n [6.8 2.8 4.8 1.4]\n [6.7 3.  5.  1.7]\n [6.  2.9 4.5 1.5]\n [5.7 2.6 3.5 1. ]\n [5.5 2.4 3.8 1.1]\n [5.5 2.4 3.7 1. ]\n [5.8 2.7 3.9 1.2]\n [6.  2.7 5.1 1.6]\n [5.4 3.  4.5 1.5]\n [6.  3.4 4.5 1.6]\n [6.7 3.1 4.7 1.5]\n [6.3 2.3 4.4 1.3]\n [5.6 3.  4.1 1.3]\n [5.5 2.5 4.  1.3]\n [5.5 2.6 4.4 1.2]\n [6.1 3.  4.6 1.4]\n [5.8 2.6 4.  1.2]\n [5.  2.3 3.3 1. ]\n [5.6 2.7 4.2 1.3]\n [5.7 3.  4.2 1.2]\n [5.7 2.9 4.2 1.3]\n [6.2 2.9 4.3 1.3]\n [5.1 2.5 3.  1.1]\n [5.7 2.8 4.1 1.3]\n [6.3 3.3 6.  2.5]\n [5.8 2.7 5.1 1.9]\n [7.1 3.  5.9 2.1]\n [6.3 2.9 5.6 1.8]\n [6.5 3.  5.8 2.2]\n [7.6 3.  6.6 2.1]\n [4.9 2.5 4.5 1.7]\n [7.3 2.9 6.3 1.8]\n [6.7 2.5 5.8 1.8]\n [7.2 3.6 6.1 2.5]\n [6.5 3.2 5.1 2. ]\n [6.4 2.7 5.3 1.9]\n [6.8 3.  5.5 2.1]\n [5.7 2.5 5.  2. ]\n [5.8 2.8 5.1 2.4]\n [6.4 3.2 5.3 2.3]\n [6.5 3.  5.5 1.8]\n [7.7 3.8 6.7 2.2]\n [7.7 2.6 6.9 2.3]\n [6.  2.2 5.  1.5]\n [6.9 3.2 5.7 2.3]\n [5.6 2.8 4.9 2. ]\n [7.7 2.8 6.7 2. ]\n [6.3 2.7 4.9 1.8]\n [6.7 3.3 5.7 2.1]\n [7.2 3.2 6.  1.8]\n [6.2 2.8 4.8 1.8]\n [6.1 3.  4.9 1.8]\n [6.4 2.8 5.6 2.1]\n [7.2 3.  5.8 1.6]\n [7.4 2.8 6.1 1.9]\n [7.9 3.8 6.4 2. ]\n [6.4 2.8 5.6 2.2]\n [6.3 2.8 5.1 1.5]\n [6.1 2.6 5.6 1.4]\n [7.7 3.  6.1 2.3]\n [6.3 3.4 5.6 2.4]\n [6.4 3.1 5.5 1.8]\n [6.  3.  4.8 1.8]\n [6.9 3.1 5.4 2.1]\n [6.7 3.1 5.6 2.4]\n [6.9 3.1 5.1 2.3]\n [5.8 2.7 5.1 1.9]\n [6.8 3.2 5.9 2.3]\n [6.7 3.3 5.7 2.5]\n [6.7 3.  5.2 2.3]\n [6.3 2.5 5.  1.9]\n [6.5 3.  5.2 2. ]\n [6.2 3.4 5.4 2.3]\n [5.9 3.  5.1 1.8]]\n\n\n\nimport pandas as pd\nimport urllib2\nurl= \"http://aima.cs.berkeley.edu/data/iris.csv\"\nset1=urllib2.Request(url)\niris_p=urllib2.urlopen(set1)\n\nModuleNotFoundError: No module named 'urllib2'\n\n\n\nplt.scatter(X,y)\nplt.show()\n\n\n\n\n\nfrom sklearn.pipeline import make_pipeline\n\nregressor=LinearRegression(normalize=True)#线性最小二乘估计来做，normalize\nregressor.fit(X,y)\nplt.scatter(X,y,color='black')\nplt.plot(X,regressor.predict(X),color='blue',linewidth=3)\nplt.show()\n\n/Users/a182501/opt/anaconda3/lib/python3.8/site-packages/sklearn/linear_model/_base.py:141: FutureWarning: 'normalize' was deprecated in version 1.0 and will be removed in 1.2.\nIf you wish to scale the data, use Pipeline with a StandardScaler in a preprocessing stage. To reproduce the previous behavior:\n\nfrom sklearn.pipeline import make_pipeline\n\nmodel = make_pipeline(StandardScaler(with_mean=False), LinearRegression())\n\nIf you wish to pass a sample_weight parameter, you need to pass it as a fit parameter to each step of the pipeline as follows:\n\nkwargs = {s[0] + '__sample_weight': sample_weight for s in model.steps}\nmodel.fit(X, y, **kwargs)\n\n\n  warnings.warn(\n\n\n\n\n\n\nregressor=SVR() #SVR是指支持向量机的方式来实现\nregressor.fit(X,y)\nplt.scatter(X,y,color='black')\nplt.scatter(X,regressor.predict(X),color='blue',linewidth=3)\nplt.show()\n\n\n\n\n\n\n随机森林\n\nregressor=RandomForestRegressor()\nregressor.fit(X,y)\nplt.scatter(X,y,color='black')\nplt.scatter(X,regressor.predict(X),color='blue',linewidth=2)\n\n<matplotlib.collections.PathCollection at 0x7fd0bc78ffd0>\n\n\n\n\n\n?RandomForestRegressor\nA random forest is a meta estimator that fits a number of classifying decision trees on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is controlled with the max_samples parameter if bootstrap=True (default), otherwise the whole dataset is used to build each tree.\n\ntype(regressor)\n\nsklearn.svm._classes.SVR"
  },
  {
    "objectID": "posts/python学习笔记0922.html#pandas",
    "href": "posts/python学习笔记0922.html#pandas",
    "title": "\nTable of Contents\n",
    "section": "Pandas",
    "text": "Pandas\n\nSeries数据\nSeries数据是Pandas的核心数据结构之一。\n\nSeries创建\n\nimport pandas as pd\na = pd.Series([2,0,-4,12])\na\n\n0     2\n1     0\n2    -4\n3    12\ndtype: int64\n\n\nSeries 的数据源用列表来填充，两者有相似之处，都是相同的类型，也可以是不同的类型。 series 增加对应的标签(label)作为索引，若没有，就默认是0～n-1内的索引值。\n\na.values\n\narray([ 2,  0, -4, 12])\n\n\n\na.index\n\nRangeIndex(start=0, stop=4, step=1)\n\n\n\na.index=['a','b','c','d']\na\n\na     2\nb     0\nc    -4\nd    12\ndtype: int64\n\n\n因为这种对应关系，因此对于Series可以使用字典的方式来实现对应的dict的key,series中的value相对应。\n\nDict = {'a':1,'b':2,'c':3,'d':4}\n\n\ntemp = pd.Series(Dict)\ntemp\n\na    1\nb    2\nc    3\nd    4\ndtype: int64\n\n\nSeries中的数据是有序的，同时index和value是相互独立的，两者的索引也存在区别，Series和value是可变的。而字典的是不可变的。\n\ntemp.describe()\n\ncount    4.000000\nmean     2.500000\nstd      1.290994\nmin      1.000000\n25%      1.750000\n50%      2.500000\n75%      3.250000\nmax      4.000000\ndtype: float64\n\n\n一些指标的含义： - count 一列数据的个数 - mean 一列数据的均值 - 25%:一列数据中前25的分位数\n\n\n数据访问\n可以通过特定索引值来访问、修改索引位置对应的数值，series对象再本质上就是一个带有Numpy数组，因此Numpy可直接运用于Series中。\n\ncities = {\"beijing\":55000,\"shanghai\":40000,\"shenzhen\":10000,\"hangzhou\":20000,\"guangzhou\":30000}\napts = pd.Series(cities,name=\"prices\")\napts\n\nbeijing      55000\nshanghai     40000\nshenzhen     10000\nhangzhou     20000\nguangzhou    30000\nName: prices, dtype: int64\n\n\n\napts[0]\n\n55000\n\n\n\napts['beijing']\n\n55000\n\n\n\napts['beijing']=60000\napts\n\nbeijing      60000\nshanghai     40000\nshenzhen     10000\nhangzhou     20000\nguangzhou    30000\nName: prices, dtype: int64\n\n\n堆叠操作:append()\n\ns1 = pd.Series([1,2,3])\ns2 = pd.Series([2,3,4])\n\n\ns1.append(s2,ignore_index=True)\n\n/var/folders/sn/g01cvq2j72j6tbq2pmmm074h0000gq/T/ipykernel_51186/1461221517.py:1: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  s1.append(s2,ignore_index=True)\n\n\n0    1\n1    2\n2    3\n3    2\n4    3\n5    4\ndtype: int64\n\n\n\n\nSeries中的向量化操作与布尔索引\n\napts*3\n\nbeijing      180000\nshanghai     120000\nshenzhen      30000\nhangzhou      60000\nguangzhou     90000\nName: prices, dtype: int64\n\n\n任何NaN(Not a Number)参与的计算，返回的结果依然是NaN。\n向量化加法：\n\napts+apts\n\nbeijing      110000\nshanghai      80000\nshenzhen      20000\nhangzhou      40000\nguangzhou     60000\nName: prices, dtype: int64\n\n\n\napts > apts.median()\n\nbeijing       True\nshanghai      True\nshenzhen     False\nhangzhou     False\nguangzhou    False\nName: prices, dtype: bool\n\n\n会产生一个与原矩阵维度类似的bool矩阵。这个布尔矩阵也可以作为Series对象对应下标，用于获得值为True的位置的对应的数值。从而达到抽取特定样本的目的。\n\napts[apts > apts.median()]\n\nbeijing     55000\nshanghai    40000\nName: prices, dtype: int64\n\n\n\n\n切片操作\n通过索引切片或处理Series中的一个或多个值，返回的结果依然是Series对象。\n\napts[1:3]\n\nshanghai    40000\nshenzhen    10000\nName: prices, dtype: int64\n\n\n提取的是第一和第二个元素，第三个元素访问不到。\n\nimport numpy as np\narr = np.array([1,2,3,np.nan])\ntemp = pd.Series(arr,index=['a','b','c','d'])\ntemp\n\na    1.0\nb    2.0\nc    3.0\nd    NaN\ndtype: float64\n\n\n\ntemp.isnull()\n\na    False\nb    False\nc    False\nd     True\ndtype: bool\n\n\nisnull()还可以把Series对象作为参数\n\npd.isnull(temp)\n\na    False\nb    False\nc    False\nd     True\ndtype: bool\n\n\n数据量庞大时候，缺失值可能处于正常数据中，这时候可以用布尔表达式形式，将这些数据筛选出来。\n\ntemp[temp.isnull()==True]\n\nd   NaN\ndtype: float64\n\n\n\n\n删除和添加\n利用Pandas中的drop()\n\na = pd.Series([2,0,-4,12])\na\n\n0     2\n1     0\n2    -4\n3    12\ndtype: int64\n\n\n\na.drop(0)  #这里的0指代原Series中的索引位置,而并非会影响原数据\n\n1     0\n2    -4\n3    12\ndtype: int64\n\n\n\na.drop([0,1])\n\n2    -4\n3    12\ndtype: int64\n\n\n\nprint(a)\n\n0     2\n1     0\n2    -4\n3    12\ndtype: int64\n\n\n\na.drop(0,inplace = True)\n\n\na\n\n1     0\n2    -4\n3    12\ndtype: int64\n\n\n添加元素\n\na =pd.Series([1,2,3])\n\n\nb =pd.Series(np.random.rand(3))  #np.random.rand(3) 生成0-1的随机数\nb\n\n0    0.461400\n1    0.838999\n2    0.442281\ndtype: float64\n\n\n\na.append(b)\n\n/var/folders/sn/g01cvq2j72j6tbq2pmmm074h0000gq/T/ipykernel_17033/2735396570.py:1: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  a.append(b)\n\n\n0    1.000000\n1    2.000000\n2    3.000000\n0    0.461400\n1    0.838999\n2    0.442281\ndtype: float64\n\n\n\na.append(b,ignore_index=True)\n\n/var/folders/sn/g01cvq2j72j6tbq2pmmm074h0000gq/T/ipykernel_17033/3422773070.py:1: FutureWarning: The series.append method is deprecated and will be removed from pandas in a future version. Use pandas.concat instead.\n  a.append(b,ignore_index=True)\n\n\n0    1.000000\n1    2.000000\n2    3.000000\n3    0.461400\n4    0.838999\n5    0.442281\ndtype: float64\n\n\n\n\n\nDataFrame\n若将Series看作Excel的一列，则DataFrame就是一张表\n\nimport numpy as np\nimport pandas as pd\ndata1 = np.random.randint(1,10,9).reshape(3,3)\n\n\ndata1 \n\narray([[5, 6, 2],\n       [8, 7, 4],\n       [1, 5, 9]])\n\n\n\nnp.random.randint(1,9)  #生成在1-9的整数随机数\n\n7\n\n\n\ndf1 = pd.DataFrame(data1)\ndf1\n\n\n\n\n\n0\n1\n2\n\n\n\n\n0\n5\n6\n2\n\n\n1\n8\n7\n4\n\n\n2\n1\n5\n9\n\n\n\n\n\n改变index行名，显示指定列名\n\ndf2 = pd.DataFrame(data1,columns=['one','two','three'],index=['a','b','c'])\ndf2\n\n\n\n\n\none\ntwo\nthree\n\n\n\n\na\n5\n6\n2\n\n\nb\n8\n7\n4\n\n\nc\n1\n5\n9\n\n\n\n\n\n\ndf2.T\n\n\n\n\n\na\nb\nc\n\n\n\n\none\n5\n8\n1\n\n\ntwo\n6\n7\n5\n\n\nthree\n2\n4\n9\n\n\n\n\n\n\n访问DataFrame中的列和行\n\ndf2.columns\n\nIndex(['one', 'two', 'three'], dtype='object')\n\n\n\ndf2.columns.values\n\narray(['one', 'two', 'three'], dtype=object)\n\n\n在pandas，Dataframe可以将列的名称作为DataFrame对象的属性来访问数据。\n\ndf2.one\n\na    5\nb    8\nc    1\nName: one, dtype: int64\n\n\n\ndf2['one']\n\na    5\nb    8\nc    1\nName: one, dtype: int64\n\n\n上述两者是等价的\n\n\nDataFrame中的删除操作\n类似于Series，可以同样使用drop来删除一行或一列\n\n\nDataframe的轴方向\n\n\n\n基于Pandas的文件读取与分析"
  },
  {
    "objectID": "posts/python学习笔记0922.html#matplotlib-与seaborn可视化分析",
    "href": "posts/python学习笔记0922.html#matplotlib-与seaborn可视化分析",
    "title": "\nTable of Contents\n",
    "section": "Matplotlib 与Seaborn可视化分析",
    "text": "Matplotlib 与Seaborn可视化分析\n\nMatplotlib与图形绘制\n\nimport math\nimport matplotlib.pyplot as plt\n\n\nnbsample = 256\nxrange = [-math.pi,math.pi]\nx ,y = [],[] #create the void list\nfor i in range(nbsample):\n    ratio = (i + 0.5)/nbsample\n    x.append(xrange[0]+(xrange[1]-xrange[0])*ratio)\n    y.append(math.sin(x[-1]))  #反向操作，将列表中的最后一个元素带入函数，再append in y\n\nplt.plot(x,y)\nplt.show()\n    \n\n\n\n\n上述做法可以用numpy来得到简化\n\nx = np.linspace(-math.pi,math.pi,num=256)\ny=np.sin(x)\nplt.plot(x,y)\nplt.show()\n\n\n\n\nlinspace(linspace(start,stop,num=50))能够批量生产指定区间内的数量为num的均匀间隔的数组向量。\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nnbsample = 128\n\nx = np.linspace(-np.pi,np.pi,nbsample)\ny1 = np.sin(x)\ny2 = np.cos(x)\nplt.plot(x,y1,color='g',linewidth=4,linestyle='--')\nplt.plot(x,y2,markersize=9,markerfacecolor='r',markeredgecolor='k')\n\n\n\n\n\n\npyplot的高级功能\n\n添加图例和注释\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nnbsample = 128\n\nx = np.linspace(-np.pi,np.pi,nbsample)\ny1 = np.sin(x)\ny2 = np.cos(x)\nplt.plot(x,y1,color='g',linewidth=4,linestyle='--')\nplt.plot(x,y2,markersize=9,markerfacecolor='r',markeredgecolor='k')\nplt.legend(\"loc=best\")\nplt.show()\n\n\n\n\n\n\n设置图形标题及坐标轴\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nnbsample = 128\n\nx = np.linspace(-np.pi,np.pi,nbsample)\ny1 = np.sin(x)\ny2 = np.cos(x)\nplt.plot(x,y1,color='g',linewidth=4,linestyle='--')\nplt.plot(x,y2,markersize=9,markerfacecolor='r',markeredgecolor='k')\nplt.title(\"tangle function plot\")\nplt.xlabel(\"x\")\nplt.ylabel(\"y\")\nplt.show()\n\n\n\n\n\n\n添加网格线\n\ndata = np.arange(0,4,0.2)\nplt.plot(data,data,'r-.',data,data**2,'bs',data,data**3,'g^')\n\nplt.grid(b=True)\nplt.savefig('mult_lines-grid.png',dpi=600)\n\n/var/folders/sn/g01cvq2j72j6tbq2pmmm074h0000gq/T/ipykernel_23829/2338610709.py:4: MatplotlibDeprecationWarning: The 'b' parameter of grid() has been renamed 'visible' since Matplotlib 3.5; support for the old name will be dropped two minor releases later.\n  plt.grid(b=True)\n\n\n\n\n\n\n\n绘制多个子图\n实际上有时候需要多个子图，使用subplot()\n\n\n\n散点图\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nnbpoint=50\nnp.random.seed(100)\nx = np.random.standard_normal(nbpoint)\nx\n\narray([-1.74976547,  0.3426804 ,  1.1530358 , -0.25243604,  0.98132079,\n        0.51421884,  0.22117967, -1.07004333, -0.18949583,  0.25500144,\n       -0.45802699,  0.43516349, -0.58359505,  0.81684707,  0.67272081,\n       -0.10441114, -0.53128038,  1.02973269, -0.43813562, -1.11831825,\n        1.61898166,  1.54160517, -0.25187914, -0.84243574,  0.18451869,\n        0.9370822 ,  0.73100034,  1.36155613, -0.32623806,  0.05567601,\n        0.22239961, -1.443217  , -0.75635231,  0.81645401,  0.75044476,\n       -0.45594693,  1.18962227, -1.69061683, -1.35639905, -1.23243451,\n       -0.54443916, -0.66817174,  0.00731456, -0.61293874,  1.29974807,\n       -1.73309562, -0.9833101 ,  0.35750775, -1.6135785 ,  1.47071387])\n\n\n\ny = np.random.standard_normal(nbpoint)\nnp.random.seed(1000)\ncolors = np.random.rand(nbpoint)\narea = (30*np.random.rand(nbpoint))**2\nplt.scatter(x,y,s=area,c=colors,alpha=0.3)\nplt.show()\n\n\n\n\n其中参数alpha表示透明度，s就是plot()中的markersize参数。\n\n\n条形图和直方图\n\n并列条形图\n\n\n叠加条形图\n\n\n直方图\n\n\n\n饼图\n\n\n箱形图\n\n\n误差条\n\n\n绘制三维图形\n\n\n惊艳的Seaborn\nSeaborn基于Matplotlib的数据可视化库，在Matplotlib的基础上实现了一些好用的功能，在代码形式上会更加像R语言上的ggplot。"
  },
  {
    "objectID": "posts/python学习笔记0922.html#机器学习",
    "href": "posts/python学习笔记0922.html#机器学习",
    "title": "\nTable of Contents\n",
    "section": "机器学习",
    "text": "机器学习"
  },
  {
    "objectID": "posts/python基础0907.html",
    "href": "posts/python基础0907.html",
    "title": "\nTable of Contents\n",
    "section": "",
    "text": "Table of Contents"
  },
  {
    "objectID": "posts/python基础0907.html#jupyter-中的魔法函数",
    "href": "posts/python基础0907.html#jupyter-中的魔法函数",
    "title": "\nTable of Contents\n",
    "section": "jupyter 中的魔法函数",
    "text": "jupyter 中的魔法函数\n魔法函数：IPython中预先定义好的具备特定功能的函数被放入Jupyter中使用。\n魔法函数是Ipython中特有的函数，并非Python内置函数，在其他环境就不行了。\n\nimport numpy as np\nimport matplotlib.pyplot as plt\nnp.random.seed(1)\nx = np.random.rand(10)\ny = np.random.rand(10)\ncolors = np.random.rand(10)\n%matplotlib qt\nplt.scatter(x,y,c = colors,alpha=0.7)\n#plt.show()\n\n<matplotlib.collections.PathCollection at 0x7fd0a936b970>\n\n\n魔法函数一种是面向行的(line magic)，以一个百分号(%)开头，其作用范围就是这个魔法函数当前行，\n\n%lsmagic\n可用于查询jupyter中的各种魔法函数。\n\n%lsmagic\n\nAvailable line magics:\n%alias  %alias_magic  %autoawait  %autocall  %automagic  %autosave  %bookmark  %cat  %cd  %clear  %colors  %conda  %config  %connect_info  %cp  %debug  %dhist  %dirs  %doctest_mode  %ed  %edit  %env  %gui  %hist  %history  %killbgscripts  %ldir  %less  %lf  %lk  %ll  %load  %load_ext  %loadpy  %logoff  %logon  %logstart  %logstate  %logstop  %ls  %lsmagic  %lx  %macro  %magic  %man  %matplotlib  %mkdir  %more  %mv  %notebook  %page  %pastebin  %pdb  %pdef  %pdoc  %pfile  %pinfo  %pinfo2  %pip  %popd  %pprint  %precision  %prun  %psearch  %psource  %pushd  %pwd  %pycat  %pylab  %qtconsole  %quickref  %recall  %rehashx  %reload_ext  %rep  %rerun  %reset  %reset_selective  %rm  %rmdir  %run  %save  %sc  %set_env  %store  %sx  %system  %tb  %time  %timeit  %unalias  %unload_ext  %who  %who_ls  %whos  %xdel  %xmode\n\nAvailable cell magics:\n%%!  %%HTML  %%SVG  %%bash  %%capture  %%debug  %%file  %%html  %%javascript  %%js  %%latex  %%markdown  %%perl  %%prun  %%pypy  %%python  %%python2  %%python3  %%ruby  %%script  %%sh  %%svg  %%sx  %%system  %%time  %%timeit  %%writefile\n\nAutomagic is ON, % prefix IS NOT needed for line magics.\n\n\n\n\n%matplotlib inline 函数\ninline模式，就是告诉Ipython绘图直接显示在当前网页中，plt.show()可省略。但其out中会多出关于该output的adress\ninline之后有一个对标参数qt，使用这个，就可以使得代码构造的图形是独立窗口显示的。可实现拖拽等。\n\n\n% timeit 函数\n提供某行代码等执行计时服务，评估机器学习算法的性能有用\n\n%timeit area = (40*np.random.rand(20))**2\n\n4.16 µs ± 46.3 ns per loop (mean ± std. dev. of 7 runs, 100,000 loops each)\n\n\ntranslation：对于代码area = (40*np.random.rand(20))**2运行7轮，每轮运行100000个循环，均值6.6微秒\n改变循环次：添加参数\n\n%timeit -n100 area = (40*np.random.rand(20))**2\n\nThe slowest run took 4.02 times longer than the fastest. This could mean that an intermediate result is being cached.\n25 µs ± 14.7 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)\n\n\n\n\n%%writefile函数\nJupyter代码块中的代码一块一块的复制到IDE中，保存为Python源文件。 %%writefile就是做这个的。 通过该魔法函数的前面两个就是一个整个代码块作为作用域，\n\n! pwd\n\n/Users/a182501\n\n\nshell命令：命令行和计算机进行文本交互的命令方式，Jupyter中之遥加上一个!就可以执行shell命令\n\nfiles = !ls\nprint(files)\n\n['1.csv', '111.Rmd', '123.csv', '3.py', '6 linear reg.Rmd', 'Applications', 'CAPM_python_realization.ipynb', 'Calibre Library', 'DIR', 'Desktop', 'Desktop.pem', 'Documents', 'Downloads', 'E:\\\\工作簿1.csv', 'Figure_1.png', 'Julia入门.ipynb', 'LAB$.docx', 'LAB$.tex', 'LAB4.R', 'Library', 'Movies', 'Music', 'Nutstore Files', 'NutstoreCloudBridge', 'Pictures', 'PycharmProjects', 'RevMan tutorial', 'R语言进阶步骤.ipynb', 'Sites', 'U.tex', 'Untitled-1.py', 'Untitled-1.tex', 'Untitled-2.bcf', 'Untitled-2.log', 'Untitled-2.pdf', 'Untitled-2.tex', 'Untitled.R', 'Untitled.Rmd', 'Untitled.docx', 'Untitled.ipynb', 'Untitled.pdf', 'Untitled0702.tex', 'Untitled1.ipynb', 'Untitled2.Rmd', 'Untitled2.ipynb', 'Zotero', 'a182501.Rproj', 'abc.yml', 'abc2.yml', 'airbnb_python_kaggle.ipynb', 'bernoulli+bayes+likehood.R', 'bin', 'blog', 'cancer.csv', 'cd', 'ciation.json', 'citespace', 'citespace.projects.txt', 'class.csv', 'cm2_mod.R', 'cm_mod.R', 'colors-bar.pdf', 'consumption1.pdf', 'consumption1.tex', 'cv.docx', 'd:pythonpython37libsite-packages', 'data', 'data1964al.xy', 'data\\\\导出5.csv', 'datas', 'diabetes.csv', 'die_mod.R', 'dismap_mod.R', 'file=..', 'ews.csv', 'geos_mod.R', 'git', 'hello_bundle.zip', 'hello_mod.R', 'house_inf.csv', 'iCloud云盘（归档）', 'import requests.py', 'jianqi.doc', 'jianqi.txt', 'jianqinb.tex', 'julia-1.7.2-linux-i686.tar.gz', 'julia-1.7.2-linux-x86_64.tar.gz', 'julia-1.7.2-mac64.tar.gz', 'lab3.Rmd', 'lab3.md', 'lab3_files', 'lab4.Rmd', 'lab40615.R', 'lab4_0615.Rmd', 'lat_mod.R', 'lianjia_ershou_futian_100.xlsx', 'lianjia_ershou_futian_3.csv', 'list1.txt', 'machine learning.ipynb', 'mydemo.Rmd', 'netural net training.ipynb', 'news.csv', 'opt', 'pfl-data.txt', 'pfl-init2.txt', 'pfl-model.txt', 'plot_grid.R', 'print(\"hhh\").py', 'print(\"hhhelll\").py', 'print(\"ssss\").py', 'project', 'pythonProject', 'python_map_folium.ipynb', 'python学习笔记.ipynb', 'rent.csv', 'rstan.R', 's.yml', 'seaborn-data', 'sensors', 'sppa_mod.R', 'std_mod.R', 'stock_price.csv', 'test.pod', 'test.txt', 'tk.csv', 'tmdb250.ipynb', 'untitled1', 'vecstore.txt', 'vis_mod.R', 'wget-log', '学习.ipynb', '其他.pod', '随意.py', '导出5.csv', '数据集', '未命名-1.tex', '未命名.ipynb', '文件名.png', '工作簿1.csv', '装修项目.pod', '斐波那契.py', '聚类分析图.R', '相关性分析.doc', '劳动生产率.md', '社会网络分析.ipynb', '抓取新浪财经新闻.R']"
  },
  {
    "objectID": "posts/python基础0907.html#数据类型",
    "href": "posts/python基础0907.html#数据类型",
    "title": "\nTable of Contents\n",
    "section": "数据类型",
    "text": "数据类型\n算法(algorithm)+数据结构(data structure)=程序(program)\n对于字符串，可以使用很多有用的方法(method)，通过dir命令来查看相关的方法\n\ndir(str)  #查看字符串对象的方法\n\n['__add__',\n '__class__',\n '__contains__',\n '__delattr__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__getitem__',\n '__getnewargs__',\n '__gt__',\n '__hash__',\n '__init__',\n '__init_subclass__',\n '__iter__',\n '__le__',\n '__len__',\n '__lt__',\n '__mod__',\n '__mul__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__rmod__',\n '__rmul__',\n '__setattr__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n 'capitalize',\n 'casefold',\n 'center',\n 'count',\n 'encode',\n 'endswith',\n 'expandtabs',\n 'find',\n 'format',\n 'format_map',\n 'index',\n 'isalnum',\n 'isalpha',\n 'isascii',\n 'isdecimal',\n 'isdigit',\n 'isidentifier',\n 'islower',\n 'isnumeric',\n 'isprintable',\n 'isspace',\n 'istitle',\n 'isupper',\n 'join',\n 'ljust',\n 'lower',\n 'lstrip',\n 'maketrans',\n 'partition',\n 'removeprefix',\n 'removesuffix',\n 'replace',\n 'rfind',\n 'rindex',\n 'rjust',\n 'rpartition',\n 'rsplit',\n 'rstrip',\n 'split',\n 'splitlines',\n 'startswith',\n 'strip',\n 'swapcase',\n 'title',\n 'translate',\n 'upper',\n 'zfill']\n\n\n\nhelp(str.split)\n\nHelp on method_descriptor:\n\nsplit(self, /, sep=None, maxsplit=-1)\n    Return a list of the words in the string, using sep as the delimiter string.\n    \n    sep\n      The delimiter according which to split the string.\n      None (the default value) means split according to any whitespace,\n      and discard empty strings from the result.\n    maxsplit\n      Maximum number of splits to do.\n      -1 (the default value) means no limit.\n\n\n\n\n方法\n\n\nstr_1 = \"I love CUFE\"\nstr_1.split(\" \")  #.split() the '.' to pipe the parameter to split()\n#return the list\nsep_1=str_1.split(\" \")\nprint(sep_1)\n\n['I', 'love', 'CUFE']\n\n\n\nsep_1.add(\"s\")\n\nAttributeError: 'list' object has no attribute 'add'\n\n\n\nprint(sep_1[2])\n\nCUFE\n\n\n\ntitle\n\nstr_2= \"hello world hello python\"\nstr_2.title()\n\n'Hello World Hello Python'\n\n\n\n\nformat()\n这个通过字符串中的花括号和冒号，代替早期C语言中的格式化输出界定符号%，format()不限参数个数，显示位置可以不同于出现的顺序\n\n\"{1} {0}\".format(\"hello\",\"python\")  #中间的空格也会被输出\n\n'python hello'\n\n\n\n\nlist\n相当于C中的数组，创建不复杂。\n\nlist1 = []\n\n\ntype(list1)\n\nlist\n\n\npython列表中各个数据项的类型不需要都是相同的。\n\nlist1 = ['math',\"中文\",99,20]\n\n\nlist1\n\n['math', '中文', 99, 20]\n\n\n列表内部是可变的（mutable）\n\nlist1=[1,2,3,4,6,8,9,11]\n\n\nlist1[:4]\n\n[1, 2, 3, 4]\n\n\n\nlist1[0:9:2]\n\n[1, 3, 6, 9]\n\n\n\nlist1[::-1]\n\n[11, 9, 8, 6, 4, 3, 2, 1]\n\n\n\n添加列表元素\n\nappend()在列表末尾添加一个新元素。\ninsert()在列表的指定索引位置插入一个元素。\nextend()把一个列表整体扩展添加到另外一个列表尾部\n\n都是属于原地操作(in place)，被操作对象的列表的内存地址原封不动，不会因为函数的作用而发生改变\n\n\n删除列表元素\n\npop()\nremove()\nclear()\n\n\n\n全局内置函数\n除了列表这个数据类型本身自带的函数，Python的内置函数也可以对列表进行操作。也就是说不是list独有的。\n\ndir(list)\n\n['__add__',\n '__class__',\n '__class_getitem__',\n '__contains__',\n '__delattr__',\n '__delitem__',\n '__dir__',\n '__doc__',\n '__eq__',\n '__format__',\n '__ge__',\n '__getattribute__',\n '__getitem__',\n '__gt__',\n '__hash__',\n '__iadd__',\n '__imul__',\n '__init__',\n '__init_subclass__',\n '__iter__',\n '__le__',\n '__len__',\n '__lt__',\n '__mul__',\n '__ne__',\n '__new__',\n '__reduce__',\n '__reduce_ex__',\n '__repr__',\n '__reversed__',\n '__rmul__',\n '__setattr__',\n '__setitem__',\n '__sizeof__',\n '__str__',\n '__subclasshook__',\n 'append',\n 'clear',\n 'copy',\n 'count',\n 'extend',\n 'index',\n 'insert',\n 'pop',\n 'remove',\n 'reverse',\n 'sort']\n\n\n\nfruits=['organge','apple','banana','pear']\nsorted(fruits)\n\n['apple', 'banana', 'organge', 'pear']\n\n\n\nprint(fruits)\n\n['organge', 'apple', 'banana', 'pear']\n\n\n用了sort内置函就会改变原有数据，直接在原有数据上操作。\n\nfruits.sort()\nprint(fruits)\n\n['apple', 'banana', 'organge', 'pear']\n\n\n\nfruits.append(\"建祺\")\n\n\nmax(fruits)\n\n'建祺'\n\n\n\ncmp(list1,list2)比较两个列表的元素\nlist(seq)将元组转化为列表\nzip(list1,list2)将多个列表元素组合成一个个的元组\n\n\n\n\n元组\n不同于列表的标识，元组使用一对圆括号将元素囊括其中。\n\ntup1 = ()\ntype(tup1)\n\ntuple\n\n\n\ntup1 = (100,)#只有一个元素在后面加一个逗号\n\n\n\n高效的推导式子\n又称为解析式，python中非常简洁地按照某种规则，以一个数据序列为基础，推导出另一个新的数据序列。\n[生成表达式 for 变量 in 序列或迭代对象]\n最外层的括号表示这个结果是一个列表。方括号内的描述的列表推导式相当于一个循环，只不过形式上更加简洁。\n\nalist = [x**2 for x in range(4)]\nprint(alist)\n\n[0, 1, 4, 9]\n\n\nfilter that dont meet the requirement\n\na_list = [1,'4','9','a',0,6,'hello']\nsquared_ints = [e**2 for e in a_list if type(e)==int]\nprint(squared_ints)\n\n[1, 0, 36]\n\n\n\n方法与函数\n\ntype(print)\n\nbuiltin_function_or_method\n\n\n\ntype(max)\n\nbuiltin_function_or_method\n\n\n\n\n使用列表推导实现嵌套列表的平铺\n将所有的列表中的列表展开：\n\nvec = [[1,2,3],[3,4,5],[5,6,7]]\nflat_vec = [num for elem in vec for num in elem]\n\n\nprint(flat_vec)\n\n[1, 2, 3, 3, 4, 5, 5, 6, 7]\n\n\n\n\n多条件组合构造特定列表\n列表推导包含一对括号，在括号内有一个输出表达式，表达式之后跟着一条for语句，之后就能构造出多种的列表推导。\n\nnew_list = [(x,y) for x in [1,2,3] for y in [3,1,4] if x != y]\nprint(new_list)\n\n[(1, 3), (1, 4), (2, 3), (2, 1), (2, 4), (3, 1), (3, 4)]\n\n\n\n\n字典推导式\n\nmcase ={'a':10,'b':30,'c':50}\nkv_exchange ={v:k for k,v in mcase.items()}\n\n\nprint(kv_exchange)\n\n{10: 'a', 30: 'b', 50: 'c'}\n\n\n\n\n集合推导式\n核心是一对花括号，字典内的元素需以“键/值对”形式出现"
  },
  {
    "objectID": "posts/python基础0907.html#函数",
    "href": "posts/python基础0907.html#函数",
    "title": "\nTable of Contents\n",
    "section": "函数",
    "text": "函数\n\n函数文档的构建\n大规模协助是常态，代码是程序员的思维方式的一种物化形式。\n\n\n函数的传递\n\n关键字参数\n\n\n可变参数\n函数调用时候，参数的个数不固定，比如在C中，可变参数较为普遍。\n\ndef mySum(*args):\n    sum = 0\n    for i in range(0,len(args)):\n        sum = sum + args[i]\n    return sum\nprint(mySum(1,2,3,4,5))\n#python is not strict with parameters' forms\nprint(mySum(20.1,23.5))\n\n15\n43.6"
  },
  {
    "objectID": "posts/AUC-jl.html",
    "href": "posts/AUC-jl.html",
    "title": "Blog",
    "section": "",
    "text": "如何使用Julia画AUC曲线\nAUC(area under the curve)是一个用于模型评估的工具，也就是ROC曲线下的面积大小。\n安装方法：\n] add https://github.com/diegozea/ROC.jl\n\nusing AUC\n\nLoadError: ArgumentError: Package AUC not found in current path.\n- Run `import Pkg; Pkg.add(\"AUC\")` to install the AUC package.\n\n\n\nfunction noisy(label; λ=0.0)\n           if label\n               return 1 - λ*rand()\n           else\n               return λ*rand()\n           end\n       end\n\nnoisy (generic function with 1 method)\n\n\n\nlabels = rand(Bool, 200);\n\n\nscores(λ) = map(labels) do label\n           noisy(label, λ=λ)\n       end\n\nscores (generic function with 1 method)\n\n\n\nroc_good = roc(scores(0.6), labels, true);\nroc_bad = roc(scores(1.0), labels, true);\n\nLoadError: UndefVarError: roc not defined"
  },
  {
    "objectID": "posts/data-mining-bining.html",
    "href": "posts/data-mining-bining.html",
    "title": "\nTable of Contents\n",
    "section": "",
    "text": "Table of Contents"
  },
  {
    "objectID": "posts/data-mining-bining.html#data-mining-binning",
    "href": "posts/data-mining-bining.html#data-mining-binning",
    "title": "\nTable of Contents\n",
    "section": "data-mining binning",
    "text": "data-mining binning\n\nfr = open('onlineresponse.txt', 'rb') #可以先用字节模式获取数据\ndata = fr.readline()\ndata = data.decode('gbk')   #因为gbk兼容iso和utf，先按gbk解码\ndata = data.encode('utf-8')   #需要的话可以再用utf格式编码\n\n\nimport numpy as np\nimport math\nfrom sklearn.datasets import load_iris\nfrom sklearn import datasets, linear_model, metrics\n\n\nimport numpy as np\nimport pandas as pd\ndatasets = np.array([13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25,\n        25, 30, 33, 33, 35, 35, 35, 35, 36, 40, 45, 46, 52, 70])\n\n\na = datasets\nb = np.zeros(len(a))\n\n\na[1]\n\n15\n\n\n\nfor i in range(len(a)):\n    b[i]=a[i]\n\n\nprint(b)\n\n[13. 15. 16. 16. 19. 20. 20. 21. 22. 22. 25. 25. 25. 25. 30. 33. 33. 35.\n 35. 35. 35. 36. 40. 45. 46. 52. 70.]\n\n\n\nb = np.sort(b)\n\n\nb\n\narray([13., 15., 16., 16., 19., 20., 20., 21., 22., 22., 25., 25., 25.,\n       25., 30., 33., 33., 35., 35., 35., 35., 36., 40., 45., 46., 52.,\n       70.])\n\n\n\nlens = len(a)\n\n\nlens\n\n27\n\n\n\nlens/3\n\n9.0\n\n\n\nbin1 = np.zeros((9,3))\nbin2 = np.zeros((9, 3))\nbin3 = np.zeros((9, 3))\n\n\nfor i in range (0,len(a),3):\n    k=int(i/3)\n    mean=(b[i] + b[i+1] + b[i+2])/3\n    for j in range(3):\n        bin1[k,j]=mean\nprint(\"Bin Mean: \\n\",bin1)\n\nBin Mean: \n [[14.66666667 14.66666667 14.66666667]\n [18.33333333 18.33333333 18.33333333]\n [21.         21.         21.        ]\n [24.         24.         24.        ]\n [26.66666667 26.66666667 26.66666667]\n [33.66666667 33.66666667 33.66666667]\n [35.         35.         35.        ]\n [40.33333333 40.33333333 40.33333333]\n [56.         56.         56.        ]]\n\n\n\nimport matplotlib.pyplot as plt\nimport statsmodels.api as sm\n\n\ny = np.array(range(1,28,1))\n\n\nz1 = np.polyfit(b,y,3)\nprint(z1)\n\n[-1.70252488e-05 -9.51573032e-03  1.36135068e+00 -1.59664180e+01]\n\n\n\np1 = np.poly1d(z1)  # 返回值为多项式的表达式，也就是函数式子\n\n\nprint(p1)\ny_pred = p1(b)\n\n            3            2\n-1.703e-05 x - 0.009516 x + 1.361 x - 15.97\n\n\n\nplt.plot(b,y)\n\n\n\n\n\nplot1 = plt.plot(b, y, '*', label='original values')\nplot2 = plt.plot(b, y_pred, 'r', label='fit values')\n\n\n\n\n本篇所应用的一些python的绘图方法 https://zhuanlan.zhihu.com/p/122702657\n\nimport pandas as pd\nimport numpy as np\nimport seaborn as sbn\n\n\nsbn.boxplot(b)\n\n/Users/a182501/opt/anaconda3/lib/python3.8/site-packages/seaborn/_decorators.py:36: FutureWarning: Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n  warnings.warn(\n\n\n<AxesSubplot:>\n\n\n\n\n\n\ndatasets\n\narray([13, 15, 16, 16, 19, 20, 20, 21, 22, 22, 25, 25, 25, 25, 30, 33, 33,\n       35, 35, 35, 35, 36, 40, 45, 46, 52, 70])"
  },
  {
    "objectID": "posts/termplot.html",
    "href": "posts/termplot.html",
    "title": "termplot",
    "section": "",
    "text": "import termplotlib as tpl\nimport numpy as np\n\nx = np.linspace(0, 2 * np.pi, 10)\ny = np.sin(x)\n\n\nimport termplotlib as tpl\nimport numpy as np\n\nrng = np.random.default_rng(123)\nsample = rng.standard_normal(size=1000)\ncounts, bin_edges = np.histogram(sample)\n\nfig = tpl.figure()\nfig.hist(counts, bin_edges, orientation=\"horizontal\", force_ascii=False)\nfig.show()\n\n-3.30e+00 - -2.66e+00  [  8]  █▎\n-2.66e+00 - -2.03e+00  [ 22]  ███▌\n-2.03e+00 - -1.39e+00  [ 50]  ████████\n-1.39e+00 - -7.56e-01  [123]  ███████████████████▋\n-7.56e-01 - -1.20e-01  [236]  █████████████████████████████████████▊\n-1.20e-01 - +5.16e-01  [250]  ████████████████████████████████████████\n+5.16e-01 - +1.15e+00  [172]  ███████████████████████████▌\n+1.15e+00 - +1.79e+00  [111]  █████████████████▊\n+1.79e+00 - +2.42e+00  [ 22]  ███▌\n+2.42e+00 - +3.06e+00  [  6]  █\n\n\n\nimport termplotlib as tpl\n\nfig = tpl.figure()\nfig.barh([3, 10, 5, 2], [\"Cats\", \"Dogs\", \"Cows\", \"Geese\"], force_ascii=True)\nfig.show()\n\nCats   [ 3]  ************\nDogs   [10]  ****************************************\nCows   [ 5]  ********************\nGeese  [ 2]  ********\n\n\n\nimport termplotlib as tpl\nimport numpy as np\n\nrng = np.random.default_rng(123)\nsample = rng.standard_normal(size=1000)\ncounts, bin_edges = np.histogram(sample, bins=40)\nfig = tpl.figure()\nfig.hist(counts, bin_edges, grid=[15, 25], force_ascii=False)\nfig.show()\n\n                  ▇  █\n                ▁ █ ▁█ ▄\n                █ █▂██▁█\n                █▅██████ ▄▄\n               ▃████████▃██ ▆\n               █████████▉██▇█\n            ▅▅▇█████████▉████▁▅\n           ▂██▉█████████▉██████▃\n      ▃▁ ▅▇███▉█████████▉███████\n▂ ▂▄ ▄████████▉█████████▉████████▆▄▅▃▂ ▁"
  },
  {
    "objectID": "posts/DR2.html",
    "href": "posts/DR2.html",
    "title": "Data Science",
    "section": "",
    "text": "可视化和数据转换的方法实现探索数据，统计学家称为是一个探索性数据分析(exploratory data analysis,EDA) 同时这是一个循环可迭代的问题： - 对数据提出问题 - 对数据进行可视化 - 使用上一个步骤的结果来精炼问题，并提出新问题。\n\n\n\nlibrary(\"nycflights13\")\nlibrary(\"tidyverse\")\n\nEDA本质是一个创造的过程，问题的质量在于问题的数量。定义几个变量： - 变量 - 值 - 观测 - 表格数据\n\nggplot(data= diamonds)+\n    geom_bar(mapping=aes(x=cut))\n\n\n\n\n\ndiamonds%>%count(cut)\n\n\nA tibble: 5 × 2\n\n\ncut\nn\n\n\n<ord>\n<int>\n\n\n\n\nFair\n1610\n\n\nGood\n4906\n\n\nVery Good\n12082\n\n\nPremium\n13791\n\n\nIdeal\n21551\n\n\n\n\n\n通过dplyr::count()手动计算结果。\n使用binwidth参数设定直方图中的间隔的宽度，参数是用x轴变量的单位来衡量的。使用直方图时候，试验不同的宽度对于其的影响。\n\ndplyr::filter(flights,month==1,day==1)\n\n\nA tibble: 842 × 19\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\norigin\ndest\nair_time\ndistance\nhour\nminute\ntime_hour\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n\n\n\n\n2013\n1\n1\n517\n515\n2\n830\n819\n11\nUA\n1545\nN14228\nEWR\nIAH\n227\n1400\n5\n15\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n533\n529\n4\n850\n830\n20\nUA\n1714\nN24211\nLGA\nIAH\n227\n1416\n5\n29\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n542\n540\n2\n923\n850\n33\nAA\n1141\nN619AA\nJFK\nMIA\n160\n1089\n5\n40\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n544\n545\n-1\n1004\n1022\n-18\nB6\n725\nN804JB\nJFK\nBQN\n183\n1576\n5\n45\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n554\n600\n-6\n812\n837\n-25\nDL\n461\nN668DN\nLGA\nATL\n116\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n554\n558\n-4\n740\n728\n12\nUA\n1696\nN39463\nEWR\nORD\n150\n719\n5\n58\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n555\n600\n-5\n913\n854\n19\nB6\n507\nN516JB\nEWR\nFLL\n158\n1065\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n709\n723\n-14\nEV\n5708\nN829AS\nLGA\nIAD\n53\n229\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n838\n846\n-8\nB6\n79\nN593JB\nJFK\nMCO\n140\n944\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n753\n745\n8\nAA\n301\nN3ALAA\nLGA\nORD\n138\n733\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n849\n851\n-2\nB6\n49\nN793JB\nJFK\nPBI\n149\n1028\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n853\n856\n-3\nB6\n71\nN657JB\nJFK\nTPA\n158\n1005\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n924\n917\n7\nUA\n194\nN29129\nJFK\nLAX\n345\n2475\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n923\n937\n-14\nUA\n1124\nN53441\nEWR\nSFO\n361\n2565\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n941\n910\n31\nAA\n707\nN3DUAA\nLGA\nDFW\n257\n1389\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n559\n0\n702\n706\n-4\nB6\n1806\nN708JB\nJFK\nBOS\n44\n187\n5\n59\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n854\n902\n-8\nUA\n1187\nN76515\nEWR\nLAS\n337\n2227\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n851\n858\n-7\nB6\n371\nN595JB\nLGA\nFLL\n152\n1076\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n837\n825\n12\nMQ\n4650\nN542MQ\nLGA\nATL\n134\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n601\n600\n1\n844\n850\n-6\nB6\n343\nN644JB\nEWR\nPBI\n147\n1023\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n610\n-8\n812\n820\n-8\nDL\n1919\nN971DL\nLGA\nMSP\n170\n1020\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n605\n-3\n821\n805\n16\nMQ\n4401\nN730MQ\nLGA\nDTW\n105\n502\n6\n5\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n858\n910\n-12\nAA\n1895\nN633AA\nEWR\nMIA\n152\n1085\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n837\n845\n-8\nDL\n1743\nN3739P\nJFK\nATL\n128\n760\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n607\n607\n0\n858\n915\n-17\nUA\n1077\nN53442\nEWR\nMIA\n157\n1085\n6\n7\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n608\n600\n8\n807\n735\n32\nMQ\n3768\nN9EAMQ\nEWR\nORD\n139\n719\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n611\n600\n11\n945\n931\n14\nUA\n303\nN532UA\nJFK\nSFO\n366\n2586\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n613\n610\n3\n925\n921\n4\nB6\n135\nN635JB\nJFK\nRSW\n175\n1074\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n1039\n1100\n-21\nB6\n709\nN794JB\nJFK\nSJU\n182\n1598\n6\n15\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n833\n842\n-9\nDL\n575\nN326NB\nEWR\nATL\n120\n746\n6\n15\n2013-01-01 06:00:00\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n1\n1\n2140\n2135\n5\n210\n224\n-14\nB6\n701\nN284JB\nJFK\nSJU\n189\n1598\n21\n35\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2157\n2155\n2\n43\n41\n2\nB6\n43\nN537JB\nJFK\nMCO\n140\n944\n21\n55\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2158\n2200\n-2\n2254\n2307\n-13\nEV\n4103\nN14998\nEWR\nBWI\n36\n169\n22\n0\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2205\n1720\n285\n46\n2040\n246\nAA\n1999\nN5DNAA\nEWR\nMIA\n146\n1085\n17\n20\n2013-01-01 17:00:00\n\n\n2013\n1\n1\n2209\n2145\n24\n58\n37\n21\nB6\n35\nN608JB\nJFK\nPBI\n143\n1028\n21\n45\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2209\n2155\n14\n2400\n2337\n23\nB6\n1109\nN216JB\nJFK\nRDU\n86\n427\n21\n55\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2211\n2145\n26\n2339\n2311\n28\nB6\n104\nN228JB\nJFK\nBUF\n64\n301\n21\n45\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2217\n2229\n-12\n249\n315\n-26\nB6\n713\nN547JB\nJFK\nSJU\n191\n1598\n22\n29\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2217\n2130\n47\n140\n27\n73\nB6\n21\nN516JB\nJFK\nTPA\n163\n1005\n21\n30\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2221\n2000\n141\n2331\n2124\n127\nEV\n4462\nN13566\nEWR\nBUF\n56\n282\n20\n0\n2013-01-01 20:00:00\n\n\n2013\n1\n1\n2224\n2200\n24\n2324\n2316\n8\nEV\n4206\nN16561\nEWR\nPWM\n47\n284\n22\n0\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2229\n2159\n30\n149\n100\n49\nB6\n11\nN531JB\nJFK\nFLL\n153\n1069\n21\n59\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2240\n2245\n-5\n2340\n2356\n-16\nB6\n608\nN279JB\nJFK\nPWM\n44\n273\n22\n45\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2250\n2255\n-5\n2352\n2359\n-7\nB6\n1018\nN521JB\nJFK\nBOS\n37\n187\n22\n55\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2302\n2200\n62\n2342\n2253\n49\nEV\n4276\nN13903\nEWR\nBDL\n24\n116\n22\n0\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2306\n2245\n21\n28\n5\n23\nB6\n30\nN281JB\nJFK\nROC\n59\n264\n22\n45\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2307\n2245\n22\n32\n2357\n35\nB6\n128\nN178JB\nJFK\nBTV\n59\n266\n22\n45\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2310\n2255\n15\n24\n15\n9\nB6\n112\nN646JB\nJFK\nBUF\n57\n301\n22\n55\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2312\n2000\n192\n21\n2110\n191\nEV\n4312\nN13958\nEWR\nDCA\n44\n199\n20\n0\n2013-01-01 20:00:00\n\n\n2013\n1\n1\n2323\n2200\n83\n22\n2313\n69\nEV\n4257\nN13538\nEWR\nBTV\n44\n266\n22\n0\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2326\n2130\n116\n131\n18\n73\nB6\n199\nN594JB\nJFK\nLAS\n290\n2248\n21\n30\n2013-01-01 21:00:00\n\n\n2013\n1\n1\n2327\n2250\n37\n32\n2359\n33\nB6\n22\nN639JB\nJFK\nSYR\n45\n209\n22\n50\n2013-01-01 22:00:00\n\n\n2013\n1\n1\n2343\n1724\n379\n314\n1938\n456\nEV\n4321\nN21197\nEWR\nMCI\n222\n1092\n17\n24\n2013-01-01 17:00:00\n\n\n2013\n1\n1\n2353\n2359\n-6\n425\n445\n-20\nB6\n739\nN591JB\nJFK\nPSE\n195\n1617\n23\n59\n2013-01-01 23:00:00\n\n\n2013\n1\n1\n2353\n2359\n-6\n418\n442\n-24\nB6\n707\nN794JB\nJFK\nSJU\n185\n1598\n23\n59\n2013-01-01 23:00:00\n\n\n2013\n1\n1\n2356\n2359\n-3\n425\n437\n-12\nB6\n727\nN588JB\nJFK\nBQN\n186\n1576\n23\n59\n2013-01-01 23:00:00\n\n\n2013\n1\n1\nNA\n1630\nNA\nNA\n1815\nNA\nEV\n4308\nN18120\nEWR\nRDU\nNA\n416\n16\n30\n2013-01-01 16:00:00\n\n\n2013\n1\n1\nNA\n1935\nNA\nNA\n2240\nNA\nAA\n791\nN3EHAA\nLGA\nDFW\nNA\n1389\n19\n35\n2013-01-01 19:00:00\n\n\n2013\n1\n1\nNA\n1500\nNA\nNA\n1825\nNA\nAA\n1925\nN3EVAA\nLGA\nMIA\nNA\n1096\n15\n0\n2013-01-01 15:00:00\n\n\n2013\n1\n1\nNA\n600\nNA\nNA\n901\nNA\nB6\n125\nN618JB\nJFK\nFLL\nNA\n1069\n6\n0\n2013-01-01 06:00:00\n\n\n\n\n\n\nsmaller <- diamonds%>%dplyr::filter(carat<3)\n\n\narrange(flights,year,month,day)\n\n\nA tibble: 336776 × 19\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\norigin\ndest\nair_time\ndistance\nhour\nminute\ntime_hour\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n\n\n\n\n2013\n1\n1\n517\n515\n2\n830\n819\n11\nUA\n1545\nN14228\nEWR\nIAH\n227\n1400\n5\n15\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n533\n529\n4\n850\n830\n20\nUA\n1714\nN24211\nLGA\nIAH\n227\n1416\n5\n29\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n542\n540\n2\n923\n850\n33\nAA\n1141\nN619AA\nJFK\nMIA\n160\n1089\n5\n40\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n544\n545\n-1\n1004\n1022\n-18\nB6\n725\nN804JB\nJFK\nBQN\n183\n1576\n5\n45\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n554\n600\n-6\n812\n837\n-25\nDL\n461\nN668DN\nLGA\nATL\n116\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n554\n558\n-4\n740\n728\n12\nUA\n1696\nN39463\nEWR\nORD\n150\n719\n5\n58\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n555\n600\n-5\n913\n854\n19\nB6\n507\nN516JB\nEWR\nFLL\n158\n1065\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n709\n723\n-14\nEV\n5708\nN829AS\nLGA\nIAD\n53\n229\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n838\n846\n-8\nB6\n79\nN593JB\nJFK\nMCO\n140\n944\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n753\n745\n8\nAA\n301\nN3ALAA\nLGA\nORD\n138\n733\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n849\n851\n-2\nB6\n49\nN793JB\nJFK\nPBI\n149\n1028\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n853\n856\n-3\nB6\n71\nN657JB\nJFK\nTPA\n158\n1005\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n924\n917\n7\nUA\n194\nN29129\nJFK\nLAX\n345\n2475\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n923\n937\n-14\nUA\n1124\nN53441\nEWR\nSFO\n361\n2565\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n941\n910\n31\nAA\n707\nN3DUAA\nLGA\nDFW\n257\n1389\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n559\n0\n702\n706\n-4\nB6\n1806\nN708JB\nJFK\nBOS\n44\n187\n5\n59\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n854\n902\n-8\nUA\n1187\nN76515\nEWR\nLAS\n337\n2227\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n851\n858\n-7\nB6\n371\nN595JB\nLGA\nFLL\n152\n1076\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n837\n825\n12\nMQ\n4650\nN542MQ\nLGA\nATL\n134\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n601\n600\n1\n844\n850\n-6\nB6\n343\nN644JB\nEWR\nPBI\n147\n1023\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n610\n-8\n812\n820\n-8\nDL\n1919\nN971DL\nLGA\nMSP\n170\n1020\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n605\n-3\n821\n805\n16\nMQ\n4401\nN730MQ\nLGA\nDTW\n105\n502\n6\n5\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n858\n910\n-12\nAA\n1895\nN633AA\nEWR\nMIA\n152\n1085\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n837\n845\n-8\nDL\n1743\nN3739P\nJFK\nATL\n128\n760\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n607\n607\n0\n858\n915\n-17\nUA\n1077\nN53442\nEWR\nMIA\n157\n1085\n6\n7\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n608\n600\n8\n807\n735\n32\nMQ\n3768\nN9EAMQ\nEWR\nORD\n139\n719\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n611\n600\n11\n945\n931\n14\nUA\n303\nN532UA\nJFK\nSFO\n366\n2586\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n613\n610\n3\n925\n921\n4\nB6\n135\nN635JB\nJFK\nRSW\n175\n1074\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n1039\n1100\n-21\nB6\n709\nN794JB\nJFK\nSJU\n182\n1598\n6\n15\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n833\n842\n-9\nDL\n575\nN326NB\nEWR\nATL\n120\n746\n6\n15\n2013-01-01 06:00:00\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n12\n31\n2155\n2039\n76\n253\n2355\nNA\nB6\n1205\nN627JB\nJFK\nPDX\nNA\n2454\n20\n39\n2013-12-31 20:00:00\n\n\n2013\n12\n31\n2155\n2150\n5\n110\n51\n19\nB6\n1901\nN729JB\nJFK\nFLL\n164\n1069\n21\n50\n2013-12-31 21:00:00\n\n\n2013\n12\n31\n2159\n2155\n4\n55\n46\n9\nB6\n2053\nN593JB\nJFK\nPBI\n155\n1028\n21\n55\n2013-12-31 21:00:00\n\n\n2013\n12\n31\n2206\n2110\n56\n44\n2339\n65\nB6\n775\nN184JB\nJFK\nMSY\n195\n1182\n21\n10\n2013-12-31 21:00:00\n\n\n2013\n12\n31\n2211\n2159\n12\n100\n45\n15\nB6\n1183\nN715JB\nJFK\nMCO\n148\n944\n21\n59\n2013-12-31 21:00:00\n\n\n2013\n12\n31\n2218\n2219\n-1\n315\n304\n11\nB6\n1203\nN625JB\nJFK\nSJU\n202\n1598\n22\n19\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2235\n2245\n-10\n2351\n2355\n-4\nB6\n234\nN355JB\nJFK\nBTV\n49\n266\n22\n45\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2245\n2250\n-5\n2359\n2356\n3\nB6\n1816\nN318JB\nJFK\nSYR\n51\n209\n22\n50\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2310\n2255\n15\n7\n2356\n11\nB6\n718\nN279JB\nJFK\nBOS\n40\n187\n22\n55\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2321\n2250\n31\n46\n8\n38\nB6\n2002\nN179JB\nJFK\nBUF\n66\n301\n22\n50\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2328\n2330\n-2\n412\n409\n3\nB6\n1389\nN651JB\nEWR\nSJU\n198\n1608\n23\n30\n2013-12-31 23:00:00\n\n\n2013\n12\n31\n2332\n2245\n47\n58\n3\n55\nB6\n486\nN334JB\nJFK\nROC\n60\n264\n22\n45\n2013-12-31 22:00:00\n\n\n2013\n12\n31\n2355\n2359\n-4\n430\n440\n-10\nB6\n1503\nN509JB\nJFK\nSJU\n195\n1598\n23\n59\n2013-12-31 23:00:00\n\n\n2013\n12\n31\n2356\n2359\n-3\n436\n445\n-9\nB6\n745\nN665JB\nJFK\nPSE\n200\n1617\n23\n59\n2013-12-31 23:00:00\n\n\n2013\n12\n31\nNA\n1520\nNA\nNA\n1705\nNA\nAA\n341\nN568AA\nLGA\nORD\nNA\n733\n15\n20\n2013-12-31 15:00:00\n\n\n2013\n12\n31\nNA\n2025\nNA\nNA\n2205\nNA\nAA\n371\nN482AA\nLGA\nORD\nNA\n733\n20\n25\n2013-12-31 20:00:00\n\n\n2013\n12\n31\nNA\n1932\nNA\nNA\n2305\nNA\nB6\n161\nN516JB\nJFK\nSMF\nNA\n2521\n19\n32\n2013-12-31 19:00:00\n\n\n2013\n12\n31\nNA\n1505\nNA\nNA\n1725\nNA\nEV\n4181\nN24103\nEWR\nMCI\nNA\n1092\n15\n5\n2013-12-31 15:00:00\n\n\n2013\n12\n31\nNA\n1000\nNA\nNA\n1252\nNA\nUA\n1124\nNA\nEWR\nEGE\nNA\n1725\n10\n0\n2013-12-31 10:00:00\n\n\n2013\n12\n31\nNA\n840\nNA\nNA\n1205\nNA\nUA\n1151\nNA\nEWR\nSEA\nNA\n2402\n8\n40\n2013-12-31 08:00:00\n\n\n2013\n12\n31\nNA\n754\nNA\nNA\n1118\nNA\nUA\n1455\nNA\nEWR\nLAX\nNA\n2454\n7\n54\n2013-12-31 07:00:00\n\n\n2013\n12\n31\nNA\n2000\nNA\nNA\n2146\nNA\nUA\n1482\nNA\nEWR\nORD\nNA\n719\n20\n0\n2013-12-31 20:00:00\n\n\n2013\n12\n31\nNA\n1500\nNA\nNA\n1817\nNA\nUA\n1483\nNA\nEWR\nAUS\nNA\n1504\n15\n0\n2013-12-31 15:00:00\n\n\n2013\n12\n31\nNA\n1430\nNA\nNA\n1750\nNA\nUA\n1493\nNA\nEWR\nLAX\nNA\n2454\n14\n30\n2013-12-31 14:00:00\n\n\n2013\n12\n31\nNA\n855\nNA\nNA\n1142\nNA\nUA\n1506\nNA\nEWR\nJAC\nNA\n1874\n8\n55\n2013-12-31 08:00:00\n\n\n2013\n12\n31\nNA\n705\nNA\nNA\n931\nNA\nUA\n1729\nNA\nEWR\nDEN\nNA\n1605\n7\n5\n2013-12-31 07:00:00\n\n\n2013\n12\n31\nNA\n825\nNA\nNA\n1029\nNA\nUS\n1831\nNA\nJFK\nCLT\nNA\n541\n8\n25\n2013-12-31 08:00:00\n\n\n2013\n12\n31\nNA\n1615\nNA\nNA\n1800\nNA\nMQ\n3301\nN844MQ\nLGA\nRDU\nNA\n431\n16\n15\n2013-12-31 16:00:00\n\n\n2013\n12\n31\nNA\n600\nNA\nNA\n735\nNA\nUA\n219\nNA\nEWR\nORD\nNA\n719\n6\n0\n2013-12-31 06:00:00\n\n\n2013\n12\n31\nNA\n830\nNA\nNA\n1154\nNA\nUA\n443\nNA\nJFK\nLAX\nNA\n2475\n8\n30\n2013-12-31 08:00:00\n\n\n\n\n\narrange()的工作方式与filter()函数相似，前者不是选择行，而是改变行的顺序。\n它接受的一个数据框和一组作为排序依据的列名作为参数。\ndesc()降序排\n\narrange(flights,desc(arr_delay))\n\n\nA tibble: 336776 × 19\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\norigin\ndest\nair_time\ndistance\nhour\nminute\ntime_hour\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n\n\n\n\n2013\n1\n9\n641\n900\n1301\n1242\n1530\n1272\nHA\n51\nN384HA\nJFK\nHNL\n640\n4983\n9\n0\n2013-01-09 09:00:00\n\n\n2013\n6\n15\n1432\n1935\n1137\n1607\n2120\n1127\nMQ\n3535\nN504MQ\nJFK\nCMH\n74\n483\n19\n35\n2013-06-15 19:00:00\n\n\n2013\n1\n10\n1121\n1635\n1126\n1239\n1810\n1109\nMQ\n3695\nN517MQ\nEWR\nORD\n111\n719\n16\n35\n2013-01-10 16:00:00\n\n\n2013\n9\n20\n1139\n1845\n1014\n1457\n2210\n1007\nAA\n177\nN338AA\nJFK\nSFO\n354\n2586\n18\n45\n2013-09-20 18:00:00\n\n\n2013\n7\n22\n845\n1600\n1005\n1044\n1815\n989\nMQ\n3075\nN665MQ\nJFK\nCVG\n96\n589\n16\n0\n2013-07-22 16:00:00\n\n\n2013\n4\n10\n1100\n1900\n960\n1342\n2211\n931\nDL\n2391\nN959DL\nJFK\nTPA\n139\n1005\n19\n0\n2013-04-10 19:00:00\n\n\n2013\n3\n17\n2321\n810\n911\n135\n1020\n915\nDL\n2119\nN927DA\nLGA\nMSP\n167\n1020\n8\n10\n2013-03-17 08:00:00\n\n\n2013\n7\n22\n2257\n759\n898\n121\n1026\n895\nDL\n2047\nN6716C\nLGA\nATL\n109\n762\n7\n59\n2013-07-22 07:00:00\n\n\n2013\n12\n5\n756\n1700\n896\n1058\n2020\n878\nAA\n172\nN5DMAA\nEWR\nMIA\n149\n1085\n17\n0\n2013-12-05 17:00:00\n\n\n2013\n5\n3\n1133\n2055\n878\n1250\n2215\n875\nMQ\n3744\nN523MQ\nEWR\nORD\n112\n719\n20\n55\n2013-05-03 20:00:00\n\n\n2013\n12\n14\n830\n1845\n825\n1210\n2154\n856\nDL\n2391\nN939DL\nJFK\nTPA\n173\n1005\n18\n45\n2013-12-14 18:00:00\n\n\n2013\n5\n19\n713\n1700\n853\n1007\n1955\n852\nAA\n257\nN3HEAA\nJFK\nLAS\n323\n2248\n17\n0\n2013-05-19 17:00:00\n\n\n2013\n1\n1\n848\n1835\n853\n1001\n1950\n851\nMQ\n3944\nN942MQ\nJFK\nBWI\n41\n184\n18\n35\n2013-01-01 18:00:00\n\n\n2013\n6\n27\n959\n1900\n899\n1236\n2226\n850\nDL\n2007\nN3762Y\nJFK\nPDX\n313\n2454\n19\n0\n2013-06-27 19:00:00\n\n\n2013\n12\n19\n734\n1725\n849\n1046\n2039\n847\nDL\n1223\nN375NC\nEWR\nSLC\n290\n1969\n17\n25\n2013-12-19 17:00:00\n\n\n2013\n12\n17\n705\n1700\n845\n1026\n2020\n846\nAA\n172\nN5EMAA\nEWR\nMIA\n145\n1085\n17\n0\n2013-12-17 17:00:00\n\n\n2013\n2\n10\n2243\n830\n853\n100\n1106\n834\nF9\n835\nN203FR\nLGA\nDEN\n233\n1620\n8\n30\n2013-02-10 08:00:00\n\n\n2013\n4\n19\n912\n1940\n812\n1228\n2247\n821\nDL\n1435\nN900DE\nLGA\nTPA\n174\n1010\n19\n40\n2013-04-19 19:00:00\n\n\n2013\n6\n27\n753\n1830\n803\n937\n2015\n802\nAA\n2019\nN571AA\nLGA\nSTL\n134\n888\n18\n30\n2013-06-27 18:00:00\n\n\n2013\n11\n3\n603\n1645\n798\n829\n1913\n796\nDL\n2042\nN990AT\nEWR\nATL\n109\n746\n16\n45\n2013-11-03 16:00:00\n\n\n2013\n3\n18\n1020\n2100\n800\n1336\n32\n784\nDL\n2363\nN624AG\nJFK\nLAX\n335\n2475\n21\n0\n2013-03-18 21:00:00\n\n\n2013\n4\n19\n606\n1725\n761\n923\n2020\n783\nAA\n1901\nN3DGAA\nJFK\nIAH\n222\n1417\n17\n25\n2013-04-19 17:00:00\n\n\n2013\n4\n19\n617\n1700\n797\n858\n1955\n783\nAA\n257\nN3GJAA\nJFK\nLAS\n313\n2248\n17\n0\n2013-04-19 17:00:00\n\n\n2013\n6\n27\n732\n1825\n787\n932\n2032\n780\nDL\n1715\nN335NB\nLGA\nMSY\n160\n1183\n18\n25\n2013-06-27 18:00:00\n\n\n2013\n2\n24\n1921\n615\n786\n2135\n842\n773\nDL\n575\nN348NW\nEWR\nATL\n111\n746\n6\n15\n2013-02-24 06:00:00\n\n\n2013\n6\n27\n615\n1705\n790\n853\n2004\n769\nDL\n503\nN372DA\nJFK\nSAN\n312\n2446\n17\n5\n2013-06-27 17:00:00\n\n\n2013\n2\n19\n2324\n1016\n788\n114\n1227\n767\nDL\n2319\nN324US\nLGA\nMSP\n136\n1020\n10\n16\n2013-02-19 10:00:00\n\n\n2013\n2\n16\n757\n1930\n747\n1013\n2149\n744\n9E\n3798\nN8940E\nJFK\nCLT\n85\n541\n19\n30\n2013-02-16 19:00:00\n\n\n2013\n4\n19\n758\n1925\n753\n1049\n2225\n744\nDL\n1485\nN927DA\nLGA\nMCO\n149\n950\n19\n25\n2013-04-19 19:00:00\n\n\n2013\n10\n14\n2042\n900\n702\n2255\n1127\n688\nDL\n502\nN943DL\nEWR\nATL\n98\n746\n9\n0\n2013-10-14 09:00:00\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n9\n25\nNA\n1655\nNA\nNA\n1840\nNA\nMQ\n3411\nN735MQ\nLGA\nRDU\nNA\n431\n16\n55\n2013-09-25 16:00:00\n\n\n2013\n9\n25\nNA\n1559\nNA\nNA\n1719\nNA\nMQ\n3748\nN530MQ\nEWR\nORD\nNA\n719\n15\n59\n2013-09-25 15:00:00\n\n\n2013\n9\n26\n1331\n1329\n2\n1923\n1813\nNA\nUA\n15\nN67052\nEWR\nHNL\nNA\n4963\n13\n29\n2013-09-26 13:00:00\n\n\n2013\n9\n26\nNA\n915\nNA\nNA\n1141\nNA\nEV\n5109\nN748EV\nLGA\nCHS\nNA\n641\n9\n15\n2013-09-26 09:00:00\n\n\n2013\n9\n26\nNA\n1400\nNA\nNA\n1512\nNA\nUS\n2183\nNA\nLGA\nDCA\nNA\n214\n14\n0\n2013-09-26 14:00:00\n\n\n2013\n9\n26\nNA\n1240\nNA\nNA\n1525\nNA\nWN\n4720\nN691WN\nEWR\nHOU\nNA\n1411\n12\n40\n2013-09-26 12:00:00\n\n\n2013\n9\n27\n1332\n1329\n3\n1629\n1509\nNA\nAA\n331\nN565AA\nLGA\nORD\nNA\n733\n13\n29\n2013-09-27 13:00:00\n\n\n2013\n9\n27\n2253\n1945\n188\nNA\n2146\nNA\nEV\n5306\nN605QX\nLGA\nGSO\nNA\n461\n19\n45\n2013-09-27 19:00:00\n\n\n2013\n9\n27\nNA\n600\nNA\nNA\n730\nNA\nAA\n301\nN584AA\nLGA\nORD\nNA\n733\n6\n0\n2013-09-27 06:00:00\n\n\n2013\n9\n27\nNA\n2100\nNA\nNA\n2211\nNA\nUS\n2164\nNA\nLGA\nBOS\nNA\n184\n21\n0\n2013-09-27 21:00:00\n\n\n2013\n9\n27\nNA\n1329\nNA\nNA\n1444\nNA\nMQ\n3760\nN505MQ\nEWR\nORD\nNA\n719\n13\n29\n2013-09-27 13:00:00\n\n\n2013\n9\n27\nNA\n1600\nNA\nNA\n1739\nNA\nUA\n269\nNA\nLGA\nORD\nNA\n733\n16\n0\n2013-09-27 16:00:00\n\n\n2013\n9\n28\n555\n600\n-5\n953\n753\nNA\nEV\n5068\nN133EV\nEWR\nDTW\nNA\n488\n6\n0\n2013-09-28 06:00:00\n\n\n2013\n9\n28\n847\n839\n8\n1130\n959\nNA\nEV\n4510\nN14542\nEWR\nMKE\nNA\n725\n8\n39\n2013-09-28 08:00:00\n\n\n2013\n9\n28\n1010\n1020\n-10\n1344\n1222\nNA\nEV\n4412\nN12175\nEWR\nDSM\nNA\n1017\n10\n20\n2013-09-28 10:00:00\n\n\n2013\n9\n28\n1214\n1225\n-11\n1801\n1510\nNA\nAA\n300\nN488AA\nEWR\nDFW\nNA\n1372\n12\n25\n2013-09-28 12:00:00\n\n\n2013\n9\n28\nNA\n1803\nNA\nNA\n1927\nNA\nEV\n5563\nN724EV\nLGA\nBTV\nNA\n258\n18\n3\n2013-09-28 18:00:00\n\n\n2013\n9\n28\nNA\n910\nNA\nNA\n1220\nNA\nAA\n1\nN320AA\nJFK\nLAX\nNA\n2475\n9\n10\n2013-09-28 09:00:00\n\n\n2013\n9\n28\nNA\n1635\nNA\nNA\n1827\nNA\nUS\n581\nNA\nEWR\nCLT\nNA\n529\n16\n35\n2013-09-28 16:00:00\n\n\n2013\n9\n29\n1734\n1711\n23\n2159\n2020\nNA\nUA\n327\nN463UA\nEWR\nPDX\nNA\n2434\n17\n11\n2013-09-29 17:00:00\n\n\n2013\n9\n29\nNA\n2054\nNA\nNA\n2302\nNA\nEV\n4536\nN13988\nEWR\nCVG\nNA\n569\n20\n54\n2013-09-29 20:00:00\n\n\n2013\n9\n29\nNA\n1830\nNA\nNA\n2010\nNA\nMQ\n3134\nN508MQ\nEWR\nORD\nNA\n719\n18\n30\n2013-09-29 18:00:00\n\n\n2013\n9\n29\nNA\n700\nNA\nNA\n833\nNA\nUA\n331\nNA\nLGA\nORD\nNA\n733\n7\n0\n2013-09-29 07:00:00\n\n\n2013\n9\n30\n559\n600\n-1\nNA\n715\nNA\nWN\n464\nN411WN\nEWR\nMDW\nNA\n711\n6\n0\n2013-09-30 06:00:00\n\n\n2013\n9\n30\nNA\n1842\nNA\nNA\n2019\nNA\nEV\n5274\nN740EV\nLGA\nBNA\nNA\n764\n18\n42\n2013-09-30 18:00:00\n\n\n2013\n9\n30\nNA\n1455\nNA\nNA\n1634\nNA\n9E\n3393\nNA\nJFK\nDCA\nNA\n213\n14\n55\n2013-09-30 14:00:00\n\n\n2013\n9\n30\nNA\n2200\nNA\nNA\n2312\nNA\n9E\n3525\nNA\nLGA\nSYR\nNA\n198\n22\n0\n2013-09-30 22:00:00\n\n\n2013\n9\n30\nNA\n1210\nNA\nNA\n1330\nNA\nMQ\n3461\nN535MQ\nLGA\nBNA\nNA\n764\n12\n10\n2013-09-30 12:00:00\n\n\n2013\n9\n30\nNA\n1159\nNA\nNA\n1344\nNA\nMQ\n3572\nN511MQ\nLGA\nCLE\nNA\n419\n11\n59\n2013-09-30 11:00:00\n\n\n2013\n9\n30\nNA\n840\nNA\nNA\n1020\nNA\nMQ\n3531\nN839MQ\nLGA\nRDU\nNA\n431\n8\n40\n2013-09-30 08:00:00\n\n\n\n\n\n\n\n\nby_dest <- group_by(flights,dest)\nby_dest\n\n\nA grouped_df: 336776 × 19\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\norigin\ndest\nair_time\ndistance\nhour\nminute\ntime_hour\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n\n\n\n\n2013\n1\n1\n517\n515\n2\n830\n819\n11\nUA\n1545\nN14228\nEWR\nIAH\n227\n1400\n5\n15\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n533\n529\n4\n850\n830\n20\nUA\n1714\nN24211\nLGA\nIAH\n227\n1416\n5\n29\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n542\n540\n2\n923\n850\n33\nAA\n1141\nN619AA\nJFK\nMIA\n160\n1089\n5\n40\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n544\n545\n-1\n1004\n1022\n-18\nB6\n725\nN804JB\nJFK\nBQN\n183\n1576\n5\n45\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n554\n600\n-6\n812\n837\n-25\nDL\n461\nN668DN\nLGA\nATL\n116\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n554\n558\n-4\n740\n728\n12\nUA\n1696\nN39463\nEWR\nORD\n150\n719\n5\n58\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n555\n600\n-5\n913\n854\n19\nB6\n507\nN516JB\nEWR\nFLL\n158\n1065\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n709\n723\n-14\nEV\n5708\nN829AS\nLGA\nIAD\n53\n229\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n557\n600\n-3\n838\n846\n-8\nB6\n79\nN593JB\nJFK\nMCO\n140\n944\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n753\n745\n8\nAA\n301\nN3ALAA\nLGA\nORD\n138\n733\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n849\n851\n-2\nB6\n49\nN793JB\nJFK\nPBI\n149\n1028\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n853\n856\n-3\nB6\n71\nN657JB\nJFK\nTPA\n158\n1005\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n924\n917\n7\nUA\n194\nN29129\nJFK\nLAX\n345\n2475\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n558\n600\n-2\n923\n937\n-14\nUA\n1124\nN53441\nEWR\nSFO\n361\n2565\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n941\n910\n31\nAA\n707\nN3DUAA\nLGA\nDFW\n257\n1389\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n559\n559\n0\n702\n706\n-4\nB6\n1806\nN708JB\nJFK\nBOS\n44\n187\n5\n59\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n559\n600\n-1\n854\n902\n-8\nUA\n1187\nN76515\nEWR\nLAS\n337\n2227\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n851\n858\n-7\nB6\n371\nN595JB\nLGA\nFLL\n152\n1076\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n600\n600\n0\n837\n825\n12\nMQ\n4650\nN542MQ\nLGA\nATL\n134\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n601\n600\n1\n844\n850\n-6\nB6\n343\nN644JB\nEWR\nPBI\n147\n1023\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n610\n-8\n812\n820\n-8\nDL\n1919\nN971DL\nLGA\nMSP\n170\n1020\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n602\n605\n-3\n821\n805\n16\nMQ\n4401\nN730MQ\nLGA\nDTW\n105\n502\n6\n5\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n858\n910\n-12\nAA\n1895\nN633AA\nEWR\nMIA\n152\n1085\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n606\n610\n-4\n837\n845\n-8\nDL\n1743\nN3739P\nJFK\nATL\n128\n760\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n607\n607\n0\n858\n915\n-17\nUA\n1077\nN53442\nEWR\nMIA\n157\n1085\n6\n7\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n608\n600\n8\n807\n735\n32\nMQ\n3768\nN9EAMQ\nEWR\nORD\n139\n719\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n611\n600\n11\n945\n931\n14\nUA\n303\nN532UA\nJFK\nSFO\n366\n2586\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n613\n610\n3\n925\n921\n4\nB6\n135\nN635JB\nJFK\nRSW\n175\n1074\n6\n10\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n1039\n1100\n-21\nB6\n709\nN794JB\nJFK\nSJU\n182\n1598\n6\n15\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n615\n615\n0\n833\n842\n-9\nDL\n575\nN326NB\nEWR\nATL\n120\n746\n6\n15\n2013-01-01 06:00:00\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n9\n30\n2123\n2125\n-2\n2223\n2247\n-24\nEV\n5489\nN712EV\nLGA\nCHO\n45\n305\n21\n25\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2127\n2129\n-2\n2314\n2323\n-9\nEV\n3833\nN16546\nEWR\nCLT\n72\n529\n21\n29\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2128\n2130\n-2\n2328\n2359\n-31\nB6\n97\nN807JB\nJFK\nDEN\n213\n1626\n21\n30\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2129\n2059\n30\n2230\n2232\n-2\nEV\n5048\nN751EV\nLGA\nRIC\n45\n292\n20\n59\n2013-09-30 20:00:00\n\n\n2013\n9\n30\n2131\n2140\n-9\n2225\n2255\n-30\nMQ\n3621\nN807MQ\nJFK\nDCA\n36\n213\n21\n40\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2140\n2140\n0\n10\n40\n-30\nAA\n185\nN335AA\nJFK\nLAX\n298\n2475\n21\n40\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2142\n2129\n13\n2250\n2239\n11\nEV\n4509\nN12957\nEWR\nPWM\n47\n284\n21\n29\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2145\n2145\n0\n115\n140\n-25\nB6\n1103\nN633JB\nJFK\nSJU\n192\n1598\n21\n45\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2147\n2137\n10\n30\n27\n3\nB6\n1371\nN627JB\nLGA\nFLL\n139\n1076\n21\n37\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2149\n2156\n-7\n2245\n2308\n-23\nUA\n523\nN813UA\nEWR\nBOS\n37\n200\n21\n56\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2150\n2159\n-9\n2250\n2306\n-16\nEV\n3842\nN10575\nEWR\nMHT\n39\n209\n21\n59\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2159\n1845\n194\n2344\n2030\n194\n9E\n3320\nN906XJ\nJFK\nBUF\n50\n301\n18\n45\n2013-09-30 18:00:00\n\n\n2013\n9\n30\n2203\n2205\n-2\n2339\n2331\n8\nEV\n5311\nN722EV\nLGA\nBGR\n61\n378\n22\n5\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2207\n2140\n27\n2257\n2250\n7\nMQ\n3660\nN532MQ\nLGA\nBNA\n97\n764\n21\n40\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2211\n2059\n72\n2339\n2242\n57\nEV\n4672\nN12145\nEWR\nSTL\n120\n872\n20\n59\n2013-09-30 20:00:00\n\n\n2013\n9\n30\n2231\n2245\n-14\n2335\n2356\n-21\nB6\n108\nN193JB\nJFK\nPWM\n48\n273\n22\n45\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2233\n2113\n80\n112\n30\n42\nUA\n471\nN578UA\nEWR\nSFO\n318\n2565\n21\n13\n2013-09-30 21:00:00\n\n\n2013\n9\n30\n2235\n2001\n154\n59\n2249\n130\nB6\n1083\nN804JB\nJFK\nMCO\n123\n944\n20\n1\n2013-09-30 20:00:00\n\n\n2013\n9\n30\n2237\n2245\n-8\n2345\n2353\n-8\nB6\n234\nN318JB\nJFK\nBTV\n43\n266\n22\n45\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2240\n2245\n-5\n2334\n2351\n-17\nB6\n1816\nN354JB\nJFK\nSYR\n41\n209\n22\n45\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2240\n2250\n-10\n2347\n7\n-20\nB6\n2002\nN281JB\nJFK\nBUF\n52\n301\n22\n50\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2241\n2246\n-5\n2345\n1\n-16\nB6\n486\nN346JB\nJFK\nROC\n47\n264\n22\n46\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2307\n2255\n12\n2359\n2358\n1\nB6\n718\nN565JB\nJFK\nBOS\n33\n187\n22\n55\n2013-09-30 22:00:00\n\n\n2013\n9\n30\n2349\n2359\n-10\n325\n350\n-25\nB6\n745\nN516JB\nJFK\nPSE\n196\n1617\n23\n59\n2013-09-30 23:00:00\n\n\n2013\n9\n30\nNA\n1842\nNA\nNA\n2019\nNA\nEV\n5274\nN740EV\nLGA\nBNA\nNA\n764\n18\n42\n2013-09-30 18:00:00\n\n\n2013\n9\n30\nNA\n1455\nNA\nNA\n1634\nNA\n9E\n3393\nNA\nJFK\nDCA\nNA\n213\n14\n55\n2013-09-30 14:00:00\n\n\n2013\n9\n30\nNA\n2200\nNA\nNA\n2312\nNA\n9E\n3525\nNA\nLGA\nSYR\nNA\n198\n22\n0\n2013-09-30 22:00:00\n\n\n2013\n9\n30\nNA\n1210\nNA\nNA\n1330\nNA\nMQ\n3461\nN535MQ\nLGA\nBNA\nNA\n764\n12\n10\n2013-09-30 12:00:00\n\n\n2013\n9\n30\nNA\n1159\nNA\nNA\n1344\nNA\nMQ\n3572\nN511MQ\nLGA\nCLE\nNA\n419\n11\n59\n2013-09-30 11:00:00\n\n\n2013\n9\n30\nNA\n840\nNA\nNA\n1020\nNA\nMQ\n3531\nN839MQ\nLGA\nRDU\nNA\n431\n8\n40\n2013-09-30 08:00:00\n\n\n\n\n\n\ndelay <- summarize(by_dest,count=n(),dist = mean(distance,na.rm=TRUE),delay=mean(arr_delay,na.rm=TRUE))\n\n\ndelay\n\n\nA tibble: 105 × 4\n\n\ndest\ncount\ndist\ndelay\n\n\n<chr>\n<int>\n<dbl>\n<dbl>\n\n\n\n\nABQ\n254\n1826.0000\n4.381890\n\n\nACK\n265\n199.0000\n4.852273\n\n\nALB\n439\n143.0000\n14.397129\n\n\nANC\n8\n3370.0000\n-2.500000\n\n\nATL\n17215\n757.1082\n11.300113\n\n\nAUS\n2439\n1514.2530\n6.019909\n\n\nAVL\n275\n583.5818\n8.003831\n\n\nBDL\n443\n116.0000\n7.048544\n\n\nBGR\n375\n378.0000\n8.027933\n\n\nBHM\n297\n865.9966\n16.877323\n\n\nBNA\n6333\n758.2135\n11.812459\n\n\nBOS\n15508\n190.6370\n2.914392\n\n\nBQN\n896\n1578.9833\n8.245495\n\n\nBTV\n2589\n265.0915\n8.950996\n\n\nBUF\n4681\n296.8084\n8.945952\n\n\nBUR\n371\n2465.0000\n8.175676\n\n\nBWI\n1781\n179.4183\n10.726734\n\n\nBZN\n36\n1882.0000\n7.600000\n\n\nCAE\n116\n603.5517\n41.764151\n\n\nCAK\n864\n397.0000\n19.698337\n\n\nCHO\n52\n305.0000\n9.500000\n\n\nCHS\n2884\n632.9168\n10.592968\n\n\nCLE\n4573\n414.1743\n9.181611\n\n\nCLT\n14064\n538.0273\n7.360319\n\n\nCMH\n3524\n476.5551\n10.601323\n\n\nCRW\n138\n444.0000\n14.671642\n\n\nCVG\n3941\n575.1599\n15.364564\n\n\nDAY\n1525\n537.1023\n12.680486\n\n\nDCA\n9705\n211.0062\n9.066952\n\n\nDEN\n7266\n1614.6784\n8.606500\n\n\n⋮\n⋮\n⋮\n⋮\n\n\nPIT\n2875\n334.0612\n7.6809905\n\n\nPSE\n365\n1617.0000\n7.8715084\n\n\nPSP\n19\n2378.0000\n-12.7222222\n\n\nPVD\n376\n160.0000\n16.2346369\n\n\nPWM\n2352\n276.1284\n11.6604021\n\n\nRDU\n8163\n426.7577\n10.0523810\n\n\nRIC\n2454\n281.4046\n20.1112532\n\n\nROC\n2416\n259.2508\n11.5606446\n\n\nRSW\n3537\n1072.8533\n3.2381496\n\n\nSAN\n2737\n2437.2992\n3.1391657\n\n\nSAT\n686\n1578.3411\n6.9453718\n\n\nSAV\n804\n709.1841\n15.1295060\n\n\nSBN\n10\n645.4000\n6.5000000\n\n\nSDF\n1157\n645.9836\n12.6693841\n\n\nSEA\n3923\n2412.6653\n-1.0990991\n\n\nSFO\n13331\n2577.9236\n2.6728915\n\n\nSJC\n329\n2569.0000\n3.4481707\n\n\nSJU\n5819\n1599.8336\n2.5205266\n\n\nSLC\n2467\n1986.9866\n0.1762546\n\n\nSMF\n284\n2521.0000\n12.1099291\n\n\nSNA\n825\n2434.0000\n-7.8682266\n\n\nSRQ\n1211\n1044.6515\n3.0824313\n\n\nSTL\n4339\n878.7232\n11.0784645\n\n\nSTT\n522\n1626.9828\n-3.8359073\n\n\nSYR\n1761\n205.9216\n8.9039250\n\n\nTPA\n7466\n1003.9356\n7.4085250\n\n\nTUL\n315\n1215.0000\n33.6598639\n\n\nTVC\n101\n652.3861\n12.9684211\n\n\nTYS\n631\n638.8098\n24.0692042\n\n\nXNA\n1036\n1142.5058\n7.4657258\n\n\n\n\n\n\ndelay <- dplyr::filter(delay,count>20,dest!= \"HNL\")\ndelay\n\n\nA tibble: 96 × 4\n\n\ndest\ncount\ndist\ndelay\n\n\n<chr>\n<int>\n<dbl>\n<dbl>\n\n\n\n\nABQ\n254\n1826.0000\n4.3818898\n\n\nACK\n265\n199.0000\n4.8522727\n\n\nALB\n439\n143.0000\n14.3971292\n\n\nATL\n17215\n757.1082\n11.3001128\n\n\nAUS\n2439\n1514.2530\n6.0199088\n\n\nAVL\n275\n583.5818\n8.0038314\n\n\nBDL\n443\n116.0000\n7.0485437\n\n\nBGR\n375\n378.0000\n8.0279330\n\n\nBHM\n297\n865.9966\n16.8773234\n\n\nBNA\n6333\n758.2135\n11.8124589\n\n\nBOS\n15508\n190.6370\n2.9143922\n\n\nBQN\n896\n1578.9833\n8.2454955\n\n\nBTV\n2589\n265.0915\n8.9509960\n\n\nBUF\n4681\n296.8084\n8.9459519\n\n\nBUR\n371\n2465.0000\n8.1756757\n\n\nBWI\n1781\n179.4183\n10.7267338\n\n\nBZN\n36\n1882.0000\n7.6000000\n\n\nCAE\n116\n603.5517\n41.7641509\n\n\nCAK\n864\n397.0000\n19.6983373\n\n\nCHO\n52\n305.0000\n9.5000000\n\n\nCHS\n2884\n632.9168\n10.5929685\n\n\nCLE\n4573\n414.1743\n9.1816113\n\n\nCLT\n14064\n538.0273\n7.3603189\n\n\nCMH\n3524\n476.5551\n10.6013229\n\n\nCRW\n138\n444.0000\n14.6716418\n\n\nCVG\n3941\n575.1599\n15.3645638\n\n\nDAY\n1525\n537.1023\n12.6804861\n\n\nDCA\n9705\n211.0062\n9.0669520\n\n\nDEN\n7266\n1614.6784\n8.6065002\n\n\nDFW\n8738\n1383.0430\n0.3221268\n\n\n⋮\n⋮\n⋮\n⋮\n\n\nPHL\n1632\n94.32353\n10.1271901\n\n\nPHX\n4656\n2141.30326\n2.0970473\n\n\nPIT\n2875\n334.06122\n7.6809905\n\n\nPSE\n365\n1617.00000\n7.8715084\n\n\nPVD\n376\n160.00000\n16.2346369\n\n\nPWM\n2352\n276.12840\n11.6604021\n\n\nRDU\n8163\n426.75769\n10.0523810\n\n\nRIC\n2454\n281.40465\n20.1112532\n\n\nROC\n2416\n259.25083\n11.5606446\n\n\nRSW\n3537\n1072.85327\n3.2381496\n\n\nSAN\n2737\n2437.29923\n3.1391657\n\n\nSAT\n686\n1578.34111\n6.9453718\n\n\nSAV\n804\n709.18408\n15.1295060\n\n\nSDF\n1157\n645.98358\n12.6693841\n\n\nSEA\n3923\n2412.66531\n-1.0990991\n\n\nSFO\n13331\n2577.92356\n2.6728915\n\n\nSJC\n329\n2569.00000\n3.4481707\n\n\nSJU\n5819\n1599.83365\n2.5205266\n\n\nSLC\n2467\n1986.98662\n0.1762546\n\n\nSMF\n284\n2521.00000\n12.1099291\n\n\nSNA\n825\n2434.00000\n-7.8682266\n\n\nSRQ\n1211\n1044.65153\n3.0824313\n\n\nSTL\n4339\n878.72321\n11.0784645\n\n\nSTT\n522\n1626.98276\n-3.8359073\n\n\nSYR\n1761\n205.92164\n8.9039250\n\n\nTPA\n7466\n1003.93557\n7.4085250\n\n\nTUL\n315\n1215.00000\n33.6598639\n\n\nTVC\n101\n652.38614\n12.9684211\n\n\nTYS\n631\n638.80983\n24.0692042\n\n\nXNA\n1036\n1142.50579\n7.4657258\n\n\n\n\n\n\nggplot(data= delay,mapping=aes(x=dist,y=delay))+\n    geom_point(aes(size=count),alpha=1/3)+\n    geom_smooth(se=FALSE)\n\n`geom_smooth()` using method = 'loess' and formula 'y ~ x'\n\n\n\n\n\n\n另一个将数据传入ggplot的方法是使用管道。\n\ndelays<-flights%>%\n    group_by(dest)%>%\n    summarize(count=n(),\n            dist=mean(distance,na.rm=TRUE),\n            delay=mean(arr_delay,na.rm=TRUE)\n             )%>%\n    dplyr::filter(count>20,dest !=\"HNL\")\nprint(delays)\n\n# A tibble: 96 × 4\n   dest  count  dist delay\n   <chr> <int> <dbl> <dbl>\n 1 ABQ     254 1826   4.38\n 2 ACK     265  199   4.85\n 3 ALB     439  143  14.4 \n 4 ATL   17215  757. 11.3 \n 5 AUS    2439 1514.  6.02\n 6 AVL     275  584.  8.00\n 7 BDL     443  116   7.05\n 8 BGR     375  378   8.03\n 9 BHM     297  866. 16.9 \n10 BNA    6333  758. 11.8 \n# … with 86 more rows\n\n\n\nggplot(data=smaller,mapping=aes(x=carat))+\n    geom_histogram(binwidth=0.1)\n\n\n\n\n所有的聚合函数遵循的一个一般原则是：若输入中存在缺失值，那么输出也会是缺失值。聚合函数中还有一大好处是有na.rm()函数能够帮助去除缺失值。\n\n\n\nn()或非缺失值的计数sum(!is_na())，可以检查一下是否有少量的数据作为结论\n\nnot_cancelled<-flights%>%\n    dplyr::filter(!is.na(dep_delay),!is.na(arr_delay))\n\n将所有窜缺失值的航班数据找出\n\ndelays<- not_cancelled %>%\n    group_by(tailnum) %>%\n    summarize(delay=mean(arr_delay)\n)\n\n\nggplot(data=delays,mapping=aes(x=delay))+\n    geom_freqpoly(binwidth=10)\n\n\n\n\n\ndelays<- not_cancelled %>%\n    group_by(tailnum) %>%\n    summarize(delay=mean(arr_delay,na.rm=TRUE),\n    n=n()\n)\ndelays\n\n\nA tibble: 4037 × 3\n\n\ntailnum\ndelay\nn\n\n\n<chr>\n<dbl>\n<int>\n\n\n\n\nD942DN\n31.5000000\n4\n\n\nN0EGMQ\n9.9829545\n352\n\n\nN10156\n12.7172414\n145\n\n\nN102UW\n2.9375000\n48\n\n\nN103US\n-6.9347826\n46\n\n\nN104UW\n1.8043478\n46\n\n\nN10575\n20.6914498\n269\n\n\nN105UW\n-0.2666667\n45\n\n\nN107US\n-5.7317073\n41\n\n\nN108UW\n-1.2500000\n60\n\n\nN109UW\n-2.5208333\n48\n\n\nN110UW\n2.8000000\n40\n\n\nN11106\n14.8809524\n126\n\n\nN11107\n15.0143885\n139\n\n\nN11109\n14.8510638\n141\n\n\nN11113\n15.7619048\n126\n\n\nN11119\n30.3065693\n137\n\n\nN11121\n10.3061224\n147\n\n\nN11127\n13.6050420\n119\n\n\nN11137\n20.5514019\n107\n\n\nN11140\n18.3120567\n141\n\n\nN11150\n8.8914729\n129\n\n\nN11155\n12.9895833\n96\n\n\nN11164\n21.6496350\n137\n\n\nN11165\n8.3466667\n150\n\n\nN11176\n20.4045802\n131\n\n\nN11181\n9.0750000\n120\n\n\nN11184\n6.9843750\n128\n\n\nN11187\n11.1904762\n126\n\n\nN11189\n6.7372263\n137\n\n\n⋮\n⋮\n⋮\n\n\nN985AT\n15.0384615\n26\n\n\nN985DL\n0.2539683\n63\n\n\nN986AT\n0.1250000\n24\n\n\nN986DL\n5.5833333\n72\n\n\nN987AT\n37.3846154\n26\n\n\nN987DL\n-3.2909091\n55\n\n\nN988AT\n44.3428571\n35\n\n\nN988DL\n9.4716981\n53\n\n\nN989AT\n28.1935484\n62\n\n\nN989DL\n11.0340909\n88\n\n\nN990AT\n16.3857143\n70\n\n\nN990DL\n12.4285714\n56\n\n\nN991AT\n15.6800000\n25\n\n\nN991DL\n7.3369565\n92\n\n\nN992AT\n17.7837838\n37\n\n\nN992DL\n-6.6491228\n57\n\n\nN993AT\n10.4042553\n47\n\n\nN993DL\n16.9811321\n53\n\n\nN994AT\n31.4838710\n31\n\n\nN994DL\n5.0327869\n61\n\n\nN995AT\n26.4705882\n17\n\n\nN995DL\n1.9298246\n57\n\n\nN996AT\n6.5384615\n26\n\n\nN996DL\n0.5247525\n101\n\n\nN997AT\n16.3023256\n43\n\n\nN997DL\n4.9032258\n62\n\n\nN998AT\n29.9600000\n25\n\n\nN998DL\n16.3947368\n76\n\n\nN999DN\n14.3114754\n61\n\n\nN9EAMQ\n9.2352941\n238\n\n\n\n\n\n\nggplot(data=delays,mapping=aes(x=n,y=delay))+\n    geom_point(alpha=1/10)\n\n\n\n\n进一步还可以筛取少量的分组，能够得到更好的展示效果\n\ndelays%>%\n    dplyr::filter(n>25)%>%\n    ggplot(mapping=aes(x=n,y=delay))+\n    geom_point(alpha=1/3)\n\n\n\n\n\n\n\n位置度量：使用mean()但median()也较为常用。均值是总数除以个数；中位数则是：50%的x大于它，同时50%的x小于它。\n\nnot_cancelled%>%\n    group_by(year,month,day)%>%\n    summarize(avg_delay1=mean(arr_delay,na.rm=TRUE),\n              n=n(),\n              avg_delay2=mean(arr_delay[arr_delay>0]))\n\n`summarise()` has grouped output by 'year', 'month'. You can override using the\n`.groups` argument.\n\n\n\nA grouped_df: 365 × 6\n\n\nyear\nmonth\nday\navg_delay1\nn\navg_delay2\n\n\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<dbl>\n\n\n\n\n2013\n1\n1\n12.6510229\n831\n32.48156\n\n\n2013\n1\n2\n12.6928879\n928\n32.02991\n\n\n2013\n1\n3\n5.7333333\n900\n27.66087\n\n\n2013\n1\n4\n-1.9328194\n908\n28.30976\n\n\n2013\n1\n5\n-1.5258020\n717\n22.55882\n\n\n2013\n1\n6\n4.2364294\n829\n24.37270\n\n\n2013\n1\n7\n-4.9473118\n930\n27.76132\n\n\n2013\n1\n8\n-3.2275785\n892\n20.78909\n\n\n2013\n1\n9\n-0.2642777\n893\n25.63415\n\n\n2013\n1\n10\n-5.8988159\n929\n27.34545\n\n\n2013\n1\n11\n-4.7622683\n917\n26.15984\n\n\n2013\n1\n12\n-13.0161527\n681\n23.47170\n\n\n2013\n1\n13\n14.9318463\n807\n52.54891\n\n\n2013\n1\n14\n3.6403034\n923\n22.44444\n\n\n2013\n1\n15\n0.4256527\n881\n19.71003\n\n\n2013\n1\n16\n34.2473623\n853\n46.08346\n\n\n2013\n1\n17\n6.4928962\n915\n25.60268\n\n\n2013\n1\n18\n1.8417582\n910\n25.05382\n\n\n2013\n1\n19\n-8.5260805\n671\n24.28906\n\n\n2013\n1\n20\n3.7400768\n781\n29.02913\n\n\n2013\n1\n21\n6.3159645\n902\n32.24359\n\n\n2013\n1\n22\n12.2768362\n885\n33.88323\n\n\n2013\n1\n23\n6.9177928\n888\n33.05181\n\n\n2013\n1\n24\n15.4273128\n908\n42.08824\n\n\n2013\n1\n25\n27.0989761\n879\n55.73694\n\n\n2013\n1\n26\n0.7511177\n671\n29.05833\n\n\n2013\n1\n27\n-1.3089330\n806\n36.02479\n\n\n2013\n1\n28\n9.3197200\n857\n38.70361\n\n\n2013\n1\n29\n-6.5558113\n869\n30.13333\n\n\n2013\n1\n30\n25.9108040\n796\n57.42889\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n12\n2\n0.4509018\n998\n31.55488\n\n\n2013\n12\n3\n2.2227979\n965\n24.45926\n\n\n2013\n12\n4\n-0.2222222\n945\n28.40643\n\n\n2013\n12\n5\n51.6662546\n809\n80.83571\n\n\n2013\n12\n6\n21.1194690\n904\n37.51089\n\n\n2013\n12\n7\n5.0570571\n666\n27.18707\n\n\n2013\n12\n8\n36.9118012\n805\n56.16000\n\n\n2013\n12\n9\n42.5755556\n900\n53.07383\n\n\n2013\n12\n10\n44.5087957\n739\n52.19440\n\n\n2013\n12\n11\n10.9024390\n943\n24.90559\n\n\n2013\n12\n12\n5.3399374\n959\n23.46320\n\n\n2013\n12\n13\n0.1630322\n963\n22.14121\n\n\n2013\n12\n14\n46.3975045\n561\n59.97802\n\n\n2013\n12\n15\n15.8700980\n816\n38.98678\n\n\n2013\n12\n16\n7.3706806\n955\n27.81385\n\n\n2013\n12\n17\n55.8718563\n835\n60.46795\n\n\n2013\n12\n18\n11.0798319\n952\n26.59503\n\n\n2013\n12\n19\n9.0062112\n966\n31.04008\n\n\n2013\n12\n20\n13.8201663\n962\n35.24905\n\n\n2013\n12\n21\n12.4569288\n801\n36.85539\n\n\n2013\n12\n22\n23.8995485\n886\n45.64875\n\n\n2013\n12\n23\n32.2260417\n960\n50.03397\n\n\n2013\n12\n24\n-1.0438830\n752\n21.16961\n\n\n2013\n12\n25\n-1.8993007\n715\n30.09500\n\n\n2013\n12\n26\n7.1741935\n930\n34.54869\n\n\n2013\n12\n27\n-0.1488033\n961\n29.04683\n\n\n2013\n12\n28\n-3.2595326\n813\n25.60769\n\n\n2013\n12\n29\n18.7638249\n868\n47.25636\n\n\n2013\n12\n30\n10.0577125\n953\n31.24380\n\n\n2013\n12\n31\n6.2121212\n759\n24.45596\n\n\n\n\n\n\nhead(delays)\n\n\nA tibble: 6 × 3\n\n\ntailnum\ndelay\nn\n\n\n<chr>\n<dbl>\n<int>\n\n\n\n\nD942DN\n31.500000\n4\n\n\nN0EGMQ\n9.982955\n352\n\n\nN10156\n12.717241\n145\n\n\nN102UW\n2.937500\n48\n\n\nN103US\n-6.934783\n46\n\n\nN104UW\n1.804348\n46\n\n\n\n\n\nsummarize()实际上是生成了变量能够作为数据框来使用\n\nggplot(data=delays,mapping=aes(x=n,y=delay))+\n    geom_point(alpha=1/10)\n\n\n\n\n\nggplot(data=smaller,mapping=aes(x=carat,color=cut))+\n    geom_freqpoly(binwidth=0.1)\n\n\n\n\n\n\n\n\nggplot(data=smaller,mapping=aes(x=carat))+\n    geom_histogram(binwidth=0.01)\n\n\n\n\n\nhead(faithful) #美国黄石公园喷泉的喷发时长\n\n\nA data.frame: 6 × 2\n\n\n\neruptions\nwaiting\n\n\n\n<dbl>\n<dbl>\n\n\n\n\n1\n3.600\n79\n\n\n2\n1.800\n54\n\n\n3\n3.333\n74\n\n\n4\n2.283\n62\n\n\n5\n4.533\n85\n\n\n6\n2.883\n55\n\n\n\n\n\n\nggplot(data=faithful,mapping=aes(x=eruptions))+\n    geom_histogram(binwidth=0.25)\n\n\n\n\n最终可以从图像中看出，喷发时间分为两组，一组以2分钟为主，另一组以4-5分钟为组\n\n\n\n\nhead(diamonds)\n\n\nA tibble: 6 × 10\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n<dbl>\n<ord>\n<ord>\n<ord>\n<dbl>\n<dbl>\n<int>\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n0.23\nIdeal\nE\nSI2\n61.5\n55\n326\n3.95\n3.98\n2.43\n\n\n0.21\nPremium\nE\nSI1\n59.8\n61\n326\n3.89\n3.84\n2.31\n\n\n0.23\nGood\nE\nVS1\n56.9\n65\n327\n4.05\n4.07\n2.31\n\n\n0.29\nPremium\nI\nVS2\n62.4\n58\n334\n4.20\n4.23\n2.63\n\n\n0.31\nGood\nJ\nSI2\n63.3\n58\n335\n4.34\n4.35\n2.75\n\n\n0.24\nVery Good\nJ\nVVS2\n62.8\n57\n336\n3.94\n3.96\n2.48\n\n\n\n\n\n\nggplot(diamonds)+\n    geom_histogram(mapping=aes(x=y),binwidth=0.5)  #x坐标表示的是y值的大小，geom_histogram函数将x坐标进行统计再映射到途中。\n\n\n\n\n这个分箱导致异常值的分箱高度太低。使用coord_cartesian()将y轴靠近0部分放大\n\nggplot(diamonds)+\n    geom_histogram(mapping=aes(x=y),binwidth=0.5)+\n    coord_cartesian(ylim=c(0,50))\n\n\n\n\n\nunusual <- diamonds %>%\n    dplyr::filter(y < 3 | y > 20)%>%\n    arrange(y)\nunusual\n\n\nA tibble: 9 × 10\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n<dbl>\n<ord>\n<ord>\n<ord>\n<dbl>\n<dbl>\n<int>\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n1.00\nVery Good\nH\nVS2\n63.3\n53\n5139\n0.00\n0.0\n0.00\n\n\n1.14\nFair\nG\nVS1\n57.5\n67\n6381\n0.00\n0.0\n0.00\n\n\n1.56\nIdeal\nG\nVS2\n62.2\n54\n12800\n0.00\n0.0\n0.00\n\n\n1.20\nPremium\nD\nVVS1\n62.1\n59\n15686\n0.00\n0.0\n0.00\n\n\n2.25\nPremium\nH\nSI2\n62.8\n59\n18034\n0.00\n0.0\n0.00\n\n\n0.71\nGood\nF\nSI2\n64.1\n60\n2130\n0.00\n0.0\n0.00\n\n\n0.71\nGood\nF\nSI2\n64.1\n60\n2130\n0.00\n0.0\n0.00\n\n\n0.51\nIdeal\nE\nVS1\n61.8\n55\n2075\n5.15\n31.8\n5.12\n\n\n2.00\nPremium\nH\nSI2\n58.9\n57\n12210\n8.09\n58.9\n8.06\n\n\n\n\n\n\n\n\n\n丢弃所有可疑的行\n\n\ndiamonds2<-diamonds%>%\n    dplyr::filter(between(y,3,20))\n\n\n使用缺失值代替异常值，使用mutate()来创建一个新的变量来代替原有的变量\n\n\ndiamonds2<-diamonds%>%\n    mutate(y=ifelse(y<3|y>20,NA,y)) #mutate 在原有的属性进行操作\n\n\ndiamonds2\n\n\nA tibble: 53940 × 10\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n<dbl>\n<ord>\n<ord>\n<ord>\n<dbl>\n<dbl>\n<int>\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n0.23\nIdeal\nE\nSI2\n61.5\n55\n326\n3.95\n3.98\n2.43\n\n\n0.21\nPremium\nE\nSI1\n59.8\n61\n326\n3.89\n3.84\n2.31\n\n\n0.23\nGood\nE\nVS1\n56.9\n65\n327\n4.05\n4.07\n2.31\n\n\n0.29\nPremium\nI\nVS2\n62.4\n58\n334\n4.20\n4.23\n2.63\n\n\n0.31\nGood\nJ\nSI2\n63.3\n58\n335\n4.34\n4.35\n2.75\n\n\n0.24\nVery Good\nJ\nVVS2\n62.8\n57\n336\n3.94\n3.96\n2.48\n\n\n0.24\nVery Good\nI\nVVS1\n62.3\n57\n336\n3.95\n3.98\n2.47\n\n\n0.26\nVery Good\nH\nSI1\n61.9\n55\n337\n4.07\n4.11\n2.53\n\n\n0.22\nFair\nE\nVS2\n65.1\n61\n337\n3.87\n3.78\n2.49\n\n\n0.23\nVery Good\nH\nVS1\n59.4\n61\n338\n4.00\n4.05\n2.39\n\n\n0.30\nGood\nJ\nSI1\n64.0\n55\n339\n4.25\n4.28\n2.73\n\n\n0.23\nIdeal\nJ\nVS1\n62.8\n56\n340\n3.93\n3.90\n2.46\n\n\n0.22\nPremium\nF\nSI1\n60.4\n61\n342\n3.88\n3.84\n2.33\n\n\n0.31\nIdeal\nJ\nSI2\n62.2\n54\n344\n4.35\n4.37\n2.71\n\n\n0.20\nPremium\nE\nSI2\n60.2\n62\n345\n3.79\n3.75\n2.27\n\n\n0.32\nPremium\nE\nI1\n60.9\n58\n345\n4.38\n4.42\n2.68\n\n\n0.30\nIdeal\nI\nSI2\n62.0\n54\n348\n4.31\n4.34\n2.68\n\n\n0.30\nGood\nJ\nSI1\n63.4\n54\n351\n4.23\n4.29\n2.70\n\n\n0.30\nGood\nJ\nSI1\n63.8\n56\n351\n4.23\n4.26\n2.71\n\n\n0.30\nVery Good\nJ\nSI1\n62.7\n59\n351\n4.21\n4.27\n2.66\n\n\n0.30\nGood\nI\nSI2\n63.3\n56\n351\n4.26\n4.30\n2.71\n\n\n0.23\nVery Good\nE\nVS2\n63.8\n55\n352\n3.85\n3.92\n2.48\n\n\n0.23\nVery Good\nH\nVS1\n61.0\n57\n353\n3.94\n3.96\n2.41\n\n\n0.31\nVery Good\nJ\nSI1\n59.4\n62\n353\n4.39\n4.43\n2.62\n\n\n0.31\nVery Good\nJ\nSI1\n58.1\n62\n353\n4.44\n4.47\n2.59\n\n\n0.23\nVery Good\nG\nVVS2\n60.4\n58\n354\n3.97\n4.01\n2.41\n\n\n0.24\nPremium\nI\nVS1\n62.5\n57\n355\n3.97\n3.94\n2.47\n\n\n0.30\nVery Good\nJ\nVS2\n62.2\n57\n357\n4.28\n4.30\n2.67\n\n\n0.23\nVery Good\nD\nVS2\n60.5\n61\n357\n3.96\n3.97\n2.40\n\n\n0.23\nVery Good\nF\nVS1\n60.9\n57\n357\n3.96\n3.99\n2.42\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n0.70\nPremium\nE\nSI1\n60.5\n58\n2753\n5.74\n5.77\n3.48\n\n\n0.57\nPremium\nE\nIF\n59.8\n60\n2753\n5.43\n5.38\n3.23\n\n\n0.61\nPremium\nF\nVVS1\n61.8\n59\n2753\n5.48\n5.40\n3.36\n\n\n0.80\nGood\nG\nVS2\n64.2\n58\n2753\n5.84\n5.81\n3.74\n\n\n0.84\nGood\nI\nVS1\n63.7\n59\n2753\n5.94\n5.90\n3.77\n\n\n0.77\nIdeal\nE\nSI2\n62.1\n56\n2753\n5.84\n5.86\n3.63\n\n\n0.74\nGood\nD\nSI1\n63.1\n59\n2753\n5.71\n5.74\n3.61\n\n\n0.90\nVery Good\nJ\nSI1\n63.2\n60\n2753\n6.12\n6.09\n3.86\n\n\n0.76\nPremium\nI\nVS1\n59.3\n62\n2753\n5.93\n5.85\n3.49\n\n\n0.76\nIdeal\nI\nVVS1\n62.2\n55\n2753\n5.89\n5.87\n3.66\n\n\n0.70\nVery Good\nE\nVS2\n62.4\n60\n2755\n5.57\n5.61\n3.49\n\n\n0.70\nVery Good\nE\nVS2\n62.8\n60\n2755\n5.59\n5.65\n3.53\n\n\n0.70\nVery Good\nD\nVS1\n63.1\n59\n2755\n5.67\n5.58\n3.55\n\n\n0.73\nIdeal\nI\nVS2\n61.3\n56\n2756\n5.80\n5.84\n3.57\n\n\n0.73\nIdeal\nI\nVS2\n61.6\n55\n2756\n5.82\n5.84\n3.59\n\n\n0.79\nIdeal\nI\nSI1\n61.6\n56\n2756\n5.95\n5.97\n3.67\n\n\n0.71\nIdeal\nE\nSI1\n61.9\n56\n2756\n5.71\n5.73\n3.54\n\n\n0.79\nGood\nF\nSI1\n58.1\n59\n2756\n6.06\n6.13\n3.54\n\n\n0.79\nPremium\nE\nSI2\n61.4\n58\n2756\n6.03\n5.96\n3.68\n\n\n0.71\nIdeal\nG\nVS1\n61.4\n56\n2756\n5.76\n5.73\n3.53\n\n\n0.71\nPremium\nE\nSI1\n60.5\n55\n2756\n5.79\n5.74\n3.49\n\n\n0.71\nPremium\nF\nSI1\n59.8\n62\n2756\n5.74\n5.73\n3.43\n\n\n0.70\nVery Good\nE\nVS2\n60.5\n59\n2757\n5.71\n5.76\n3.47\n\n\n0.70\nVery Good\nE\nVS2\n61.2\n59\n2757\n5.69\n5.72\n3.49\n\n\n0.72\nPremium\nD\nSI1\n62.7\n59\n2757\n5.69\n5.73\n3.58\n\n\n0.72\nIdeal\nD\nSI1\n60.8\n57\n2757\n5.75\n5.76\n3.50\n\n\n0.72\nGood\nD\nSI1\n63.1\n55\n2757\n5.69\n5.75\n3.61\n\n\n0.70\nVery Good\nD\nSI1\n62.8\n60\n2757\n5.66\n5.68\n3.56\n\n\n0.86\nPremium\nH\nSI2\n61.0\n58\n2757\n6.15\n6.12\n3.74\n\n\n0.75\nIdeal\nD\nSI2\n62.2\n55\n2757\n5.83\n5.87\n3.64\n\n\n\n\n\n\nggplot(data=diamonds2,mapping=aes(x=x,y=y))+\n    geom_point(na.rm=TRUE)\n\n\n\n\n\n\n\n\n相关变动就是描述多个变量之间的行为。以可视化的方式进行查看\n\nggplot(data = diamonds, mapping= aes(x = price ))+\n    geom_freqpoly(mapping=aes(color=cut),binwidth=500)\n\n\n\n\n\nggplot(diamonds)+\n    geom_bar(mapping=aes(x=cut))\n\n\n\n\n\nggplot(data=diamonds,mapping=aes(x=cut,y=price))+\n    geom_boxplot()\n\n\n\n\n\nggplot(data=mpg,mapping=aes(x=class,y=hwy))+\n    geom_boxplot() #这里对于yx来说属于一个列联表分类数据。\n\n\n\n\n\ndiamonds%>%\n    count(color,cut)%>%\n    ggplot(mapping=aes(x=color,y=cut))+\n        geom_tile(mapping=aes(fill=n))  #aes()仍然是将fill放入其中\n\n\n\n\n\n\n\ndiamonds%>%\n    count(color,cut)%>%\n    ggplot(mapping=aes(x=color,y=cut))+\n        geom_point(aes(color=n))\n\n\n\n\n\n\n\n\n\nggplot(data=faithful)+\n    geom_point(mapping=aes(x=eruptions,y=waiting))"
  },
  {
    "objectID": "posts/DR2.html#数据处理",
    "href": "posts/DR2.html#数据处理",
    "title": "Data Science",
    "section": "数据处理",
    "text": "数据处理\n数据处理是一门艺术，将合适的形式倒入R，从而进行可视化和建模。\n\nas_tibble(iris)\n\n\nA tibble: 150 × 5\n\n\nSepal.Length\nSepal.Width\nPetal.Length\nPetal.Width\nSpecies\n\n\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<fct>\n\n\n\n\n5.1\n3.5\n1.4\n0.2\nsetosa\n\n\n4.9\n3.0\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.3\n0.2\nsetosa\n\n\n4.6\n3.1\n1.5\n0.2\nsetosa\n\n\n5.0\n3.6\n1.4\n0.2\nsetosa\n\n\n5.4\n3.9\n1.7\n0.4\nsetosa\n\n\n4.6\n3.4\n1.4\n0.3\nsetosa\n\n\n5.0\n3.4\n1.5\n0.2\nsetosa\n\n\n4.4\n2.9\n1.4\n0.2\nsetosa\n\n\n4.9\n3.1\n1.5\n0.1\nsetosa\n\n\n5.4\n3.7\n1.5\n0.2\nsetosa\n\n\n4.8\n3.4\n1.6\n0.2\nsetosa\n\n\n4.8\n3.0\n1.4\n0.1\nsetosa\n\n\n4.3\n3.0\n1.1\n0.1\nsetosa\n\n\n5.8\n4.0\n1.2\n0.2\nsetosa\n\n\n5.7\n4.4\n1.5\n0.4\nsetosa\n\n\n5.4\n3.9\n1.3\n0.4\nsetosa\n\n\n5.1\n3.5\n1.4\n0.3\nsetosa\n\n\n5.7\n3.8\n1.7\n0.3\nsetosa\n\n\n5.1\n3.8\n1.5\n0.3\nsetosa\n\n\n5.4\n3.4\n1.7\n0.2\nsetosa\n\n\n5.1\n3.7\n1.5\n0.4\nsetosa\n\n\n4.6\n3.6\n1.0\n0.2\nsetosa\n\n\n5.1\n3.3\n1.7\n0.5\nsetosa\n\n\n4.8\n3.4\n1.9\n0.2\nsetosa\n\n\n5.0\n3.0\n1.6\n0.2\nsetosa\n\n\n5.0\n3.4\n1.6\n0.4\nsetosa\n\n\n5.2\n3.5\n1.5\n0.2\nsetosa\n\n\n5.2\n3.4\n1.4\n0.2\nsetosa\n\n\n4.7\n3.2\n1.6\n0.2\nsetosa\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n6.9\n3.2\n5.7\n2.3\nvirginica\n\n\n5.6\n2.8\n4.9\n2.0\nvirginica\n\n\n7.7\n2.8\n6.7\n2.0\nvirginica\n\n\n6.3\n2.7\n4.9\n1.8\nvirginica\n\n\n6.7\n3.3\n5.7\n2.1\nvirginica\n\n\n7.2\n3.2\n6.0\n1.8\nvirginica\n\n\n6.2\n2.8\n4.8\n1.8\nvirginica\n\n\n6.1\n3.0\n4.9\n1.8\nvirginica\n\n\n6.4\n2.8\n5.6\n2.1\nvirginica\n\n\n7.2\n3.0\n5.8\n1.6\nvirginica\n\n\n7.4\n2.8\n6.1\n1.9\nvirginica\n\n\n7.9\n3.8\n6.4\n2.0\nvirginica\n\n\n6.4\n2.8\n5.6\n2.2\nvirginica\n\n\n6.3\n2.8\n5.1\n1.5\nvirginica\n\n\n6.1\n2.6\n5.6\n1.4\nvirginica\n\n\n7.7\n3.0\n6.1\n2.3\nvirginica\n\n\n6.3\n3.4\n5.6\n2.4\nvirginica\n\n\n6.4\n3.1\n5.5\n1.8\nvirginica\n\n\n6.0\n3.0\n4.8\n1.8\nvirginica\n\n\n6.9\n3.1\n5.4\n2.1\nvirginica\n\n\n6.7\n3.1\n5.6\n2.4\nvirginica\n\n\n6.9\n3.1\n5.1\n2.3\nvirginica\n\n\n5.8\n2.7\n5.1\n1.9\nvirginica\n\n\n6.8\n3.2\n5.9\n2.3\nvirginica\n\n\n6.7\n3.3\n5.7\n2.5\nvirginica\n\n\n6.7\n3.0\n5.2\n2.3\nvirginica\n\n\n6.3\n2.5\n5.0\n1.9\nvirginica\n\n\n6.5\n3.0\n5.2\n2.0\nvirginica\n\n\n6.2\n3.4\n5.4\n2.3\nvirginica\n\n\n5.9\n3.0\n5.1\n1.8\nvirginica\n\n\n\n\n\n自行生成一个tibble\n\ntibble(\n    x=1:5,\n    y=1,\n    z=x^2+y\n)\n\n\nA tibble: 5 × 3\n\n\nx\ny\nz\n\n\n<int>\n<dbl>\n<dbl>\n\n\n\n\n1\n1\n2\n\n\n2\n1\n5\n\n\n3\n1\n10\n\n\n4\n1\n17\n\n\n5\n1\n26\n\n\n\n\n\n对两个分类变量的相关变动进行可视化表示，需要计算出每个变量组合的观测数量。（同时上述的geom_point(color=n)也能实现类似的功能）\n\nggplot(data=diamonds)+\n    geom_count(mapping=aes(x=cut,y=color)) #将数量的大小投射到数据点的大小上\n\n\n\n\n\nhead(diamonds)\n\n\nA tibble: 6 × 10\n\n\ncarat\ncut\ncolor\nclarity\ndepth\ntable\nprice\nx\ny\nz\n\n\n<dbl>\n<ord>\n<ord>\n<ord>\n<dbl>\n<dbl>\n<int>\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n0.23\nIdeal\nE\nSI2\n61.5\n55\n326\n3.95\n3.98\n2.43\n\n\n0.21\nPremium\nE\nSI1\n59.8\n61\n326\n3.89\n3.84\n2.31\n\n\n0.23\nGood\nE\nVS1\n56.9\n65\n327\n4.05\n4.07\n2.31\n\n\n0.29\nPremium\nI\nVS2\n62.4\n58\n334\n4.20\n4.23\n2.63\n\n\n0.31\nGood\nJ\nSI2\n63.3\n58\n335\n4.34\n4.35\n2.75\n\n\n0.24\nVery Good\nJ\nVVS2\n62.8\n57\n336\n3.94\n3.96\n2.48\n\n\n\n\n\n\ntibble(\n    a=lubridate::now()+runif(1e3)*86400,\n    b=lubridate::today()+runif(1e3)*30,\n    c=1:1e3,\n    d=runif(1e3),\n    e=sample(letters,1e3,replace=TRUE)\n)\n\n\nA tibble: 1000 × 5\n\n\na\nb\nc\nd\ne\n\n\n<dttm>\n<date>\n<int>\n<dbl>\n<chr>\n\n\n\n\n2022-10-02 01:17:43\n2022-10-23\n1\n0.07904540\nd\n\n\n2022-10-01 22:59:44\n2022-10-16\n2\n0.17864565\nz\n\n\n2022-10-01 23:43:46\n2022-10-08\n3\n0.86078870\nd\n\n\n2022-10-02 03:40:45\n2022-10-04\n4\n0.93952259\ng\n\n\n2022-10-01 23:50:48\n2022-10-12\n5\n0.87904425\nk\n\n\n2022-10-02 08:52:52\n2022-10-22\n6\n0.01717623\ny\n\n\n2022-10-01 23:04:13\n2022-10-20\n7\n0.61590930\ns\n\n\n2022-10-02 07:41:45\n2022-10-02\n8\n0.15905475\nt\n\n\n2022-10-02 03:38:31\n2022-10-06\n9\n0.28964310\ne\n\n\n2022-10-02 03:33:58\n2022-10-05\n10\n0.73699888\ny\n\n\n2022-10-02 03:26:09\n2022-10-05\n11\n0.34331203\nt\n\n\n2022-10-02 11:56:58\n2022-10-24\n12\n0.56826309\ns\n\n\n2022-10-02 05:23:19\n2022-10-14\n13\n0.10237698\ng\n\n\n2022-10-02 14:05:24\n2022-10-05\n14\n0.03664026\nk\n\n\n2022-10-02 12:35:50\n2022-10-30\n15\n0.49635435\nt\n\n\n2022-10-02 02:42:11\n2022-10-25\n16\n0.01659913\nc\n\n\n2022-10-02 05:53:12\n2022-10-05\n17\n0.63373399\nw\n\n\n2022-10-02 08:18:19\n2022-10-27\n18\n0.01377930\nl\n\n\n2022-10-02 17:44:45\n2022-10-17\n19\n0.65322412\nv\n\n\n2022-10-01 22:21:33\n2022-10-04\n20\n0.76266778\nk\n\n\n2022-10-02 11:31:59\n2022-10-28\n21\n0.22273304\nf\n\n\n2022-10-02 19:58:45\n2022-10-18\n22\n0.08504631\nm\n\n\n2022-10-02 15:35:07\n2022-10-05\n23\n0.93193100\ni\n\n\n2022-10-02 05:57:29\n2022-10-21\n24\n0.82549381\ny\n\n\n2022-10-02 03:49:29\n2022-10-04\n25\n0.87586050\ng\n\n\n2022-10-02 16:10:10\n2022-10-03\n26\n0.18427842\nf\n\n\n2022-10-01 23:03:23\n2022-10-10\n27\n0.19592865\ne\n\n\n2022-10-02 14:11:55\n2022-10-03\n28\n0.20376826\nv\n\n\n2022-10-02 05:42:00\n2022-10-01\n29\n0.71602347\nu\n\n\n2022-10-02 14:37:36\n2022-10-11\n30\n0.47020862\nu\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2022-10-02 13:04:54\n2022-10-25\n971\n0.86671718\nj\n\n\n2022-10-01 21:17:47\n2022-10-07\n972\n0.56333952\nd\n\n\n2022-10-02 00:42:52\n2022-10-18\n973\n0.53318103\nr\n\n\n2022-10-02 07:44:26\n2022-10-06\n974\n0.01763443\nc\n\n\n2022-10-02 00:33:14\n2022-10-26\n975\n0.93499874\nl\n\n\n2022-10-02 04:32:36\n2022-10-22\n976\n0.28361392\nq\n\n\n2022-10-01 23:27:32\n2022-10-01\n977\n0.27174637\ne\n\n\n2022-10-02 17:35:56\n2022-10-04\n978\n0.84402890\ng\n\n\n2022-10-02 09:59:34\n2022-10-04\n979\n0.69759029\ng\n\n\n2022-10-02 07:21:53\n2022-10-02\n980\n0.26624991\nr\n\n\n2022-10-02 15:04:21\n2022-10-29\n981\n0.35530486\na\n\n\n2022-10-02 00:08:30\n2022-10-13\n982\n0.05575729\nl\n\n\n2022-10-02 02:10:33\n2022-10-07\n983\n0.68215359\nm\n\n\n2022-10-02 01:44:38\n2022-10-01\n984\n0.69344671\ng\n\n\n2022-10-02 02:07:59\n2022-10-05\n985\n0.93304451\nk\n\n\n2022-10-02 12:21:03\n2022-10-01\n986\n0.06716917\ni\n\n\n2022-10-01 23:56:20\n2022-10-29\n987\n0.36384079\nw\n\n\n2022-10-02 11:39:18\n2022-10-12\n988\n0.76277196\ni\n\n\n2022-10-02 17:49:47\n2022-10-08\n989\n0.16140199\nj\n\n\n2022-10-02 13:45:43\n2022-10-11\n990\n0.17523457\nx\n\n\n2022-10-02 03:13:52\n2022-10-15\n991\n0.93648914\nc\n\n\n2022-10-02 06:18:18\n2022-10-03\n992\n0.49585062\nh\n\n\n2022-10-02 03:02:46\n2022-10-17\n993\n0.66820877\np\n\n\n2022-10-02 09:21:35\n2022-10-03\n994\n0.25612216\nh\n\n\n2022-10-02 02:01:02\n2022-10-10\n995\n0.62971457\na\n\n\n2022-10-02 05:38:54\n2022-10-04\n996\n0.23914501\nx\n\n\n2022-10-02 17:17:02\n2022-10-02\n997\n0.64705285\np\n\n\n2022-10-02 09:45:24\n2022-10-23\n998\n0.19531533\nj\n\n\n2022-10-02 10:20:00\n2022-10-11\n999\n0.75877675\ns\n\n\n2022-10-02 19:40:23\n2022-10-15\n1000\n0.89462929\np\n\n\n\n\n\n\n提取子集\n如$和[[，[[能够按照名称或位置提取变量，$只能按照名称提取变量。\n\ndf<-tibble(\n    x = runif(5),\n    y = rnorm(5))\n\n\ndf$x\n\n\n0.2523732569534330.3481868666131050.4975398448295890.6017809147015210.887235613539815\n\n\n\ndf[[\"x\"]]\n\n\n0.2523732569534330.3481868666131050.4975398448295890.6017809147015210.887235613539815\n\n\n\n\n与旧代码交互\n\nclass(as.data.frame(df))\n\n'data.frame'\n\n\n\n\n使用readr数据导入\n\nlibrary(tidyverse)\n\nreadr中的多数函数用于平面文件转换为数据框。 - read_csv() - read_fwf()读取固定宽度的文件。\n\nheights <-read_csv(\"/Users/a182501/R_data-mining/M2_IFI_Data_Basket.csv\")\n\nRows: 1000 Columns: 18\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (14): Payment, Gender, Tenant, Fruits & vegetables, Meat, Milk products,...\ndbl  (4): Card num., Amount, Income, Age\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nheights\n\n\nA spec_tbl_df: 1000 × 18\n\n\nCard num.\nAmount\nPayment\nGender\nTenant\nIncome\nAge\nFruits & vegetables\nMeat\nMilk products\nCanned vegetables\nCanned meat\nFrozen goods\nBeer\nWine\nSoda drinks\nFish\nTextile\n\n\n<dbl>\n<dbl>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n<chr>\n\n\n\n\n39808\n427.12\nCheque\nM\nYes\n270000\n46\nNo\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\n\n\n67362\n253.56\nCash\nF\nYes\n300000\n28\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\n\n\n10872\n206.17\nCash\nM\nYes\n132000\n36\nNo\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nYes\nNo\n\n\n26748\n236.88\nCard\nF\nYes\n122000\n26\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\n\n\n91609\n188.13\nCard\nM\nNo\n110000\n24\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n26630\n464.86\nCard\nF\nYes\n150000\n35\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nYes\nNo\n\n\n62995\n140.46\nCash\nF\nNo\n208000\n30\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\n\n\n38765\n222.03\nCash\nM\nNo\n244000\n22\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\n\n\n28935\n229.75\nCheque\nF\nYes\n295000\n46\nYes\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\n\n\n41792\n145.69\nCash\nM\nYes\n296000\n22\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n59480\n103.28\nCash\nF\nYes\n271000\n18\nYes\nYes\nYes\nYes\nNo\nNo\nNo\nYes\nNo\nYes\nNo\n\n\n60755\n137.79\nCash\nF\nNo\n200000\n48\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n70998\n365.09\nCard\nM\nNo\n273000\n43\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nYes\nNo\n\n\n80617\n102.01\nCheque\nF\nNo\n280000\n43\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nYes\nNo\n\n\n61144\n103.73\nCash\nF\nYes\n274000\n24\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nYes\nNo\n\n\n36405\n348.22\nCheque\nF\nNo\n184000\n19\nNo\nNo\nNo\nNo\nNo\nYes\nYes\nNo\nYes\nNo\nNo\n\n\n76567\n422.48\nCard\nM\nNo\n231000\n31\nYes\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n85699\n181.68\nCash\nF\nNo\n270000\n29\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n11357\n107.53\nCash\nF\nNo\n231000\n26\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nYes\nNo\n\n\n97761\n323.18\nCard\nF\nNo\n258000\n38\nYes\nNo\nNo\nYes\nNo\nNo\nNo\nYes\nNo\nYes\nYes\n\n\n20362\n317.20\nCash\nM\nNo\n251000\n38\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nYes\nNo\n\n\n33173\n368.32\nCash\nF\nNo\n247000\n43\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nYes\n\n\n69934\n311.78\nCheque\nF\nNo\n213000\n41\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n14743\n216.81\nCash\nM\nNo\n124000\n48\nNo\nYes\nYes\nYes\nYes\nYes\nYes\nYes\nNo\nNo\nNo\n\n\n83071\n298.53\nCash\nM\nNo\n181000\n31\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nYes\n\n\n17571\n152.70\nCard\nF\nNo\n229000\n23\nNo\nNo\nYes\nNo\nNo\nYes\nYes\nNo\nNo\nNo\nNo\n\n\n37917\n322.31\nCheque\nF\nYes\n270000\n32\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nYes\n\n\n11236\n425.66\nCard\nM\nNo\n268000\n34\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n47914\n445.91\nCash\nF\nNo\n247000\n32\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nYes\nYes\n\n\n58154\n491.36\nCheque\nM\nYes\n213000\n50\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n47330\n209.34\nCash\nF\nNo\n188000\n21\nYes\nNo\nNo\nNo\nNo\nYes\nNo\nYes\nNo\nNo\nYes\n\n\n94864\n434.74\nCheque\nF\nYes\n142000\n47\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\n\n\n28959\n215.85\nCash\nM\nYes\n236000\n38\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\n\n\n54462\n388.38\nCash\nM\nYes\n159000\n31\nNo\nNo\nYes\nYes\nNo\nYes\nYes\nYes\nNo\nNo\nNo\n\n\n63880\n167.47\nCash\nF\nYes\n208000\n23\nYes\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n104630\n496.88\nCard\nF\nNo\n238000\n19\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nYes\n\n\n11565\n449.74\nCash\nF\nYes\n164000\n19\nNo\nYes\nYes\nYes\nNo\nNo\nNo\nYes\nNo\nYes\nNo\n\n\n93527\n333.61\nCash\nM\nNo\n297000\n38\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nYes\nNo\nNo\nNo\n\n\n88812\n288.76\nCard\nF\nYes\n105000\n34\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\n\n\n61107\n303.14\nCard\nF\nNo\n211000\n30\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n104722\n336.67\nCard\nM\nNo\n167000\n38\nNo\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nNo\n\n\n10915\n124.62\nCard\nF\nYes\n135000\n22\nYes\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nYes\nNo\n\n\n33056\n144.01\nCheque\nM\nYes\n235000\n27\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n78967\n361.66\nCheque\nM\nNo\n145000\n25\nNo\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nNo\n\n\n81825\n250.71\nCard\nF\nYes\n123000\n21\nYes\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n51846\n370.74\nCard\nF\nYes\n140000\n21\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n58288\n144.81\nCard\nM\nYes\n160000\n24\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n30459\n326.75\nCheque\nF\nYes\n205000\n29\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nYes\nNo\nYes\nYes\n\n\n70018\n427.99\nCheque\nF\nNo\n258000\n39\nYes\nNo\nYes\nNo\nNo\nYes\nYes\nYes\nNo\nYes\nYes\n\n\n62789\n151.60\nCash\nM\nYes\n140000\n25\nYes\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\nNo\n\n\n102887\n333.15\nCheque\nM\nYes\n203000\n46\nYes\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\n\n\n83102\n480.07\nCash\nM\nNo\n146000\n47\nNo\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nYes\nNo\n\n\n57268\n250.26\nCash\nM\nNo\n220000\n25\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\n\n\n78139\n485.57\nCash\nM\nYes\n252000\n29\nYes\nNo\nNo\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n86331\n454.52\nCard\nM\nYes\n103000\n29\nNo\nNo\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nYes\nYes\n\n\n31384\n372.05\nCard\nM\nYes\n275000\n27\nNo\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n63996\n137.35\nCheque\nF\nYes\n226000\n23\nYes\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\n\n\n99025\n290.79\nCard\nM\nNo\n274000\n42\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n95921\n348.57\nCash\nF\nNo\n233000\n43\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nNo\nYes\n\n\n99164\n306.96\nCash\nM\nYes\n216000\n26\nNo\nNo\nYes\nNo\nNo\nNo\nNo\nNo\nYes\nNo\nYes\n\n\n\n\n\n\nread_csv(\"a,b,c\n1,2,3\n4,5,6\")\n\nRows: 2 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl (3): a, b, c\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nA spec_tbl_df: 2 × 3\n\n\na\nb\nc\n\n\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n1\n2\n3\n\n\n4\n5\n6\n\n\n\n\n\n\nread_csv(\"the first line of metadata\nthe second line of metadata\n1,2,3\",skip=2)\n\nRows: 0 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): 1, 2, 3\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\n\nA spec_tbl_df: 0 × 3\n\n\n1\n2\n3\n\n\n<chr>\n<chr>\n<chr>\n\n\n\n\n\n\n\nreadr中skip能够将前几行的数据直接跳过\n\nparse_double(\"1.2\")\n\n1.2\n\n\nreadr中使用了“地区”这一个概念，能够按照不同的地区解析选项的一个对象。\n\nparse_double(\"1,23\",locale = locale(decimal_mark = \",\"))\n\n1.23\n\n\n\nparse_number(\"20%\")\n\n20\n\n\nparse_number能够忽略其他非数值型字符。可用于处理百分比或货币\n\n\n使用lubridate处理时间\n\n创建时间或日期\n\nlibrary(tidyverse)\nlibrary(lubridate)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n✔ tibble  3.1.8     ✔ purrr   0.3.4\n✔ tidyr   1.2.0     ✔ stringr 1.4.1\n✔ readr   2.1.2     ✔ forcats 0.5.1\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ stats::filter() masks dplyr::filter()\n✖ stats::lag()    masks dplyr::lag()\n\n\nAttachement du package : ‘lubridate’\n\n\nLes objets suivants sont masqués depuis ‘package:base’:\n\n    date, intersect, setdiff, union\n\n\n\n\n\ntoday()\n\n2022-10-09\n\n\n\nnow()\n\n[1] \"2022-10-09 14:02:14 CST\"\n\n\n\n\n通过字符串创建\n\nymd(\"2017-10-10\")\n\n2017-10-10\n\n\n\nmdy(\"January 31st,2017\")\n\n2017-01-31\n\n\n\nymd(20170131)\n\n2017-01-31\n\n\n加入一个时区参数\n\nymd(20170101,tz=\"UTC\")\n\n[1] \"2017-01-01 UTC\"\n\n\n\n\n日期时间成分\n\ndatetime<- ymd_hms(\"2016-10-11 12:34:11\")\n\n\nyear(datetime)\n\n2016\n\n\n\nmday(datetime)\n\n11\n\n\n\nyday(datetime)\n\n285\n\n\n\nmday(datetime)\n\n11\n\n\n\nmday()一个月中的第几天;\nyday()一年中的第几天;\nwday()一周中的第几天\n\n\n\n重要的原子向量\n逻辑型\n\n1:10%%3==0\n\n\nFALSEFALSETRUEFALSEFALSETRUEFALSEFALSETRUEFALSE\n\n\n数值型\n\ntypeof(1)\n\n'double'\n\n\n\ntypeof(1L)\n\n'integer'\n\n\n\nx<-sqrt(2)^2\n\n\ntypeof(x)\n\n'double'\n\n\n字符型\n缺失值\n\n强制转换\n\nas.logical()、as.integer()、as.double()等函数转换方式，就是一种强制转换\n\n\nx <- sample(20,100,replace=TRUE)\n\n\ny <- x>10\n\n\nsum(y)\n\n55\n\n\n\nmean(y)\n\n0.55\n\n\n\ntypeof(c(TRUE,1L))\n\n'integer'\n\n\n\n\n\n检验函数\n\nsample(10)+100\n\n\n102101108104107103105109110106\n\n\n\nrunif(10)>0.5\n\n\nFALSEFALSETRUETRUEFALSETRUETRUEFALSETRUEFALSE\n\n\n\n\n\n使用purrr实现迭代\n\nfor 循环\n\ndf <- tibble(\n    a= rnorm(10),\n    b= rnorm(10),\n    c= rnorm(10),\n    d = rnorm(10)\n)\n\n\ndf\n\n\nA tibble: 10 × 4\n\n\na\nb\nc\nd\n\n\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n0.8970158\n0.6873088\n0.80024365\n-0.98162763\n\n\n-0.5751092\n-0.3848371\n1.86547931\n-0.79731893\n\n\n-0.5440100\n0.9645361\n-0.74678144\n-1.06925662\n\n\n-1.7279895\n-1.3180739\n-0.07265774\n-0.04647237\n\n\n-0.8031987\n-0.1179136\n2.07089258\n-0.41219837\n\n\n0.3596368\n-0.4623563\n-0.04209510\n1.24028689\n\n\n0.6522909\n0.4926086\n-2.17560267\n1.26102775\n\n\n-1.8867870\n-0.8284376\n0.15331049\n-1.54542523\n\n\n-2.4719750\n0.5141981\n1.98788444\n-0.04804680\n\n\n-1.4517999\n0.6235135\n-1.96672755\n-1.47042800\n\n\n\n\n\n\nc(mean(df$a),mean(df$b))\n\n\n-0.7551925787274170.0170546566497491\n\n\n每个循环都包含三个部分。\n输出：output<-vector(\"double\",length(x))\n开始循环时候，必须为输出结果分配足够的时间，对循环效率来说比较重要，若在每次迭代时候，都是用c()来保存循环结果，for循环就非常慢\n序列：i in seq_along(df)\n循环体： output[[i]]<-median(df[[i]])\n\nrescale01<-function(x){\n    rng<-range(x,na.rm=TRUE)\n    (x-rng[1])/(rng[2]-rng[1])\n}\n\n\ndf$a<-rescale01(df$a)\n\n\ndf$a\n\n\n10.5630368103017230.5722678090158910.2208333336123450.4953341677409190.8404925934686150.9273595921171680.17369829208771700.302813271637925\n\n\n\nfor (i in seq_along(df)){\n    df[[i]]<-rescale01(df[[i]])\n}\n\nnote:循环列表或数据框，使用[[\n循环的方式： - 元素循环 - 名称循环\n使用索引值进行循环是最常用的方式\n\n\n未知长度的输出\n\nmeans <-c(0,1,2)\noutput<-double()\n\n\nfor (i in seq_along(means)){\n    n <- sample(100,1)\n    output<- c(output,rnorm(n,means[[i]]))\n}\nstr(output)\n\n num [1:253] -0.366 0.595 -0.816 -0.907 -1.424 ...\n\n\n\n\nfor 与函数编程\n\ndf <- tibble(\n    a= rnorm(10),\n    b= rnorm(10),\n    c= rnorm(10),\n    d= rnorm(10)\n)\n\n\noutput <- vector(\"double\",length(df))\n\n\nfor (i in seq_along(df)){\n    output[[i]]=mean(df[[i]])\n}\n\n\noutput\n\n\n-0.392677235398266-0.000158837329926254-0.4658502034898920.344197800836397\n\n\n\ncol_summary<-function(df,fun){\n    out<-vector(\"double\",length(df))\n    for (i in seq_along(df)){\n        out[i]<-fun(df[[i]])\n    }\n    out\n}\n\n\ncol_summary(df,median)\n\n\n-0.512714109408632-0.111337745611366-0.459080347456050.433442364331742\n\n\n\ncol_summary(df,mean)\n\n\n-0.392677235398266-0.000158837329926254-0.4658502034898920.344197800836397\n\n\n将函数作为参数传入。\n\n\n映射函数\n先对于向量进行映射，再对于每个元素进行处理，最后保存结果。 - map()用于输出列表; - map_lgl()用于输出逻辑型向量； - map_int()用于输出整型向量；\n\nlibrary(\"purrr\")\n\n\nmap_dbl(df,mean)\n\na-0.392677235398266b-0.000158837329926254c-0.465850203489892d0.344197800836397\n\n\n\n\n\n使用dplyr处理关系数据\n键：用于处理连接每对数据表的变量称为键。键是唯一能够标识观测的变量。单一变量能够标识一个规则。 - 主键：唯一标识所在数据表中的观测； - 外键：唯一标识另一个数据表的观测\n\nlibrary(\"nycflights13\")\n\n\nplanes\n\n\nA tibble: 3322 × 9\n\n\ntailnum\nyear\ntype\nmanufacturer\nmodel\nengines\nseats\nspeed\nengine\n\n\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<int>\n<int>\n<int>\n<chr>\n\n\n\n\nN10156\n2004\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN102UW\n1998\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN103US\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN104UW\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN10575\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145LR\n2\n55\nNA\nTurbo-fan\n\n\nN105UW\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN107US\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN108UW\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN109UW\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN110UW\n1999\nFixed wing multi engine\nAIRBUS INDUSTRIE\nA320-214\n2\n182\nNA\nTurbo-fan\n\n\nN11106\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11107\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11109\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11113\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11119\n2002\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11121\n2003\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11127\n2003\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11137\n2003\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11140\n2003\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11150\n2003\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11155\n2004\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11164\n2004\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11165\n2004\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11176\n2004\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11181\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11184\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11187\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11189\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11191\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\nN11192\n2005\nFixed wing multi engine\nEMBRAER\nEMB-145XR\n2\n55\nNA\nTurbo-fan\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\nN984DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN985AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN985DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN986AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN986DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN987AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN987DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN988AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN988DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN989AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN989DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN990AT\n2001\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN990DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN991AT\nNA\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN991DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN992AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN992DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN993AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN993DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN994AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN994DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS CORPORATION\nMD-88\n2\n142\nNA\nTurbo-jet\n\n\nN995AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN995DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN996AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN996DL\n1991\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN997AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN997DL\n1992\nFixed wing multi engine\nMCDONNELL DOUGLAS AIRCRAFT CO\nMD-88\n2\n142\nNA\nTurbo-fan\n\n\nN998AT\n2002\nFixed wing multi engine\nBOEING\n717-200\n2\n100\nNA\nTurbo-fan\n\n\nN998DL\n1992\nFixed wing multi engine\nMCDONNELL DOUGLAS CORPORATION\nMD-88\n2\n142\nNA\nTurbo-jet\n\n\nN999DN\n1992\nFixed wing multi engine\nMCDONNELL DOUGLAS CORPORATION\nMD-88\n2\n142\nNA\nTurbo-jet\n\n\n\n\n\n\nplanes %>%\n    count(tailnum)%>%\n    dplyr::filter(n>1)\n\n\nA tibble: 0 × 2\n\n\ntailnum\nn\n\n\n<chr>\n<int>\n\n\n\n\n\n\n\n\n合并连接\n可以将两个表格中的变量进行组合，先通过两个表格的键进行匹配观测，然后在将一个表格中的变量复制到表格中。\n和mutate()函数一样，链接函数也会将变量添加到表格右侧。\n\nhead(flights)\n\n\nA tibble: 6 × 19\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\norigin\ndest\nair_time\ndistance\nhour\nminute\ntime_hour\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<chr>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n\n\n\n\n2013\n1\n1\n517\n515\n2\n830\n819\n11\nUA\n1545\nN14228\nEWR\nIAH\n227\n1400\n5\n15\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n533\n529\n4\n850\n830\n20\nUA\n1714\nN24211\nLGA\nIAH\n227\n1416\n5\n29\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n542\n540\n2\n923\n850\n33\nAA\n1141\nN619AA\nJFK\nMIA\n160\n1089\n5\n40\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n544\n545\n-1\n1004\n1022\n-18\nB6\n725\nN804JB\nJFK\nBQN\n183\n1576\n5\n45\n2013-01-01 05:00:00\n\n\n2013\n1\n1\n554\n600\n-6\n812\n837\n-25\nDL\n461\nN668DN\nLGA\nATL\n116\n762\n6\n0\n2013-01-01 06:00:00\n\n\n2013\n1\n1\n554\n558\n-4\n740\n728\n12\nUA\n1696\nN39463\nEWR\nORD\n150\n719\n5\n58\n2013-01-01 05:00:00\n\n\n\n\n\n\nlibrary(nycflights13)\nflights2<-flights %>%\n    select(year:day,hour,origin,dest,tailnum,carrier)\n\n\nflights2\n\n\nA tibble: 336776 × 8\n\n\nyear\nmonth\nday\nhour\norigin\ndest\ntailnum\ncarrier\n\n\n<int>\n<int>\n<int>\n<dbl>\n<chr>\n<chr>\n<chr>\n<chr>\n\n\n\n\n2013\n1\n1\n5\nEWR\nIAH\nN14228\nUA\n\n\n2013\n1\n1\n5\nLGA\nIAH\nN24211\nUA\n\n\n2013\n1\n1\n5\nJFK\nMIA\nN619AA\nAA\n\n\n2013\n1\n1\n5\nJFK\nBQN\nN804JB\nB6\n\n\n2013\n1\n1\n6\nLGA\nATL\nN668DN\nDL\n\n\n2013\n1\n1\n5\nEWR\nORD\nN39463\nUA\n\n\n2013\n1\n1\n6\nEWR\nFLL\nN516JB\nB6\n\n\n2013\n1\n1\n6\nLGA\nIAD\nN829AS\nEV\n\n\n2013\n1\n1\n6\nJFK\nMCO\nN593JB\nB6\n\n\n2013\n1\n1\n6\nLGA\nORD\nN3ALAA\nAA\n\n\n2013\n1\n1\n6\nJFK\nPBI\nN793JB\nB6\n\n\n2013\n1\n1\n6\nJFK\nTPA\nN657JB\nB6\n\n\n2013\n1\n1\n6\nJFK\nLAX\nN29129\nUA\n\n\n2013\n1\n1\n6\nEWR\nSFO\nN53441\nUA\n\n\n2013\n1\n1\n6\nLGA\nDFW\nN3DUAA\nAA\n\n\n2013\n1\n1\n5\nJFK\nBOS\nN708JB\nB6\n\n\n2013\n1\n1\n6\nEWR\nLAS\nN76515\nUA\n\n\n2013\n1\n1\n6\nLGA\nFLL\nN595JB\nB6\n\n\n2013\n1\n1\n6\nLGA\nATL\nN542MQ\nMQ\n\n\n2013\n1\n1\n6\nEWR\nPBI\nN644JB\nB6\n\n\n2013\n1\n1\n6\nLGA\nMSP\nN971DL\nDL\n\n\n2013\n1\n1\n6\nLGA\nDTW\nN730MQ\nMQ\n\n\n2013\n1\n1\n6\nEWR\nMIA\nN633AA\nAA\n\n\n2013\n1\n1\n6\nJFK\nATL\nN3739P\nDL\n\n\n2013\n1\n1\n6\nEWR\nMIA\nN53442\nUA\n\n\n2013\n1\n1\n6\nEWR\nORD\nN9EAMQ\nMQ\n\n\n2013\n1\n1\n6\nJFK\nSFO\nN532UA\nUA\n\n\n2013\n1\n1\n6\nJFK\nRSW\nN635JB\nB6\n\n\n2013\n1\n1\n6\nJFK\nSJU\nN794JB\nB6\n\n\n2013\n1\n1\n6\nEWR\nATL\nN326NB\nDL\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n9\n30\n21\nLGA\nCHO\nN712EV\nEV\n\n\n2013\n9\n30\n21\nEWR\nCLT\nN16546\nEV\n\n\n2013\n9\n30\n21\nJFK\nDEN\nN807JB\nB6\n\n\n2013\n9\n30\n20\nLGA\nRIC\nN751EV\nEV\n\n\n2013\n9\n30\n21\nJFK\nDCA\nN807MQ\nMQ\n\n\n2013\n9\n30\n21\nJFK\nLAX\nN335AA\nAA\n\n\n2013\n9\n30\n21\nEWR\nPWM\nN12957\nEV\n\n\n2013\n9\n30\n21\nJFK\nSJU\nN633JB\nB6\n\n\n2013\n9\n30\n21\nLGA\nFLL\nN627JB\nB6\n\n\n2013\n9\n30\n21\nEWR\nBOS\nN813UA\nUA\n\n\n2013\n9\n30\n21\nEWR\nMHT\nN10575\nEV\n\n\n2013\n9\n30\n18\nJFK\nBUF\nN906XJ\n9E\n\n\n2013\n9\n30\n22\nLGA\nBGR\nN722EV\nEV\n\n\n2013\n9\n30\n21\nLGA\nBNA\nN532MQ\nMQ\n\n\n2013\n9\n30\n20\nEWR\nSTL\nN12145\nEV\n\n\n2013\n9\n30\n22\nJFK\nPWM\nN193JB\nB6\n\n\n2013\n9\n30\n21\nEWR\nSFO\nN578UA\nUA\n\n\n2013\n9\n30\n20\nJFK\nMCO\nN804JB\nB6\n\n\n2013\n9\n30\n22\nJFK\nBTV\nN318JB\nB6\n\n\n2013\n9\n30\n22\nJFK\nSYR\nN354JB\nB6\n\n\n2013\n9\n30\n22\nJFK\nBUF\nN281JB\nB6\n\n\n2013\n9\n30\n22\nJFK\nROC\nN346JB\nB6\n\n\n2013\n9\n30\n22\nJFK\nBOS\nN565JB\nB6\n\n\n2013\n9\n30\n23\nJFK\nPSE\nN516JB\nB6\n\n\n2013\n9\n30\n18\nLGA\nBNA\nN740EV\nEV\n\n\n2013\n9\n30\n14\nJFK\nDCA\nNA\n9E\n\n\n2013\n9\n30\n22\nLGA\nSYR\nNA\n9E\n\n\n2013\n9\n30\n12\nLGA\nBNA\nN535MQ\nMQ\n\n\n2013\n9\n30\n11\nLGA\nCLE\nN511MQ\nMQ\n\n\n2013\n9\n30\n8\nLGA\nRDU\nN839MQ\nMQ\n\n\n\n\n\n通过mutate()来实现变量的生成，在使用match()来进行变量的匹配\n\nairlines$name[12]\n\n'United Air Lines Inc.'\n\n\nmatch()返回的是airlines$carrier的位置\n\nflights %>%\n    select(-origin,-dest)%>%\n    mutate(name=airlines$name[match(carrier,airlines$carrier)])\n\n\nA tibble: 336776 × 18\n\n\nyear\nmonth\nday\ndep_time\nsched_dep_time\ndep_delay\narr_time\nsched_arr_time\narr_delay\ncarrier\nflight\ntailnum\nair_time\ndistance\nhour\nminute\ntime_hour\nname\n\n\n<int>\n<int>\n<int>\n<int>\n<int>\n<dbl>\n<int>\n<int>\n<dbl>\n<chr>\n<int>\n<chr>\n<dbl>\n<dbl>\n<dbl>\n<dbl>\n<dttm>\n<chr>\n\n\n\n\n2013\n1\n1\n517\n515\n2\n830\n819\n11\nUA\n1545\nN14228\n227\n1400\n5\n15\n2013-01-01 05:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n533\n529\n4\n850\n830\n20\nUA\n1714\nN24211\n227\n1416\n5\n29\n2013-01-01 05:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n542\n540\n2\n923\n850\n33\nAA\n1141\nN619AA\n160\n1089\n5\n40\n2013-01-01 05:00:00\nAmerican Airlines Inc.\n\n\n2013\n1\n1\n544\n545\n-1\n1004\n1022\n-18\nB6\n725\nN804JB\n183\n1576\n5\n45\n2013-01-01 05:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n554\n600\n-6\n812\n837\n-25\nDL\n461\nN668DN\n116\n762\n6\n0\n2013-01-01 06:00:00\nDelta Air Lines Inc.\n\n\n2013\n1\n1\n554\n558\n-4\n740\n728\n12\nUA\n1696\nN39463\n150\n719\n5\n58\n2013-01-01 05:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n555\n600\n-5\n913\n854\n19\nB6\n507\nN516JB\n158\n1065\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n557\n600\n-3\n709\n723\n-14\nEV\n5708\nN829AS\n53\n229\n6\n0\n2013-01-01 06:00:00\nExpressJet Airlines Inc.\n\n\n2013\n1\n1\n557\n600\n-3\n838\n846\n-8\nB6\n79\nN593JB\n140\n944\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n558\n600\n-2\n753\n745\n8\nAA\n301\nN3ALAA\n138\n733\n6\n0\n2013-01-01 06:00:00\nAmerican Airlines Inc.\n\n\n2013\n1\n1\n558\n600\n-2\n849\n851\n-2\nB6\n49\nN793JB\n149\n1028\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n558\n600\n-2\n853\n856\n-3\nB6\n71\nN657JB\n158\n1005\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n558\n600\n-2\n924\n917\n7\nUA\n194\nN29129\n345\n2475\n6\n0\n2013-01-01 06:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n558\n600\n-2\n923\n937\n-14\nUA\n1124\nN53441\n361\n2565\n6\n0\n2013-01-01 06:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n559\n600\n-1\n941\n910\n31\nAA\n707\nN3DUAA\n257\n1389\n6\n0\n2013-01-01 06:00:00\nAmerican Airlines Inc.\n\n\n2013\n1\n1\n559\n559\n0\n702\n706\n-4\nB6\n1806\nN708JB\n44\n187\n5\n59\n2013-01-01 05:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n559\n600\n-1\n854\n902\n-8\nUA\n1187\nN76515\n337\n2227\n6\n0\n2013-01-01 06:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n600\n600\n0\n851\n858\n-7\nB6\n371\nN595JB\n152\n1076\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n600\n600\n0\n837\n825\n12\nMQ\n4650\nN542MQ\n134\n762\n6\n0\n2013-01-01 06:00:00\nEnvoy Air\n\n\n2013\n1\n1\n601\n600\n1\n844\n850\n-6\nB6\n343\nN644JB\n147\n1023\n6\n0\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n602\n610\n-8\n812\n820\n-8\nDL\n1919\nN971DL\n170\n1020\n6\n10\n2013-01-01 06:00:00\nDelta Air Lines Inc.\n\n\n2013\n1\n1\n602\n605\n-3\n821\n805\n16\nMQ\n4401\nN730MQ\n105\n502\n6\n5\n2013-01-01 06:00:00\nEnvoy Air\n\n\n2013\n1\n1\n606\n610\n-4\n858\n910\n-12\nAA\n1895\nN633AA\n152\n1085\n6\n10\n2013-01-01 06:00:00\nAmerican Airlines Inc.\n\n\n2013\n1\n1\n606\n610\n-4\n837\n845\n-8\nDL\n1743\nN3739P\n128\n760\n6\n10\n2013-01-01 06:00:00\nDelta Air Lines Inc.\n\n\n2013\n1\n1\n607\n607\n0\n858\n915\n-17\nUA\n1077\nN53442\n157\n1085\n6\n7\n2013-01-01 06:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n608\n600\n8\n807\n735\n32\nMQ\n3768\nN9EAMQ\n139\n719\n6\n0\n2013-01-01 06:00:00\nEnvoy Air\n\n\n2013\n1\n1\n611\n600\n11\n945\n931\n14\nUA\n303\nN532UA\n366\n2586\n6\n0\n2013-01-01 06:00:00\nUnited Air Lines Inc.\n\n\n2013\n1\n1\n613\n610\n3\n925\n921\n4\nB6\n135\nN635JB\n175\n1074\n6\n10\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n615\n615\n0\n1039\n1100\n-21\nB6\n709\nN794JB\n182\n1598\n6\n15\n2013-01-01 06:00:00\nJetBlue Airways\n\n\n2013\n1\n1\n615\n615\n0\n833\n842\n-9\nDL\n575\nN326NB\n120\n746\n6\n15\n2013-01-01 06:00:00\nDelta Air Lines Inc.\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2013\n9\n30\n2123\n2125\n-2\n2223\n2247\n-24\nEV\n5489\nN712EV\n45\n305\n21\n25\n2013-09-30 21:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2127\n2129\n-2\n2314\n2323\n-9\nEV\n3833\nN16546\n72\n529\n21\n29\n2013-09-30 21:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2128\n2130\n-2\n2328\n2359\n-31\nB6\n97\nN807JB\n213\n1626\n21\n30\n2013-09-30 21:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2129\n2059\n30\n2230\n2232\n-2\nEV\n5048\nN751EV\n45\n292\n20\n59\n2013-09-30 20:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2131\n2140\n-9\n2225\n2255\n-30\nMQ\n3621\nN807MQ\n36\n213\n21\n40\n2013-09-30 21:00:00\nEnvoy Air\n\n\n2013\n9\n30\n2140\n2140\n0\n10\n40\n-30\nAA\n185\nN335AA\n298\n2475\n21\n40\n2013-09-30 21:00:00\nAmerican Airlines Inc.\n\n\n2013\n9\n30\n2142\n2129\n13\n2250\n2239\n11\nEV\n4509\nN12957\n47\n284\n21\n29\n2013-09-30 21:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2145\n2145\n0\n115\n140\n-25\nB6\n1103\nN633JB\n192\n1598\n21\n45\n2013-09-30 21:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2147\n2137\n10\n30\n27\n3\nB6\n1371\nN627JB\n139\n1076\n21\n37\n2013-09-30 21:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2149\n2156\n-7\n2245\n2308\n-23\nUA\n523\nN813UA\n37\n200\n21\n56\n2013-09-30 21:00:00\nUnited Air Lines Inc.\n\n\n2013\n9\n30\n2150\n2159\n-9\n2250\n2306\n-16\nEV\n3842\nN10575\n39\n209\n21\n59\n2013-09-30 21:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2159\n1845\n194\n2344\n2030\n194\n9E\n3320\nN906XJ\n50\n301\n18\n45\n2013-09-30 18:00:00\nEndeavor Air Inc.\n\n\n2013\n9\n30\n2203\n2205\n-2\n2339\n2331\n8\nEV\n5311\nN722EV\n61\n378\n22\n5\n2013-09-30 22:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2207\n2140\n27\n2257\n2250\n7\nMQ\n3660\nN532MQ\n97\n764\n21\n40\n2013-09-30 21:00:00\nEnvoy Air\n\n\n2013\n9\n30\n2211\n2059\n72\n2339\n2242\n57\nEV\n4672\nN12145\n120\n872\n20\n59\n2013-09-30 20:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\n2231\n2245\n-14\n2335\n2356\n-21\nB6\n108\nN193JB\n48\n273\n22\n45\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2233\n2113\n80\n112\n30\n42\nUA\n471\nN578UA\n318\n2565\n21\n13\n2013-09-30 21:00:00\nUnited Air Lines Inc.\n\n\n2013\n9\n30\n2235\n2001\n154\n59\n2249\n130\nB6\n1083\nN804JB\n123\n944\n20\n1\n2013-09-30 20:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2237\n2245\n-8\n2345\n2353\n-8\nB6\n234\nN318JB\n43\n266\n22\n45\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2240\n2245\n-5\n2334\n2351\n-17\nB6\n1816\nN354JB\n41\n209\n22\n45\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2240\n2250\n-10\n2347\n7\n-20\nB6\n2002\nN281JB\n52\n301\n22\n50\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2241\n2246\n-5\n2345\n1\n-16\nB6\n486\nN346JB\n47\n264\n22\n46\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2307\n2255\n12\n2359\n2358\n1\nB6\n718\nN565JB\n33\n187\n22\n55\n2013-09-30 22:00:00\nJetBlue Airways\n\n\n2013\n9\n30\n2349\n2359\n-10\n325\n350\n-25\nB6\n745\nN516JB\n196\n1617\n23\n59\n2013-09-30 23:00:00\nJetBlue Airways\n\n\n2013\n9\n30\nNA\n1842\nNA\nNA\n2019\nNA\nEV\n5274\nN740EV\nNA\n764\n18\n42\n2013-09-30 18:00:00\nExpressJet Airlines Inc.\n\n\n2013\n9\n30\nNA\n1455\nNA\nNA\n1634\nNA\n9E\n3393\nNA\nNA\n213\n14\n55\n2013-09-30 14:00:00\nEndeavor Air Inc.\n\n\n2013\n9\n30\nNA\n2200\nNA\nNA\n2312\nNA\n9E\n3525\nNA\nNA\n198\n22\n0\n2013-09-30 22:00:00\nEndeavor Air Inc.\n\n\n2013\n9\n30\nNA\n1210\nNA\nNA\n1330\nNA\nMQ\n3461\nN535MQ\nNA\n764\n12\n10\n2013-09-30 12:00:00\nEnvoy Air\n\n\n2013\n9\n30\nNA\n1159\nNA\nNA\n1344\nNA\nMQ\n3572\nN511MQ\nNA\n419\n11\n59\n2013-09-30 11:00:00\nEnvoy Air\n\n\n2013\n9\n30\nNA\n840\nNA\nNA\n1020\nNA\nMQ\n3531\nN839MQ\nNA\n431\n8\n40\n2013-09-30 08:00:00\nEnvoy Air\n\n\n\n\n\n\nhead(airlines)\n\n\nA tibble: 6 × 2\n\n\ncarrier\nname\n\n\n<chr>\n<chr>\n\n\n\n\n9E\nEndeavor Air Inc.\n\n\nAA\nAmerican Airlines Inc.\n\n\nAS\nAlaska Airlines Inc.\n\n\nB6\nJetBlue Airways\n\n\nDL\nDelta Air Lines Inc.\n\n\nEV\nExpressJet Airlines Inc.\n\n\n\n\n\n\n\n理解连接\n匹配就是实现在两行之间的交集。\n\n\n内连接\n内连接最简单的一种连接，只要两个观测的键是相等的。内连接就可以进行匹配。\n\n\n字符串组合\n组合两个或更多的字符串可以使用str_c()函数\n\nlibrary(stringr)\n\n\nstr_c(\"x\",\"y\")\n\n'xy'\n\n\n基础匹配\n\nx <- c(\"apple\",\"banana\",\"pear\")\n\n\nstr_view(x,\"an\")\n\n\n\n    \n        \n        \n\n\n    \n    \n        \n\n    \n\n\n\n\n\n匹配检测\n\nstr_detect(x,\"an\")\n\n\nFALSETRUEFALSE\n\n\n\nsum(str_detect(words,\"^t\"))\n\n65\n\n\n有多少个以t开头的常用单词\n\nwords\n\n\n\n'a''able''about''absolute''accept''account''achieve''across''act''active''actual''add''address''admit''advertise''affect''afford''after''afternoon''again''against''age''agent''ago''agree''air''all''allow''almost''along''already''alright''also''although''always''america''amount''and''another''answer''any''apart''apparent''appear''apply''appoint''approach''appropriate''area''argue''arm''around''arrange''art''as''ask''associate''assume''at''attend''authority''available''aware''away''awful''baby''back''bad''bag''balance''ball''bank''bar''base''basis''be''bear''beat''beauty''because''become''bed''before''begin''behind''believe''benefit''best''bet''between''big''bill''birth''bit''black''bloke''blood''blow''blue''board''boat''body''book''both''bother''bottle''bottom''box''boy''break''brief''brilliant''bring''britain''brother''budget''build''bus''business''busy''but''buy''by''cake''call''can''car''card''care''carry''case''cat''catch''cause''cent''centre''certain''chair''chairman''chance''change''chap''character''charge''cheap''check''child''choice''choose''Christ''Christmas''church''city''claim''class''clean''clear''client''clock''close''closes''clothe''club''coffee''cold''colleague''collect''college''colour''come''comment''commit''committee''common''community''company''compare''complete''compute''concern''condition''confer''consider''consult''contact''continue''contract''control''converse''cook''copy''corner''correct''cost''could''council''count''country''county''couple'⋯'society''some''son''soon''sorry''sort''sound''south''space''speak''special''specific''speed''spell''spend''square''staff''stage''stairs''stand''standard''start''state''station''stay''step''stick''still''stop''story''straight''strategy''street''strike''strong''structure''student''study''stuff''stupid''subject''succeed''such''sudden''suggest''suit''summer''sun''sunday''supply''support''suppose''sure''surprise''switch''system''table''take''talk''tape''tax''tea''teach''team''telephone''television''tell''ten''tend''term''terrible''test''than''thank''the''then''there''therefore''they''thing''think''thirteen''thirty''this''thou''though''thousand''three''through''throw''thursday''tie''time''to''today''together''tomorrow''tonight''too''top''total''touch''toward''town''trade''traffic''train''transport''travel''treat''tree''trouble''true''trust''try''tuesday''turn''twelve''twenty''two''type''under''understand''union''unit''unite''university''unless''until''up''upon''use''usual''value''various''very''video''view''village''visit''vote''wage''wait''walk''wall''want''war''warm''wash''waste''watch''water''way''we''wear''wednesday''wee''week''weigh''welcome''well''west''what''when''where''whether''which''while''white''who''whole''why''wide''wife''will''win''wind''window''wish''with''within''without''woman''wonder''wood''word''work''world''worry''worse''worth''would''write''wrong''year''yes''yesterday''yet''you''young'\n\n\n\nlength(sentences)\n\n720\n\n\n\nhead(sentences)\n\n\n'The birch canoe slid on the smooth planks.''Glue the sheet to the dark blue background.''It\\'s easy to tell the depth of a well.''These days a chicken leg is a rare dish.''Rice is often served in round bowls.''The juice of lemons makes fine punch.'\n\n\n\n\n\n用forecast处理因子\n\nlibrary(tidyverse)\nlibrary(forcats)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n✔ tibble  3.1.8     ✔ purrr   0.3.4\n✔ tidyr   1.2.0     ✔ forcats 0.5.1\n✔ readr   2.1.2     \n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ stats::filter() masks dplyr::filter()\n✖ stats::lag()    masks dplyr::lag()\n\n\n\n\nx1 <- c(\"dec\",\"apr\",\"jan\",\"mar\")\n\n\nx2 <- c(\"dec\",\"apr\",\"jam\",\"mar\")\n\n\nsort(x1)\n\n\n'apr''dec''jan''mar'\n\n\n\nmonth_levels <-c(\"jan\", \"feb\", \"mar\", \"apr\", \"may\",\"jun\",\"jul\",\"aug\",\"sep\",\"oct\",\"nov\",\"dec\")\n\n\ny1 <- factor(x1,levels=month_levels)\n\n\nsort(y1)\n\n\njanmaraprdec\n\n\n    \n        Levels:\n    \n    \n    'jan''feb''mar''apr''may''jun''jul''aug''sep''oct''nov''dec'\n\n\n\n\ny2<-factor(x2,levels=month_levels)\n\n\ny2\n\n\ndecapr<NA>mar\n\n\n    \n        Levels:\n    \n    \n    'jan''feb''mar''apr''may''jun''jul''aug''sep''oct''nov''dec'\n\n\n\n\ngss_cat\n\n\nA tibble: 21483 × 9\n\n\nyear\nmarital\nage\nrace\nrincome\npartyid\nrelig\ndenom\ntvhours\n\n\n<int>\n<fct>\n<int>\n<fct>\n<fct>\n<fct>\n<fct>\n<fct>\n<int>\n\n\n\n\n2000\nNever married\n26\nWhite\n$8000 to 9999\nInd,near rep\nProtestant\nSouthern baptist\n12\n\n\n2000\nDivorced\n48\nWhite\n$8000 to 9999\nNot str republican\nProtestant\nBaptist-dk which\nNA\n\n\n2000\nWidowed\n67\nWhite\nNot applicable\nIndependent\nProtestant\nNo denomination\n2\n\n\n2000\nNever married\n39\nWhite\nNot applicable\nInd,near rep\nOrthodox-christian\nNot applicable\n4\n\n\n2000\nDivorced\n25\nWhite\nNot applicable\nNot str democrat\nNone\nNot applicable\n1\n\n\n2000\nMarried\n25\nWhite\n$20000 - 24999\nStrong democrat\nProtestant\nSouthern baptist\nNA\n\n\n2000\nNever married\n36\nWhite\n$25000 or more\nNot str republican\nChristian\nNot applicable\n3\n\n\n2000\nDivorced\n44\nWhite\n$7000 to 7999\nInd,near dem\nProtestant\nLutheran-mo synod\nNA\n\n\n2000\nMarried\n44\nWhite\n$25000 or more\nNot str democrat\nProtestant\nOther\n0\n\n\n2000\nMarried\n47\nWhite\n$25000 or more\nStrong republican\nProtestant\nSouthern baptist\n3\n\n\n2000\nMarried\n53\nWhite\n$25000 or more\nNot str democrat\nProtestant\nOther\n2\n\n\n2000\nMarried\n52\nWhite\n$25000 or more\nInd,near rep\nNone\nNot applicable\nNA\n\n\n2000\nMarried\n52\nWhite\n$25000 or more\nStrong democrat\nProtestant\nSouthern baptist\n1\n\n\n2000\nMarried\n51\nWhite\n$25000 or more\nStrong republican\nProtestant\nUnited methodist\nNA\n\n\n2000\nDivorced\n52\nWhite\n$25000 or more\nInd,near dem\nNone\nNot applicable\n1\n\n\n2000\nMarried\n40\nBlack\n$25000 or more\nStrong democrat\nProtestant\nBaptist-dk which\n7\n\n\n2000\nWidowed\n77\nWhite\nNot applicable\nStrong republican\nJewish\nNot applicable\nNA\n\n\n2000\nNever married\n44\nWhite\n$25000 or more\nIndependent\nNone\nNot applicable\n3\n\n\n2000\nMarried\n40\nWhite\n$10000 - 14999\nNot str democrat\nCatholic\nNot applicable\n3\n\n\n2000\nMarried\n45\nBlack\nNot applicable\nIndependent\nProtestant\nUnited methodist\nNA\n\n\n2000\nMarried\n48\nWhite\n$25000 or more\nInd,near dem\nCatholic\nNot applicable\n1\n\n\n2000\nMarried\n49\nWhite\nRefused\nStrong republican\nProtestant\nUnited methodist\n2\n\n\n2000\nNever married\n19\nWhite\nNot applicable\nIndependent\nNone\nNot applicable\n2\n\n\n2000\nWidowed\n54\nWhite\n$25000 or more\nInd,near rep\nChristian\nNot applicable\n1\n\n\n2000\nWidowed\n82\nWhite\nNot applicable\nNot str democrat\nProtestant\nOther\n3\n\n\n2000\nWidowed\n83\nWhite\nNot applicable\nStrong democrat\nProtestant\nEpiscopal\nNA\n\n\n2000\nWidowed\n89\nWhite\nNot applicable\nNot str democrat\nProtestant\nOther lutheran\n4\n\n\n2000\nWidowed\n88\nWhite\nNot applicable\nStrong republican\nProtestant\nAfr meth ep zion\nNA\n\n\n2000\nDivorced\n72\nWhite\nNot applicable\nStrong democrat\nProtestant\nSouthern baptist\n7\n\n\n2000\nWidowed\n82\nWhite\nNot applicable\nIndependent\nProtestant\nAm bapt ch in usa\nNA\n\n\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n⋮\n\n\n2014\nDivorced\n38\nWhite\n$3000 to 3999\nNot str republican\nProtestant\nOther\n1\n\n\n2014\nWidowed\n46\nWhite\n$25000 or more\nStrong democrat\nNone\nNot applicable\n2\n\n\n2014\nMarried\n49\nWhite\nNot applicable\nInd,near rep\nProtestant\nOther\n6\n\n\n2014\nNever married\n34\nWhite\n$25000 or more\nIndependent\nProtestant\nUnited methodist\n2\n\n\n2014\nMarried\n54\nWhite\nNot applicable\nIndependent\nProtestant\nOther\nNA\n\n\n2014\nMarried\n34\nWhite\n$15000 - 19999\nInd,near dem\nBuddhism\nNot applicable\n1\n\n\n2014\nMarried\n69\nWhite\nNot applicable\nInd,near dem\nJewish\nNot applicable\n3\n\n\n2014\nDivorced\n36\nWhite\nNot applicable\nIndependent\nNone\nNot applicable\n0\n\n\n2014\nMarried\n65\nWhite\n$25000 or more\nNot str democrat\nNone\nNot applicable\n2\n\n\n2014\nMarried\n48\nWhite\n$20000 - 24999\nStrong democrat\nProtestant\nOther\n0\n\n\n2014\nMarried\n38\nWhite\n$10000 - 14999\nNot str democrat\nProtestant\nNo denomination\n2\n\n\n2014\nNever married\n30\nWhite\n$4000 to 4999\nInd,near dem\nNone\nNot applicable\n2\n\n\n2014\nMarried\n48\nWhite\n$8000 to 9999\nNot str republican\nCatholic\nNot applicable\n0\n\n\n2014\nDivorced\n49\nWhite\n$25000 or more\nInd,near rep\nOther\nNot applicable\n2\n\n\n2014\nMarried\n54\nWhite\n$25000 or more\nInd,near dem\nProtestant\nOther\nNA\n\n\n2014\nMarried\n49\nWhite\n$25000 or more\nNot str republican\nCatholic\nNot applicable\nNA\n\n\n2014\nMarried\n53\nWhite\n$25000 or more\nNot str democrat\nNone\nNot applicable\n0\n\n\n2014\nMarried\n52\nWhite\n$25000 or more\nNot str democrat\nNone\nNot applicable\n1\n\n\n2014\nWidowed\n82\nWhite\nNot applicable\nStrong democrat\nProtestant\nOther\n2\n\n\n2014\nMarried\n63\nWhite\nNot applicable\nInd,near dem\nNo answer\nNo answer\n2\n\n\n2014\nDivorced\n54\nWhite\n$25000 or more\nInd,near rep\nCatholic\nNot applicable\n3\n\n\n2014\nMarried\n62\nWhite\n$25000 or more\nInd,near rep\nProtestant\nOther\nNA\n\n\n2014\nNever married\n40\nWhite\n$1000 to 2999\nNot str republican\nNone\nNot applicable\n2\n\n\n2014\nMarried\n33\nWhite\nNot applicable\nIndependent\nChristian\nNo denomination\n0\n\n\n2014\nWidowed\n75\nWhite\nDon't know\nStrong republican\nProtestant\nBaptist-dk which\n4\n\n\n2014\nWidowed\n89\nWhite\nNot applicable\nNot str republican\nProtestant\nUnited methodist\n3\n\n\n2014\nDivorced\n56\nWhite\n$25000 or more\nIndependent\nNone\nNot applicable\n4\n\n\n2014\nNever married\n24\nWhite\n$10000 - 14999\nInd,near dem\nNone\nNot applicable\n4\n\n\n2014\nNever married\n27\nWhite\n$25000 or more\nNot str democrat\nCatholic\nNot applicable\nNA\n\n\n2014\nWidowed\n71\nWhite\n$20000 - 24999\nInd,near rep\nProtestant\nOther\n2\n\n\n\n\n\n\ngss_cat%>%\n    count(race)\n\n\nA tibble: 3 × 2\n\n\nrace\nn\n\n\n<fct>\n<int>\n\n\n\n\nOther\n1959\n\n\nBlack\n3129\n\n\nWhite\n16395\n\n\n\n\n\n\nggplot(gss_cat,aes(race))+\n    geom_bar()\n\n\n\n\n\n修改因子水平\n修改水平可以将图形标签更清晰美观，以满足要求。 最常用的工具是fct_recode()函数，对每个水平进行修改或重新编码\n\ngss_cat%>%count(partyid)\n\n\nA tibble: 10 × 2\n\n\npartyid\nn\n\n\n<fct>\n<int>\n\n\n\n\nNo answer\n154\n\n\nDon't know\n1\n\n\nOther party\n393\n\n\nStrong republican\n2314\n\n\nNot str republican\n3032\n\n\nInd,near rep\n1791\n\n\nIndependent\n4119\n\n\nInd,near dem\n2499\n\n\nNot str democrat\n3690\n\n\nStrong democrat\n3490\n\n\n\n\n\n\ngss_cat%>%mutate(paryid=fct_recode(partyid,\n\"                                  ))%>%count(partyid)"
  },
  {
    "objectID": "posts/DR2.html#模型",
    "href": "posts/DR2.html#模型",
    "title": "Data Science",
    "section": "模型",
    "text": "模型\n一个简单的模型\n\nlibrary(modelr)\noptions(na.action=na.warn)\n\n\nggplot(sim1,aes(x,y))+\n    geom_point()\n\n\n\n\n使用geom_abline()作为接受斜率和截距的参数。\n\nmodels<-tibble(\n    a1=runif(250,-20,40),\n    a2=runif(250,-5,5)\n)\n\n\nggplot(sim1,aes(x,y))+\n    geom_abline(\n        aes(intercept=a1,slope=a2),\n        data=models,alpha=1/4)+\n    geom_point()\n\n\n\n\n\nmodel1<-function(a,data){\n    a[1]+data$x*a[2]\n}\nmodel1(c(7,1.5),sim1)\n\n\n8.58.58.510101011.511.511.513131314.514.514.516161617.517.517.519191920.520.520.5222222\n\n\n\nlm(sim1$y~sim1$x)\n\n\nCall:\nlm(formula = sim1$y ~ sim1$x)\n\nCoefficients:\n(Intercept)       sim1$x  \n      4.221        2.052  \n\n\n计算RMSE\n\nmeasure_distance<-function(mod,data){\n    diff<-data$y-model1(mod,data)\n    sqrt(mean(diff^2))\n\nmeasure_distance(c(7,1.5),sim1)\n\n2.66521206887029\n\n\n\nggplot(sim1,aes(x,y))+\n    geom_abline(\n        aes(intercept=4.221,slope=2.052),\n        data=models,alpha=1/4)+\n    geom_point()\n\n\n\n\n\nsim1_dist<-function(a1,a2){\n    measure_distance(c(a1,a2),sim1)\n}\nmodels<- models%>%\n    mutate(dist=purrr::map2_dbl(a1,a2,sim1_dist))\nmodels\n\n\nA tibble: 250 × 3\n\n\na1\na2\ndist\n\n\n<dbl>\n<dbl>\n<dbl>\n\n\n\n\n25.8939742\n4.12527708\n33.678048\n\n\n27.2648124\n-2.16334729\n12.292729\n\n\n16.4143964\n2.39385045\n14.270203\n\n\n-13.9463849\n2.67610426\n14.992703\n\n\n17.3968330\n3.66866673\n22.653911\n\n\n-13.1896603\n3.44623747\n10.744162\n\n\n26.5019563\n-3.12030982\n16.223277\n\n\n8.6455384\n-3.30895119\n29.487148\n\n\n5.4990308\n-3.50583991\n33.422655\n\n\n21.5492480\n4.16330328\n29.648394\n\n\n18.8202022\n3.37972138\n22.335762\n\n\n-4.3836592\n2.46169729\n6.798642\n\n\n0.4930800\n-2.57624917\n32.135936\n\n\n23.5192233\n2.02614316\n19.276733\n\n\n3.7050483\n-3.01259516\n31.951123\n\n\n-13.6400263\n-4.65592229\n58.081509\n\n\n12.0623313\n-1.62711042\n16.422826\n\n\n-8.6369843\n-0.04256578\n25.196531\n\n\n5.2793188\n1.08157663\n5.529676\n\n\n0.7286800\n0.20832003\n14.775987\n\n\n22.7578678\n4.63078748\n33.618505\n\n\n22.4392158\n3.28054053\n25.315759\n\n\n20.3574835\n3.61268840\n25.216336\n\n\n34.3444000\n-4.06730493\n18.051918\n\n\n3.6715133\n-3.53752878\n35.231382\n\n\n-2.3516494\n-3.74150671\n41.935432\n\n\n2.6082739\n1.13104592\n7.488525\n\n\n0.2349872\n2.80973265\n3.050534\n\n\n-3.7599907\n3.65673924\n5.148361\n\n\n-12.1784598\n2.99719831\n11.717719\n\n\n⋮\n⋮\n⋮\n\n\n-18.25429630\n1.0628285\n28.137680\n\n\n28.47720882\n-1.4273278\n11.428741\n\n\n-1.69409033\n-2.3813102\n32.931184\n\n\n-11.12420415\n-1.7351186\n37.831324\n\n\n-6.89637993\n-0.7360245\n27.715933\n\n\n14.06403183\n-3.1103001\n23.839734\n\n\n26.15645752\n-0.5099415\n10.965506\n\n\n30.70797157\n-1.9196064\n12.498618\n\n\n34.76040949\n-3.6252376\n16.457746\n\n\n2.33044673\n-0.1417064\n15.456574\n\n\n10.33221718\n-2.5549683\n23.434356\n\n\n7.01245683\n0.7628761\n6.056801\n\n\n-16.02814821\n1.9522219\n20.905743\n\n\n29.04988048\n3.9941010\n36.011765\n\n\n28.84471810\n0.5693023\n17.145523\n\n\n12.01410521\n3.4039627\n15.862597\n\n\n-0.01231243\n-4.1196387\n42.142797\n\n\n-2.27586546\n-4.7444047\n48.067782\n\n\n19.81414753\n-2.5600360\n16.596301\n\n\n-12.22730105\n-0.1983924\n29.614875\n\n\n2.01877660\n2.5634932\n2.658604\n\n\n10.00248966\n-4.8671421\n37.958676\n\n\n-1.44763710\n3.4218653\n4.848906\n\n\n-0.46312617\n4.0839558\n8.988031\n\n\n-10.91154613\n-4.8939085\n56.981015\n\n\n9.77806405\n-3.7767585\n31.415544\n\n\n26.40300828\n1.1381687\n17.488052\n\n\n-5.05738873\n-1.4701986\n30.455595\n\n\n-3.32008007\n2.4790783\n5.741700\n\n\n13.22413116\n2.0478461\n9.231690\n\n\n\n\n\n\nggplot(sim1,aes(x,y))+\n    geom_point(size=2,color=\"grey30\")+\n    geom_abline(\n        aes(intercept=a1,slope=a2,color=-dist),\n        data=dplyr::filter(models,rank(dist)<=10)\n    )\n\n\n\n\n\nbest<-optim(c(0,0),measure_distance,data=sim1)\nbest$par\n\n\n4.222247799614622.05120381317836\n\n\n\nlm(sim1$y~sim1$x)\n\n\nCall:\nlm(formula = sim1$y ~ sim1$x)\n\nCoefficients:\n(Intercept)       sim1$x  \n      4.221        2.052  \n\n\n\nggplot(sim1,aes(x,y))+\n    geom_abline(\n        aes(intercept=best$par[1],slope=best$par[2]),\n        data=models,alpha=1/4)+\n    geom_point()\n\n\n\n\n\n残差\n\nm1<-lm(sim1$y~sim1$x)\ndf\n\n\nsim1<-sim1%>%\n    add_residuals(sim1)\nsim1"
  },
  {
    "objectID": "posts/optim.html",
    "href": "posts/optim.html",
    "title": "optimization in python",
    "section": "",
    "text": "import numpy as np\nfrom scipy.optimize import minimize\n \n# 定义目标函数\ndef func(x, sign=1.0):\n    # scipy.minimize默认求最小，求max时只需要sign*(-1)，跟下面的args对应\n    return sign * (x[0] ** 2 + x[1] ** 2 + x[2] ** 2)\n    # return sign * (np.power(x[0], 2) + np.power(x[1], 2) + np.power(x[2], 2))\n \n# 定义目标函数的梯度\ndef func_deriv(x, sign=1):\n    jac_x0 = sign * (2 * x[0])\n    jac_x1 = sign * (2 * x[1])\n    jac_x2 = sign * (2 * x[2])\n    return np.array([jac_x0, jac_x1, jac_x2])\n \n# 定义约束条件\n# constraints are defined as a sequence of dictionaries, with keys type, fun and jac.\ncons = (\n    {'type': 'eq',\n     'fun': lambda x: np.array([x[0] + 2 * x[1] - x[2] - 4]),\n     'jac': lambda x: np.array([1, 2, -1])},\n \n    {'type': 'eq',\n     'fun': lambda x: np.array([x[0] - x[1] - x[2] + 2]),\n     'jac': lambda x: np.array([1, -1, -1])}\n    )\n \n# 定义初始解x0\nx0 = np.array([-1.0, 1.0, 1.0])\n \n# 使用SLSQP算法求解\nres = minimize(func, x0 , args=(1,), jac=func_deriv, method='SLSQP', options={'disp': True},constraints=cons)\n# args是传递给目标函数和偏导的参数，此例中为1，求min问题。args=-1时是求解max问题\nprint(res.x)\n\nOptimization terminated successfully    (Exit mode 0)\n            Current function value: 4.000000000000002\n            Iterations: 2\n            Function evaluations: 2\n            Gradient evaluations: 2\n[-2.22044605e-16  2.00000000e+00 -6.66133815e-16]\n\n\n\nfrom scipy.optimize import minimize\nfrom numpy.random import rand\n\n# 两个未知数\ndef objective(x):\n    return x[0]**2.0 + x[1]**2\n\nr_min,r_max = -5.0,5.0\n\n# 生成随机初始值\npt = r_min + rand(3) * (r_max - r_min)\n\nresult = minimize(objective,pt,method='L-BFGS-B')\n\nprint(\"Status: %s\" %result['message'])\nprint(\"Total Evaluation: %d\" %result['nfev'])\n\nsolution = result['x']\nevaluation = objective(solution)\nprint(\"Solution:f(%s) = %.5f\" %(solution,evaluation))\nprint(result)\n\nStatus: CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL\nTotal Evaluation: 12\nSolution:f([ 3.61107754e-08  7.45137776e-08 -3.83671977e+00]) = 0.00000\n      fun: 6.85629114893573e-15\n hess_inv: <3x3 LbfgsInvHessProduct with dtype=float64>\n      jac: array([8.22215507e-08, 1.59027555e-07, 0.00000000e+00])\n  message: 'CONVERGENCE: NORM_OF_PROJECTED_GRADIENT_<=_PGTOL'\n     nfev: 12\n      nit: 2\n     njev: 3\n   status: 0\n  success: True\n        x: array([ 3.61107754e-08,  7.45137776e-08, -3.83671977e+00])\n\n\n\npt\n\narray([ 0.49348315,  2.45112577, -3.83671977])\n\n\n\ndef object"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog",
    "section": "",
    "text": "Stamen Toner graph\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\npython再入门\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\njupyter 中的魔法函数\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n如何使用Julia画AUC曲线\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\ndata-mining binning\n\n\n\n\n\n\n\n\n\n\n \n\n\n\n\n  \n\n\n\n\nPost With Code\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 17, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n在R中绘制中国地图\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing quarto\n\n\n\n\n\n\n\n\n\n\n\n\nFeb 17, 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nadvanced ggplot\n\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nFeb 15, 2023\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n如何在quarto中输入不同的代码\n\n\n\n\n\n\n\ndata visualization\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\n\n\nJan 19, 2023\n\n\nJianqi Huang\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ntermplot\n\n\n\n\n\n\n\n\n\n\n\n\nDec 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nout of bag estimation\n\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Science\n\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\noptimization in python\n\n\n\n\n\n\n\n\n\n\n\n\nNov 11, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nsimulation and matplot\n\n\n\n\n\n\n\n\n\n\n\n\nOct 12, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAUC curve plot\n\n\n\n\n\n\n\n\n\n\n\n\nOct 11, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSocial network analysis in python\n\n\n\n\n\n\n\n\n\n\n\n\nOct 1, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAPI in python\n\n\n\n\n\n\n\n\n\n\n\n\nSep 11, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAssociation analysis\n\n\n\n\n\n\n\n\n\n\n\n\nSep 10, 2022\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "This is a set of some coding project or programming methods. Usually I select to use Python, R and Julia as my programming languages. The order by frequency of usuage and proficiency is R > Python > Julia. And this website also a key to help to master the programming skills in different language."
  },
  {
    "objectID": "about.html#why-create-another-website",
    "href": "about.html#why-create-another-website",
    "title": "About",
    "section": "Why create another website",
    "text": "Why create another website\nThe original website is built by Hugo and Rmarkdown. It has some limits in support the different formats. In the other hand, it reflects the strongness of Quarto. Moreover, It will be more concise to using and building another website for a specific work.\nI found some bug in Quarto that the dynamic plot couldn’t display. If you know how to fix it I will appreciate for your annotation. My email: cheinchi@163.com."
  }
]